[{"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js":"1","D:\\frontend\\Projects\\picully\\src\\App.js":"2","D:\\frontend\\Projects\\picully\\src\\index.js":"3","D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js":"4","D:\\frontend\\Projects\\picully\\src\\config\\firebase.js":"5","D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js":"6","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js":"7","D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js":"8","D:\\frontend\\Projects\\picully\\src\\views\\Home.js":"9","D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js":"10","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js":"11","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js":"12","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js":"13","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js":"14","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js":"15","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js":"16","D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js":"17","D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js":"18","D:\\frontend\\Projects\\picully\\src\\views\\About.js":"19","D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js":"20","D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js":"21","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js":"22","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js":"23","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js":"24","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js":"25","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js":"26","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js":"27","D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js":"28","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js":"29","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js":"30","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js":"31","D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js":"32","D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js":"33","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js":"34","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js":"35","D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js":"36","D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js":"37","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js":"38","D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js":"39","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js":"40"},{"size":5689,"mtime":1619969713296,"results":"41","hashOfConfig":"42"},{"size":2316,"mtime":1619995445283,"results":"43","hashOfConfig":"42"},{"size":699,"mtime":1619977432875,"results":"44","hashOfConfig":"42"},{"size":1827,"mtime":1619968954800,"results":"45","hashOfConfig":"42"},{"size":564,"mtime":1610613192949,"results":"46","hashOfConfig":"42"},{"size":9459,"mtime":1619995309143,"results":"47","hashOfConfig":"42"},{"size":375,"mtime":1610612732841,"results":"48","hashOfConfig":"42"},{"size":10152,"mtime":1619964475507,"results":"49","hashOfConfig":"42"},{"size":1892,"mtime":1619995500065,"results":"50","hashOfConfig":"42"},{"size":159,"mtime":1619961439697,"results":"51","hashOfConfig":"42"},{"size":3181,"mtime":1612431844229,"results":"52","hashOfConfig":"42"},{"size":4886,"mtime":1610613192912,"results":"53","hashOfConfig":"42"},{"size":935,"mtime":1619971795556,"results":"54","hashOfConfig":"42"},{"size":1152,"mtime":1612431828807,"results":"55","hashOfConfig":"42"},{"size":2841,"mtime":1610613192943,"results":"56","hashOfConfig":"42"},{"size":4154,"mtime":1619984269748,"results":"57","hashOfConfig":"42"},{"size":1262,"mtime":1610613192846,"results":"58","hashOfConfig":"42"},{"size":4396,"mtime":1619993916146,"results":"59","hashOfConfig":"42"},{"size":2857,"mtime":1610613193036,"results":"60","hashOfConfig":"42"},{"size":1414,"mtime":1619995385500,"results":"61","hashOfConfig":"42"},{"size":592,"mtime":1610062161101,"results":"62","hashOfConfig":"63"},{"size":725,"mtime":1610621916998,"results":"64","hashOfConfig":"63"},{"size":5099,"mtime":1619961512196,"results":"65","hashOfConfig":"42"},{"size":1238,"mtime":1610613794156,"results":"66","hashOfConfig":"63"},{"size":1083,"mtime":1610625310235,"results":"67","hashOfConfig":"63"},{"size":7832,"mtime":1619989855546,"results":"68","hashOfConfig":"42"},{"size":1571,"mtime":1610614438713,"results":"69","hashOfConfig":"63"},{"size":2457,"mtime":1619978488665,"results":"70","hashOfConfig":"42"},{"size":5300,"mtime":1619984641419,"results":"71","hashOfConfig":"42"},{"size":562,"mtime":1610616106222,"results":"72","hashOfConfig":"63"},{"size":785,"mtime":1610666810237,"results":"73","hashOfConfig":"63"},{"size":2304,"mtime":1619961506777,"results":"74","hashOfConfig":"42"},{"size":2446,"mtime":1610665017034,"results":"75","hashOfConfig":"63"},{"size":439,"mtime":1619962058747,"results":"76","hashOfConfig":"42"},{"size":5283,"mtime":1619978485894,"results":"77","hashOfConfig":"42"},{"size":437,"mtime":1610613192861,"results":"78","hashOfConfig":"42"},{"size":263,"mtime":1610613192877,"results":"79","hashOfConfig":"42"},{"size":5151,"mtime":1619977948499,"results":"80","hashOfConfig":"42"},{"size":5391,"mtime":1619995656478,"results":"81","hashOfConfig":"42"},{"size":7831,"mtime":1619989725115,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iyll2y",{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ekvwxz",{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"95"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js",[],"D:\\frontend\\Projects\\picully\\src\\App.js",["178","179","180","181","182","183","184","185"],"D:\\frontend\\Projects\\picully\\src\\index.js",[],["186","187"],"D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js",["188"],"import React, { useContext, useState, useEffect,createContext } from \"react\"\r\nimport { auth } from \"../config/firebase\"\r\nimport { FirebaseContext } from \"./FirebaseContext\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase/app\";\r\nconst AuthContext = createContext()\r\n\r\n\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const db = firebase.firestore()\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const signup = (email, password, firstname, lastname) => {\r\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\r\n     return db.collection('users').doc(cred.user.uid).set({\r\n       firstName: firstname,\r\n       lastName: lastname,\r\n     })\r\n })\r\n }\r\n\r\n  const login = (email, password) => { \r\n    try {\r\n      auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    catch (err) {\r\n        console.log(\"failed to log in\", err);\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    return auth.signOut()\r\n  }\r\n\r\n  const resetPassword = (email) => {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  const updateEmail = (email) => {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  const updatePassword = (password) => {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","D:\\frontend\\Projects\\picully\\src\\config\\firebase.js",[],["189","190"],"D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js",["191","192","193","194"],"D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js",[],["195","196"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js",[],"D:\\frontend\\Projects\\picully\\src\\views\\Home.js",["197","198","199","200","201","202","203","204","205"],"D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js",["206","207"],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js",["208","209","210","211","212"],"import { useMediaQuery } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\nimport SharedAlbum from '../album/SharedAlbum'\r\nimport NavBar from './NavBar'\r\nimport NavBarSignedIn from './NavBarSignedIn'\r\nimport NavMobile from './NavMobile'\r\nimport NavMobileSignedIn from './NavMobileSignedIn'\r\n\r\nconst NavIndex = () => {\r\n  const [isLargerThan900] = useMediaQuery(\"(min-width: 900px)\")\r\n  const {currentUser} = useAuth()\r\n\r\n  return (\r\n    <>\r\n     { \r\n        (isLargerThan900 && !currentUser) ? <NavBar /> \r\n        : \r\n        (isLargerThan900 && currentUser) ? <NavBarSignedIn /> \r\n        :\r\n        (!isLargerThan900 && !currentUser) ? <NavMobile />\r\n        :\r\n        <NavMobileSignedIn />\r\n     }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavIndex\r\n","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js",[],["213","214"],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js",["215"],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js",["216","217","218","219"],"D:\\frontend\\Projects\\picully\\src\\views\\About.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js",["220","221","222","223","224","225","226","227"],"D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js",["228"],"import { useEffect, useState } from \"react\"\r\nimport { useFire } from \"../contexts/FirebaseContext\"\r\n\r\nconst useAlbums = (id) => {\r\n  \r\n\tconst [albums, setAlbums] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n  const {db} = useFire()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = db.collection('albums').onSnapshot(snapshot => {\r\n\t\t\tsetLoading(true)\r\n\t\t\tconst snapshotAlbums = []\r\n\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\tif(id === doc.owner_id){\r\n\t\t\t\t\tconsole.log(\"TRUE\")\r\n\t\t\t\t}\r\n\t\t\t\tsnapshotAlbums.push({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tsetAlbums(snapshotAlbums)\r\n\t\t\tsetLoading(false)\r\n\t\t})\r\n\r\n\t\treturn unsubscribe\r\n\t}, [])\r\n\r\n\treturn { albums, loading }\r\n}\r\n\r\nexport default useAlbums\r\n",["229","230"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js",["231","232","233","234","235","236","237","238","239"],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js",[],["240","241"],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js",["242","243","244","245"],"\r\nimport { AddIcon } from '@chakra-ui/icons';\r\nimport { Grid, GridItem, Image, Text, Button, CloseButton, Checkbox, Flex, Box, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, useDisclosure, ModalFooter } from '@chakra-ui/react'\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nimport { useFire } from '../../contexts/FirebaseContext';\r\nimport { useUpdate } from '../../contexts/UpdateContext';\r\nimport CreateNewAlbumFromPickedImages from '../forms/CreateNewAlbumFromPickedImages';\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ImageGrid = ({albumId}) => {\r\n  const {db, storage, firebaseFunctions} = useFire()\r\n  const { updateAlbumSharedUrl } = firebaseFunctions;\r\n  const {isUploaded} = useUpdate()\r\n  const {\r\n      imagesInCurrentAlbum,\r\n      imageDeleted, \r\n      setImageDeleted,\r\n      currentAlbum, \r\n      setPickedImages, \r\n      pickedImages, \r\n      albumToShare, \r\n      setAlbumToShare, \r\n      setSharedUrl, \r\n      sharedUrl, \r\n      discardedImages, \r\n      setDiscardedImages,\r\n      setSharedImages} = useUpdate()\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [checkers, setCheckers] = useState([])\r\n\r\n  const navigate = useNavigate()\r\n  const checkBoxPickedRef = useRef(null)\r\n  const checkBoxDiscardRef = useRef(null)\r\n\r\n\r\n\tconst handleDeleteImage = async (img) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    await db.collection('images').doc(img.id).delete();\r\n    await storage.ref(img.path).delete();\r\n    console.log(\"deleted\")\r\n    setImageDeleted(!imageDeleted);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    imagesInCurrentAlbum.forEach((img, i) => {\r\n      let imageItem = {\r\n        id: i,\r\n        image: img,\r\n        picked: false,\r\n        discarded: false,\r\n      }\r\n      setCheckers(prevChecks => [...prevChecks, imageItem])\r\n    })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [imageDeleted])\r\n\r\n  useEffect(() => {\r\n  }, [isUploaded, currentAlbum.id])\r\n\r\n\r\n  const handlePickImage = async (e, item) => {\r\n    let filterChecks = checkers.map(check => check)\r\n    if(filterChecks.includes(item)){\r\n      filterChecks.forEach(obj => {\r\n        if(!obj.picked && obj.id === item.id) {\r\n          obj.picked = true\r\n          setPickedImages(prevItems => [...prevItems, obj.image])\r\n          console.log(pickedImages, \"added\")\r\n        }\r\n        else if(obj.picked && obj.id === item.id ) {\r\n          obj.picked = false\r\n          setPickedImages(pickedImages.filter(obj => !pickedImages.includes(obj)))\r\n          console.log(pickedImages, \"popped\")\r\n        }\r\n      })\r\n    }\r\n    setCheckers(filterChecks)\r\n  }\r\n\r\n\r\n  \r\n  const handleDiscardimage = async (e, item) => {\r\n    let filterChecks = checkers.map(check => check)\r\n    if(filterChecks.includes(item)){\r\n      filterChecks.forEach(obj => {\r\n        if(!obj.discarded && obj.id === item.id) {\r\n          obj.discarded = true\r\n          setDiscardedImages(prevItems => [...prevItems, item])\r\n          console.log(pickedImages, \"added\")\r\n        }\r\n        else if(obj.discarded && obj.id === item.id ) {\r\n          obj.discarded = false\r\n          setDiscardedImages(discardedImages.filter(obj => !discardedImages.includes(obj)))\r\n          console.log(discardedImages, \"popped\")\r\n        }\r\n      })\r\n    }\r\n    setCheckers(filterChecks)\r\n  }\r\n\r\n\r\n  const handleNewAlbum = async () => {\r\n    onOpen()\r\n  }\r\n\r\n  const handleShareAlbum = async (album) => {\r\n    let url = window.location.href\r\n    console.log(url, \"URL\");\r\n    updateAlbumSharedUrl(album.id, url);\r\n    setAlbumToShare(album);\r\n    alert(\"share this url\", url);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Flex key={uuidv4()} justify=\"flex-end\" align=\"center\" width=\"100%\" mt=\"2rem\" mb=\"1rem\">\r\n        <Flex key={uuidv4()} justify=\"space-between\" w=\"400px\">\r\n        <Text key={uuidv4()} >Add images to new album</Text>\r\n        <Button key={uuidv4()}  mr=\"2rem\" w=\"80px\" h=\"30px\" colorScheme=\"teal\" onClick={handleNewAlbum}>\r\n          <AddIcon key={uuidv4()} h={6} w={6} colorScheme=\"teal\" />\r\n        </Button>\r\n          <>\r\n            <Modal\r\n              key={uuidv4()}\r\n              closeOnOverlayClick={false}\r\n              isOpen={isOpen}\r\n              onClose={onClose}\r\n            >\r\n            <ModalOverlay/>\r\n            <ModalContent key={uuidv4()} >\r\n            <Flex key={uuidv4()} justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\r\n              <ModalHeader>Create new album</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n                <Flex justify=\"center\" align=\"center\">\r\n                  <CreateNewAlbumFromPickedImages pictures={pickedImages}/>\r\n               </Flex>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button onClick={onClose}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Flex>\r\n            </ModalContent>\r\n          </Modal>\r\n        </>\r\n      </Flex>\r\n      <Flex justify=\"center\" align=\"center\" w=\"400px\">\r\n          <Button mr=\"1rem\" w=\"80px\" h=\"30px\" colorScheme=\"teal\" onClick={() => handleShareAlbum(currentAlbum)}>\r\n            share\r\n          </Button>     \r\n      </Flex>\r\n    </Flex>\r\n    <Grid \r\n      key={uuidv4()}\r\n      mr=\"1rem\"\r\n      ml=\"1rem\" \r\n      templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} \r\n      templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(3, 1fr)\",]} \r\n      mt=\"2rem\" \r\n      gap={8}\r\n      overflowX=\"hidden\"\r\n      h=\"100%\"\r\n      w=\"100%\"\r\n    >\r\n      {\r\n        imagesInCurrentAlbum !== undefined \r\n        && imagesInCurrentAlbum.length > 0\r\n        && checkers.map((item, i) => (\r\n          <>\r\n            <GridItem \r\n              key={i}\r\n              colSpan={1} \r\n              rowSpan={2} \r\n              overflow=\"hidden\"\r\n            >\r\n            <Flex \r\n              justify=\"space-between\" \r\n              align=\"center\" \r\n              flexBasis=\"0\" \r\n            >\r\n            { currentAlbum !== albumToShare &&\r\n            <CloseButton \r\n              id={item.image.albums[albumId]}  \r\n              size=\"sm\" \r\n              onClick={() => handleDeleteImage(item.image)} \r\n            /> \r\n            }\r\n            <Text\r\n\r\n              isTruncated\r\n              w=\"100%\"\r\n              fontSize=\"sm\" \r\n              textAlign=\"center\" \r\n              p=\"5px\">{item.image.title}\r\n            </Text>\r\n            </Flex>\r\n            <Box>\r\n              <Image\r\n                src={item.image.url} \r\n                alt={item.image.title} \r\n                h=\"100%\" \r\n                w=\"100%\" \r\n                objectFit=\"contain\"\r\n                p=\"5px\" \r\n              />\r\n            </Box>\r\n            <Flex border=\"3px\" justify=\"space-between\" borderColor=\"red\">\r\n              <Checkbox\r\n                ref={checkBoxPickedRef}\r\n                isDisabled={checkers[i].discarded}\r\n                isChecked={checkers[i].picked}\r\n                ml=\"5px\"\r\n                size=\"md\"\r\n                id={item.image.id}\r\n                colorScheme=\"green\"\r\n                onChange={(e) => handlePickImage(e, item)}\r\n              >\r\n                pick\r\n              </Checkbox>\r\n              <Checkbox\r\n                ref={checkBoxDiscardRef}\r\n                isDisabled={checkers[i].picked}\r\n                isChecked={checkers[i].discarded}\r\n                ml=\"5px\"\r\n                size=\"md\"\r\n                id={item.image.id}\r\n                colorScheme=\"red\"\r\n                onChange={(e) => handleDiscardimage(e, item)}\r\n              >\r\n                Discard\r\n              </Checkbox> \r\n            </Flex>\r\n          </GridItem>\r\n          </>\r\n        ))\r\n      }\r\n    </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageGrid","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js",["246"],"import {Flex, Link, Grid, GridItem, Text, Image } from '@chakra-ui/react'\r\nimport tempImage from '../../images/dog.jpg'\r\nimport {Link as ReactLink} from 'react-router-dom'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\nimport { useEffect } from 'react'\r\n\r\nconst AlbumGrid = () => {\r\n  const {currentUserAlbums, setCurrentAlbum} = useUpdate()\r\n\r\n  useEffect(() => {\r\n    console.log(currentUserAlbums);\r\n  }, [])\r\n\r\n  const setAlbumClicked = (album) => {\r\n    console.log(\"CLICK\", currentUserAlbums);\r\n    setCurrentAlbum(album);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid \r\n        pr=\"10px\" \r\n        pl=\"10px\" \r\n        pb=\"10px\" \r\n        templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} \r\n        templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} \r\n        gap={3} h=\"600px\" \r\n      >\r\n      {\r\n        currentUserAlbums !== undefined && currentUserAlbums.length && \r\n        currentUserAlbums.map((album, index) => (\r\n          <Link \r\n          as={ReactLink} \r\n          to={`/home/albums/${album.slug}`} \r\n          key={index}\r\n          onClick={() => setAlbumClicked(album)}\r\n          textDecoration=\"none\" \r\n          _hover={{backgroundColor: \"lightgrey\"}}\r\n          > \r\n            <GridItem \r\n            p=\"2rem\" \r\n            colSpan={1} \r\n            overflow=\"hidden\" >\r\n              <Flex \r\n              justify=\"center\" \r\n              align=\"center\" \r\n              direction=\"column\"\r\n              >\r\n              <Text\r\n              isTruncated\r\n              as=\"i\" \r\n              fontSize=\"sm\" \r\n              textAlign=\"center\" \r\n              p=\"5px\" mt=\"1rem\" \r\n              textDecor=\"none\"\r\n              >\r\n                name: {album.title}\r\n              </Text>\r\n              <Text\r\n               isTruncated\r\n              as=\"i\" \r\n              fontSize=\"sm\" \r\n              textAlign=\"center\" \r\n              p=\"5px\" \r\n              mt=\"1rem\" \r\n              textDecor=\"none\"\r\n              >\r\n                description: {album.description}\r\n              </Text>\r\n              <Image \r\n                src={tempImage} \r\n                alt={album.name} \r\n                h=\"400px\" \r\n                w=\"300px\" \r\n                objectFit=\"contain\"\r\n                />\r\n              </Flex>\r\n            </GridItem>\r\n          </Link>\r\n        ))\r\n      }\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AlbumGrid\r\n","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js",["247"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UploadImage from '../forms/UploadImage'\r\n\r\nimport { Flex, Heading, Input, Spinner, Text } from '@chakra-ui/react'\r\n\r\nimport ImageGrid from '../pictureItems/ImageGrid'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport {GrEdit} from 'react-icons/gr'\r\nimport {CheckIcon} from '@chakra-ui/icons'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n\r\n\r\n\r\nconst Album = ({album}) => {\r\n  const {slug} = useParams()\r\n  \r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {firebaseFunctions, db, updatedAlbumTitle} = useFire()\r\n  const { \r\n          imageDeleted,\r\n          isUploaded, \r\n          currentAlbum,\r\n          imagesInCurrentAlbum,\r\n          setCurrentAlbum,\r\n          setImagesInCurrentAlbum} = useUpdate()\r\n  const [editAlbumName, setEditAlbumName] = useState(false)\r\n  const [editActive, setEditActive] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n  (async () => {\r\n    if(currentAlbum === undefined || !currentAlbum){\r\n      await db.collection(\"albums\").where(\"slug\", \"==\", slug).get().then(querySnapshot => {\r\n        let currAlb = \"\";\r\n        querySnapshot.forEach(doc => {\r\n          currAlb = doc.data()\r\n        })\r\n        setCurrentAlbum(currAlb)\r\n      })\r\n    } \r\n  })()\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, [])\r\n\r\n  const fetchImages = async (id) => {\r\n    try {\r\n    await db.collection(\"images\").where(\"albums\", \"array-contains\", db.collection(\"albums\").doc(id)).get().then(snapshot => {\r\n      setIsLoading(true)\r\n      let imgArr = []\r\n      snapshot.forEach(doc => {\r\n        imgArr.push(doc.data())\r\n      })\r\n      setImagesInCurrentAlbum([...imgArr])\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n  catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n   console.log(\"i ran\");\r\n    (async () => {\r\n      setImagesInCurrentAlbum(\"\")\r\n      setIsLoading(true)\r\n\r\n      if(currentAlbum) {\r\n          setCurrentAlbum(currentAlbum)\r\n          fetchImages(currentAlbum.id)\r\n          setIsLoading(false)\r\n      }\r\n      else {\r\n        console.error(\"no id found\")\r\n      }\r\n\r\n    })()\r\n  }, [imageDeleted, isUploaded, currentAlbum])\r\n\r\n\r\n\r\n  const handleEdit = () => {\r\n    setEditActive(true) \r\n  }\r\n\r\n\r\n  const handleChangeAlbumName = (e) => {\r\n      setEditAlbumName(e.target.value)\r\n  }\r\n\r\n  const handleFinishedEdit = async ()=> {\r\n    if(!editAlbumName) {\r\n      return \r\n    }\r\n   await firebaseFunctions.updateAlbumName(currentAlbum.id, editAlbumName)\r\n    setEditActive(false)\r\n  }\r\n\r\n useEffect(() => {\r\n\r\n }, [updatedAlbumTitle])\r\n\r\n \r\n\treturn (\r\n\t\t<>\r\n\r\n     { currentAlbum !== undefined &&\r\n\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { currentAlbum !== undefined && !isLoading &&\r\n        <UploadImage \r\n          albumId={currentAlbum.id !== undefined && currentAlbum.id } \r\n        /> }\r\n        <Flex \r\n          justify=\"center\" \r\n          align=\"center\" \r\n          direction=\"column\"\r\n        >     \r\n          <Text>Edit album name</Text>\r\n            <Flex \r\n              justify=\"space-around\" \r\n              align=\"center\" \r\n            >\r\n              {editActive &&\r\n                  <Flex \r\n                    justify=\"center\" \r\n                    align=\"center\"\r\n                  >\r\n                    <Input \r\n                      type=\"text\" \r\n                      placeholder={editAlbumName} \r\n                      onChange={handleChangeAlbumName}\r\n                      />\r\n                  </Flex> }\r\n              { !editActive ? \r\n              <Flex \r\n                justify=\"center\" \r\n                cursor=\"pointer\" \r\n                align=\"center\" \r\n                _hover={{backgroundColor: \"teal.300\"}} \r\n                >\r\n                <GrEdit \r\n                  color=\"white\" \r\n                  size={\"1.2rem\"} \r\n                  onClick={handleEdit}  />\r\n              </Flex>\r\n              : \r\n              <Flex \r\n              ml=\"1rem\" \r\n              justify=\"center\" \r\n              cursor=\"pointer\" \r\n              align=\"center\">\r\n                <CheckIcon  \r\n                  _hover={{color: \"teal.300\"}}\r\n                  w={6} \r\n                  h={6} \r\n                  color=\"teal.500\" \r\n                  onClick={handleFinishedEdit} \r\n                /> \r\n              </Flex>}\r\n            </Flex>\r\n                <Heading >{editAlbumName ? editAlbumName : currentAlbum.title }</Heading>        \r\n          </Flex>\r\n          {\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (imagesInCurrentAlbum !== undefined && imagesInCurrentAlbum.length \r\n          ? \r\n          <ImageGrid images={imagesInCurrentAlbum} albumId={currentAlbum.id} />\r\n          :\r\n\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n\r\n      </Flex>\r\n      }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Album\r\n\r\n","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js",["248","249"],"import { Grid, GridItem, Heading, Image, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nconst \r\nPreviewImageGrid = ({images, previewURLS}) => {\r\n  return (\r\n    <Grid templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} gap={3} h=\"600px\">\r\n    {\r\n      previewURLS !== undefined && previewURLS.length && \r\n      previewURLS.map((prevItem, index) => (\r\n      \r\n          <GridItem p=\"2rem\" colSpan={1} overflow=\"hidden\" colStart={2} key={index}>\r\n            <Image src={prevItem.url} alt={prevItem.title} h=\"400px\" w=\"300px\" objectFit=\"contain\"/>     \r\n          </GridItem>\r\n      ))\r\n    }\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default PreviewImageGrid\r\n",["250","251"],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js",["252","253","254"],"import { useState, useEffect } from 'react';\r\nimport { boolean } from 'yup/lib/locale';\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useFire } from '../contexts/FirebaseContext';\r\n\r\nconst useUploadImage = (image, albumId, userId) => {\r\n\tconst [uploadProgress, setUploadProgress] = useState(null);\r\n\tconst [uploadedImage, setUploadedImage] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  \r\n\tconst { currentUser } = useAuth()\r\n  const { db, storage, timestamp } = useFire()\r\n\r\n   const onUpload = () => {\r\n\r\n\t\tif (!image) {\r\n\t\t\tsetUploadProgress(null);\r\n\t\t\tsetUploadedImage(null);\r\n\t\t\tsetError(null);\r\n\t\t\tsetIsSuccess(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// reset environment\r\n\t\tsetError(null);\r\n\t\tsetIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`images/${currentUser.uid}/${image.name}`);\r\n\r\n\t\t// upload image to fileRef\r\n\t\tconst uploadTask = fileRef.put(image);\r\n\r\n\t\t// attach listener for `state_changed`-event\r\n\t\tuploadTask.on('state_changed', taskSnapshot => {\r\n\t\t\tsetUploadProgress(Math.round((taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100));\r\n\t\t});\r\n\r\n\t\t// are we there yet?\r\n\t\tuploadTask.then(async snapshot => {\r\n\r\n\t\t\t// retrieve URL to uploaded file\r\n\t\t\tconst url = await snapshot.ref.getDownloadURL();\r\n\t\t\t\r\n\t\r\n\t\t\t// add uploaded file to db\r\n\t\t\tconst img = {\r\n\t\t\t\ttitle: image.name,\r\n\t\t\t\talbum: image.ablumId,\r\n\t\t\t\towner: userId ? userId : currentUser.uid,\r\n\t\t\t\tpath: snapshot.ref.fullPath,\r\n\t\t\t\tsize: image.size,\r\n\t\t\t\ttype: image.type,\r\n\t\t\t\tcreatedAt: (image.createdAt = timestamp()),\r\n\t\t\t\tid: \r\n\t\t\t\turl,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (albumId) {\r\n\t\t\t\timg.album = db.collection('albums').doc(albumId)\r\n\t\t\t}\r\n\r\n\t\t\tif(userId) {\r\n\t\t\t\timg.userId = db.collection('users').doc(userId)\r\n\t\t\t}\r\n\r\n\t\t\t// add image to collection\r\n\t\t\tawait db.collection('images').add(img)\r\n\r\n\t\t\t// let user know we're done\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tsetUploadProgress(null);\r\n\r\n\t\t\t// file has been added to db, refresh list of files\r\n\t\t\tsetUploadedImage(img);\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tconsole.error(\"SUCCESS\", img);\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.error(\"File upload triggered an error!\", error);\r\n\t\t\tsetError({\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg: `Image could not be uploaded due to an error (${error.code})`\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\treturn { uploadProgress, uploadedImage, error, isSuccess };\r\n}\r\n\r\nexport default useUploadImage;\r\n","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js",["255"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js",["256","257"],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js",["258","259","260","261"],{"ruleId":"262","severity":1,"message":"263","line":16,"column":11,"nodeType":"264","messageId":"265","endLine":16,"endColumn":23},{"ruleId":"262","severity":1,"message":"266","line":16,"column":25,"nodeType":"264","messageId":"265","endLine":16,"endColumn":40},{"ruleId":"262","severity":1,"message":"267","line":16,"column":42,"nodeType":"264","messageId":"265","endLine":16,"endColumn":54},{"ruleId":"262","severity":1,"message":"268","line":16,"column":85,"nodeType":"264","messageId":"265","endLine":16,"endColumn":98},{"ruleId":"262","severity":1,"message":"269","line":17,"column":43,"nodeType":"264","messageId":"265","endLine":17,"endColumn":57},{"ruleId":"262","severity":1,"message":"270","line":18,"column":47,"nodeType":"264","messageId":"265","endLine":18,"endColumn":65},{"ruleId":"262","severity":1,"message":"271","line":21,"column":24,"nodeType":"264","messageId":"265","endLine":21,"endColumn":39},{"ruleId":"272","severity":1,"message":"273","line":36,"column":6,"nodeType":"274","endLine":36,"endColumn":29,"suggestions":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"262","severity":1,"message":"280","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":25},{"ruleId":"276","replacedBy":"281"},{"ruleId":"278","replacedBy":"282"},{"ruleId":"262","severity":1,"message":"283","line":1,"column":42,"nodeType":"264","messageId":"265","endLine":1,"endColumn":51},{"ruleId":"262","severity":1,"message":"284","line":25,"column":19,"nodeType":"264","messageId":"265","endLine":25,"endColumn":29},{"ruleId":"262","severity":1,"message":"285","line":29,"column":10,"nodeType":"264","messageId":"265","endLine":29,"endColumn":16},{"ruleId":"262","severity":1,"message":"286","line":32,"column":10,"nodeType":"264","messageId":"265","endLine":32,"endColumn":21},{"ruleId":"276","replacedBy":"287"},{"ruleId":"278","replacedBy":"288"},{"ruleId":"262","severity":1,"message":"289","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":20},{"ruleId":"262","severity":1,"message":"280","line":7,"column":10,"nodeType":"264","messageId":"265","endLine":7,"endColumn":25},{"ruleId":"262","severity":1,"message":"263","line":14,"column":11,"nodeType":"264","messageId":"265","endLine":14,"endColumn":23},{"ruleId":"262","severity":1,"message":"266","line":14,"column":25,"nodeType":"264","messageId":"265","endLine":14,"endColumn":40},{"ruleId":"262","severity":1,"message":"268","line":14,"column":84,"nodeType":"264","messageId":"265","endLine":14,"endColumn":97},{"ruleId":"262","severity":1,"message":"269","line":15,"column":43,"nodeType":"264","messageId":"265","endLine":15,"endColumn":57},{"ruleId":"262","severity":1,"message":"270","line":16,"column":47,"nodeType":"264","messageId":"265","endLine":16,"endColumn":65},{"ruleId":"262","severity":1,"message":"271","line":17,"column":24,"nodeType":"264","messageId":"265","endLine":17,"endColumn":39},{"ruleId":"272","severity":1,"message":"273","line":35,"column":6,"nodeType":"274","endLine":35,"endColumn":29,"suggestions":"290"},{"ruleId":"262","severity":1,"message":"291","line":1,"column":41,"nodeType":"264","messageId":"265","endLine":1,"endColumn":47},{"ruleId":"262","severity":1,"message":"292","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":20},{"ruleId":"262","severity":1,"message":"283","line":2,"column":17,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"293","line":2,"column":28,"nodeType":"264","messageId":"265","endLine":2,"endColumn":36},{"ruleId":"262","severity":1,"message":"294","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":21},{"ruleId":"262","severity":1,"message":"295","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":19},{"ruleId":"262","severity":1,"message":"296","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":19},{"ruleId":"276","replacedBy":"297"},{"ruleId":"278","replacedBy":"298"},{"ruleId":"262","severity":1,"message":"299","line":2,"column":166,"nodeType":"264","messageId":"265","endLine":2,"endColumn":172},{"ruleId":"262","severity":1,"message":"300","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":19},{"ruleId":"262","severity":1,"message":"296","line":3,"column":8,"nodeType":"264","messageId":"265","endLine":3,"endColumn":19},{"ruleId":"272","severity":1,"message":"301","line":59,"column":8,"nodeType":"274","endLine":59,"endColumn":56,"suggestions":"302"},{"ruleId":"272","severity":1,"message":"303","line":72,"column":8,"nodeType":"274","endLine":72,"endColumn":22,"suggestions":"304"},{"ruleId":"262","severity":1,"message":"263","line":10,"column":10,"nodeType":"264","messageId":"265","endLine":10,"endColumn":22},{"ruleId":"262","severity":1,"message":"266","line":10,"column":24,"nodeType":"264","messageId":"265","endLine":10,"endColumn":39},{"ruleId":"262","severity":1,"message":"268","line":10,"column":84,"nodeType":"264","messageId":"265","endLine":10,"endColumn":97},{"ruleId":"262","severity":1,"message":"269","line":11,"column":42,"nodeType":"264","messageId":"265","endLine":11,"endColumn":56},{"ruleId":"262","severity":1,"message":"305","line":11,"column":58,"nodeType":"264","messageId":"265","endLine":11,"endColumn":67},{"ruleId":"262","severity":1,"message":"270","line":13,"column":46,"nodeType":"264","messageId":"265","endLine":13,"endColumn":64},{"ruleId":"262","severity":1,"message":"271","line":14,"column":24,"nodeType":"264","messageId":"265","endLine":14,"endColumn":39},{"ruleId":"272","severity":1,"message":"306","line":28,"column":6,"nodeType":"274","endLine":28,"endColumn":8,"suggestions":"307"},{"ruleId":"272","severity":1,"message":"308","line":29,"column":5,"nodeType":"274","endLine":29,"endColumn":7,"suggestions":"309"},{"ruleId":"276","replacedBy":"310"},{"ruleId":"278","replacedBy":"311"},{"ruleId":"262","severity":1,"message":"312","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":18},{"ruleId":"262","severity":1,"message":"313","line":4,"column":10,"nodeType":"264","messageId":"265","endLine":4,"endColumn":15},{"ruleId":"262","severity":1,"message":"314","line":4,"column":22,"nodeType":"264","messageId":"265","endLine":4,"endColumn":26},{"ruleId":"262","severity":1,"message":"315","line":4,"column":35,"nodeType":"264","messageId":"265","endLine":4,"endColumn":40},{"ruleId":"262","severity":1,"message":"283","line":5,"column":17,"nodeType":"264","messageId":"265","endLine":5,"endColumn":26},{"ruleId":"262","severity":1,"message":"293","line":5,"column":28,"nodeType":"264","messageId":"265","endLine":5,"endColumn":36},{"ruleId":"262","severity":1,"message":"300","line":6,"column":10,"nodeType":"264","messageId":"265","endLine":6,"endColumn":19},{"ruleId":"262","severity":1,"message":"316","line":7,"column":10,"nodeType":"264","messageId":"265","endLine":7,"endColumn":16},{"ruleId":"262","severity":1,"message":"317","line":8,"column":9,"nodeType":"264","messageId":"265","endLine":8,"endColumn":16},{"ruleId":"276","replacedBy":"318"},{"ruleId":"278","replacedBy":"319"},{"ruleId":"262","severity":1,"message":"320","line":25,"column":7,"nodeType":"264","messageId":"265","endLine":25,"endColumn":19},{"ruleId":"262","severity":1,"message":"305","line":26,"column":7,"nodeType":"264","messageId":"265","endLine":26,"endColumn":16},{"ruleId":"262","severity":1,"message":"271","line":29,"column":7,"nodeType":"264","messageId":"265","endLine":29,"endColumn":22},{"ruleId":"262","severity":1,"message":"321","line":34,"column":9,"nodeType":"264","messageId":"265","endLine":34,"endColumn":17},{"ruleId":"272","severity":1,"message":"322","line":12,"column":6,"nodeType":"274","endLine":12,"endColumn":8,"suggestions":"323"},{"ruleId":"272","severity":1,"message":"324","line":80,"column":6,"nodeType":"274","endLine":80,"endColumn":46,"suggestions":"325"},{"ruleId":"262","severity":1,"message":"326","line":1,"column":26,"nodeType":"264","messageId":"265","endLine":1,"endColumn":33},{"ruleId":"262","severity":1,"message":"327","line":1,"column":42,"nodeType":"264","messageId":"265","endLine":1,"endColumn":46},{"ruleId":"276","replacedBy":"328"},{"ruleId":"278","replacedBy":"329"},{"ruleId":"262","severity":1,"message":"283","line":1,"column":20,"nodeType":"264","messageId":"265","endLine":1,"endColumn":29},{"ruleId":"262","severity":1,"message":"330","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":17},{"ruleId":"262","severity":1,"message":"331","line":16,"column":10,"nodeType":"264","messageId":"265","endLine":16,"endColumn":18},{"ruleId":"272","severity":1,"message":"332","line":16,"column":5,"nodeType":"274","endLine":16,"endColumn":12,"suggestions":"333"},{"ruleId":"262","severity":1,"message":"305","line":16,"column":10,"nodeType":"264","messageId":"265","endLine":16,"endColumn":19},{"ruleId":"272","severity":1,"message":"324","line":81,"column":6,"nodeType":"274","endLine":81,"endColumn":46,"suggestions":"334"},{"ruleId":"262","severity":1,"message":"320","line":25,"column":7,"nodeType":"264","messageId":"265","endLine":25,"endColumn":19},{"ruleId":"262","severity":1,"message":"305","line":26,"column":7,"nodeType":"264","messageId":"265","endLine":26,"endColumn":16},{"ruleId":"262","severity":1,"message":"271","line":29,"column":7,"nodeType":"264","messageId":"265","endLine":29,"endColumn":22},{"ruleId":"262","severity":1,"message":"321","line":34,"column":9,"nodeType":"264","messageId":"265","endLine":34,"endColumn":17},"no-unused-vars","'albumToShare' is assigned a value but never used.","Identifier","unusedVar","'setAlbumToShare' is assigned a value but never used.","'renderShared' is assigned a value but never used.","'setCurrentUrl' is assigned a value but never used.","'setSharedAlbum' is assigned a value but never used.","'getImagesByAlbumId' is assigned a value but never used.","'setSharedImages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAlbumsByUrl', 'getSharedAlbumUrls', 'setRenderShared', and 'setSharedUrl'. Either include them or remove the dependency array.","ArrayExpression",["335"],"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"'FirebaseContext' is defined but never used.",["336"],["337"],"'useEffect' is defined but never used.","'setUpdated' is assigned a value but never used.","'albums' is assigned a value but never used.","'sharedAlbum' is assigned a value but never used.",["336"],["337"],"'useContext' is defined but never used.",["338"],"'Spacer' is defined but never used.","'DrawerCloseButton' is defined but never used.","'useState' is defined but never used.","'useNavigate' is defined but never used.","'useUpdate' is defined but never used.","'SharedAlbum' is defined but never used.",["336"],["337"],"'Center' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser', 'db', 'firebaseFunctions', and 'imagesInCurrentAlbum'. Either include them or remove the dependency array.",["339"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["340"],"'sharedUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUrl', 'getAlbumsByUrl', 'getSharedAlbumUrls', 'setRenderShared', and 'setSharedUrl'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'db' and 'id'. Either include them or remove the dependency array.",["342"],["336"],["337"],"'StarIcon' is defined but never used.","'Badge' is defined but never used.","'Flex' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'useFire' is defined but never used.",["336"],["337"],"'setSharedUrl' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUserAlbums'. Either include it or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'fetchImages', 'setCurrentAlbum', and 'setImagesInCurrentAlbum'. Either include them or remove the dependency array.",["344"],"'Heading' is defined but never used.","'Text' is defined but never used.",["336"],["337"],"'boolean' is defined but never used.","'onUpload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db' and 'storage'. Either include them or remove the dependency array.",["345"],["346"],{"desc":"347","fix":"348"},"no-global-assign","no-unsafe-negation",{"desc":"347","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"360","fix":"364"},"Update the dependencies array to be: [currentUrl, getAlbumsByUrl, getSharedAlbumUrls, setRenderShared, setSharedUrl, sharedUrl]",{"range":"365","text":"366"},{"range":"367","text":"366"},"Update the dependencies array to be: [userLoggedIn, isUploaded, imageDeleted, created, imagesInCurrentAlbum, currentUser, firebaseFunctions, db]",{"range":"368","text":"369"},"Update the dependencies array to be: [albumToShare, db]",{"range":"370","text":"371"},"Update the dependencies array to be: [currentUrl, getAlbumsByUrl, getSharedAlbumUrls, setRenderShared, setSharedUrl]",{"range":"372","text":"373"},"Update the dependencies array to be: [db, id]",{"range":"374","text":"375"},"Update the dependencies array to be: [currentUserAlbums]",{"range":"376","text":"377"},"Update the dependencies array to be: [imageDeleted, isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",{"range":"378","text":"379"},"Update the dependencies array to be: [db, image, storage]",{"range":"380","text":"381"},{"range":"382","text":"379"},[1416,1439],"[currentUrl, getAlbumsByUrl, getSharedAlbumUrls, setRenderShared, setSharedUrl, sharedUrl]",[1297,1320],[2712,2760],"[userLoggedIn, isUploaded, imageDeleted, created, imagesInCurrentAlbum, currentUser, firebaseFunctions, db]",[3174,3188],"[albumToShare, db]",[1097,1099],"[currentUrl, getAlbumsByUrl, getSharedAlbumUrls, setRenderShared, setSharedUrl]",[658,660],"[db, id]",[420,422],"[currentUserAlbums]",[2207,2247],"[imageDeleted, isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",[383,390],"[db, image, storage]",[2286,2326]]