[{"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js":"1","D:\\frontend\\Projects\\picully\\src\\App.js":"2","D:\\frontend\\Projects\\picully\\src\\index.js":"3","D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js":"4","D:\\frontend\\Projects\\picully\\src\\config\\firebase.js":"5","D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js":"6","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js":"7","D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js":"8","D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js":"9","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js":"10","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js":"11","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js":"12","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js":"13","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js":"14","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js":"15","D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js":"16","D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js":"17","D:\\frontend\\Projects\\picully\\src\\views\\About.js":"18","D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js":"19","D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js":"20","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js":"21","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js":"22","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js":"23","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js":"24","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js":"25","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js":"26","D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js":"27","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js":"28","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js":"29","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js":"30","D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js":"31","D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js":"32","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js":"33","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js":"34","D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js":"35","D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js":"36","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js":"37","D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js":"38","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js":"39","D:\\frontend\\Projects\\picully\\src\\components\\forms\\NewUpload.js":"40"},{"size":5699,"mtime":1621334692272,"results":"41","hashOfConfig":"42"},{"size":2298,"mtime":1621512029470,"results":"43","hashOfConfig":"42"},{"size":699,"mtime":1619977432875,"results":"44","hashOfConfig":"42"},{"size":1440,"mtime":1621072303697,"results":"45","hashOfConfig":"42"},{"size":564,"mtime":1610613192949,"results":"46","hashOfConfig":"42"},{"size":9909,"mtime":1621511532646,"results":"47","hashOfConfig":"42"},{"size":375,"mtime":1610612732841,"results":"48","hashOfConfig":"42"},{"size":10163,"mtime":1621333207243,"results":"49","hashOfConfig":"42"},{"size":159,"mtime":1619961439697,"results":"50","hashOfConfig":"51"},{"size":3181,"mtime":1612431844229,"results":"52","hashOfConfig":"42"},{"size":4886,"mtime":1610613192912,"results":"53","hashOfConfig":"42"},{"size":935,"mtime":1619971795556,"results":"54","hashOfConfig":"42"},{"size":1152,"mtime":1612431828807,"results":"55","hashOfConfig":"42"},{"size":2841,"mtime":1610613192943,"results":"56","hashOfConfig":"42"},{"size":4209,"mtime":1621348241158,"results":"57","hashOfConfig":"42"},{"size":1262,"mtime":1610613192846,"results":"58","hashOfConfig":"42"},{"size":3096,"mtime":1621494034278,"results":"59","hashOfConfig":"42"},{"size":2857,"mtime":1610613193036,"results":"60","hashOfConfig":"51"},{"size":590,"mtime":1621334737032,"results":"61","hashOfConfig":"42"},{"size":592,"mtime":1610062161101,"results":"62","hashOfConfig":"63"},{"size":725,"mtime":1610621916998,"results":"64","hashOfConfig":"63"},{"size":5738,"mtime":1621508304410,"results":"65","hashOfConfig":"42"},{"size":1238,"mtime":1610613794156,"results":"66","hashOfConfig":"63"},{"size":1083,"mtime":1610625310235,"results":"67","hashOfConfig":"63"},{"size":11040,"mtime":1621514854652,"results":"68","hashOfConfig":"42"},{"size":1571,"mtime":1610614438713,"results":"69","hashOfConfig":"63"},{"size":2461,"mtime":1621433210977,"results":"70","hashOfConfig":"42"},{"size":5178,"mtime":1621508193361,"results":"71","hashOfConfig":"42"},{"size":562,"mtime":1610616106222,"results":"72","hashOfConfig":"63"},{"size":785,"mtime":1610666810237,"results":"73","hashOfConfig":"63"},{"size":2307,"mtime":1621072858434,"results":"74","hashOfConfig":"42"},{"size":2446,"mtime":1610665017034,"results":"75","hashOfConfig":"63"},{"size":439,"mtime":1619962058747,"results":"76","hashOfConfig":"51"},{"size":5283,"mtime":1619978485894,"results":"77","hashOfConfig":"42"},{"size":437,"mtime":1610613192861,"results":"78","hashOfConfig":"42"},{"size":263,"mtime":1610613192877,"results":"79","hashOfConfig":"42"},{"size":4984,"mtime":1621512966277,"results":"80","hashOfConfig":"42"},{"size":3434,"mtime":1621331585237,"results":"81","hashOfConfig":"42"},{"size":6839,"mtime":1621512769363,"results":"82","hashOfConfig":"42"},{"size":2234,"mtime":1621408806321,"results":"83","hashOfConfig":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"12552kf",{"filePath":"87","messages":"88","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iyll2y",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ekvwxz",{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js",[],["182","183"],"D:\\frontend\\Projects\\picully\\src\\App.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Routes, Route, Navigate} from 'react-router-dom'\r\nimport AuthRoute from './components/AuthRoute';\r\nimport SignUp from './components/forms/SignUp';\r\nimport NavIndex from './components/navigation/NavIndex';\r\nimport CreateAlbum from './components/album/CreateAlbum';\r\nimport Albums from './components/album/Albums';\r\nimport NotFound from './components/error/NotFound';\r\nimport Album from './components/album/Album';\r\nimport Welcome from './components/Welcome';\r\nimport SharedImageGrid from './components/pictureItems/SharedImageGrid';\r\nimport { useUpdate } from './contexts/UpdateContext';\r\nimport { useFire } from './contexts/FirebaseContext';\r\nimport { useAuth } from './contexts/AuthContext';\r\n\r\nconst App = () => {\r\n  const { albumToShare, setAlbumToShare, renderShared, setRenderShared, currentUrl, setCurrentUrl, userLoggedIn, currentAlbum} = useUpdate();\r\n  const { firebaseFunctions, sharedUrl, setSharedUrl, albums, db, } = useFire();\r\n  const { getAlbumsByUrl, getSharedAlbumUrls, getImagesByAlbumUrl, getImagesByAlbumId } = firebaseFunctions;\r\n  const { currentUser } = useAuth();\r\n\r\n\r\n  useEffect(() => {\r\n    const getUrls = async () => {\r\n      await getSharedAlbumUrls();\r\n    }\r\n    getUrls()\r\n  }, [currentUrl])\r\n\r\n  useEffect(() => {\r\n    console.log(currentAlbum, 'current album')\r\n  }, [currentAlbum])\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n     \r\n        { <NavIndex /> }\r\n        <Routes>\r\n\r\n          <Route path={\"/\"} element={!currentUser ? <Welcome /> : <Navigate to=\"/home/albums\" /> } />\r\n\r\n          {<Route path={`/review/:id`} element={<SharedImageGrid ALBUM_ID={sharedUrl !== '' && sharedUrl} />} />}\r\n\r\n            <AuthRoute path=\"/home\">\r\n                    <AuthRoute path=\"albums\">\r\n                      <Albums />\r\n                     <AuthRoute path=\"/:slug\">\r\n                        <Album current={currentAlbum}  />\r\n                      </AuthRoute>\r\n                      <AuthRoute path=\"/create\">\r\n                        <CreateAlbum />\r\n                      </AuthRoute>\r\n                    </AuthRoute>\r\n            </AuthRoute>\r\n\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\frontend\\Projects\\picully\\src\\index.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js",[],"D:\\frontend\\Projects\\picully\\src\\config\\firebase.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js",["199","200","201"],"import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport { useAuth } from './AuthContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const FirebaseContext = createContext()\r\n\r\nexport const useFire = () => useContext(FirebaseContext)\r\n\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n  \r\n  \r\n  const db = firebase.firestore()\r\n  const storage = firebase.storage()\r\n\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  const [sharedUrl, setSharedUrl] = useState('');\r\n  const [currentAlbum, setCurrentAlbum] = useState()\r\n  const [collectionData, setCollectionData] = useState([])\r\n  const [albumCollection, setAlbumCollection] = useState([])\r\n  const [created, setCreated] = useState(false)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [images, setImages] = useState([])\r\n  const [albums, setAlbums] = useState([])\r\n  const {currentUser} = useAuth()\r\n  const [updatedAlbumTitle, setUpdatedAlbumTitle] = useState(false)\r\n  const [sharedAlbum, setSharedAlbum] = useState()\r\n\r\n  const firebaseFunctions = {\r\n    //get user collection\r\n    getUsers: async () => await db.collection('users').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const userData = []\r\n      snapshot.forEach((doc) => {\r\n        userData.push({\r\n          id: doc.data().id,\r\n          firstname: doc.data().firstname,\r\n          lastname: doc.data().lastname,\r\n        })\r\n      });\r\n      console.log(\"user info\", userData)\r\n      setCollectionData([...userData])\r\n      setIsLoading(false)\r\n      return userData\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //get a user by id\r\n    getUser: async (id) => await db.collection('users').doc(id).get().then(doc => {\r\n      setIsLoading(true)\r\n      const user = {\r\n        firstName: '',\r\n        lastName: '',\r\n        id: '',\r\n      }\r\n      user.firstName = doc.data().firstName\r\n      user.lastName = doc.data().lastName\r\n      user.id = doc.data().id\r\n      setUserData({...user})\r\n      console.log(user)\r\n      setIsLoading(false)\r\n      return user\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //create User\r\n    createUser: async (firstname, lastname) => await db.collection('users').add({\r\n      firstname,\r\n      lastname,\r\n      createdAt: timestamp()\r\n    }).then(docRef => {\r\n      const dataRef = db.collection(\"users\").doc(docRef.id);\r\n      return dataRef.update({\r\n        id: dataRef.id\r\n     })\r\n    }),\r\n    //create album\r\n    createAlbum: async (name, desc, id) => {\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      const num = uuidv4()\r\n       await db.collection(\"albums\").add({\r\n        title: name,\r\n        description: desc,\r\n        owner_id: id,\r\n        images: [],\r\n        sharedUrl: \"\",\r\n        slug: name.replace(/\\s+/g, '-').toLowerCase() + `-${num}`,\r\n        createdAt: timestamp(),\r\n        id\r\n        \r\n      }).then(ref => {\r\n        ref.update({\r\n          id: ref.id\r\n      }).catch(\r\n       err => console.error(\"error\", err)   \r\n      )\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n  ,\r\n\r\n    createAlbumWithImages: async (title, desc, id, images) => {\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      let owner = null\r\n      if(currentUser.uid === undefined || currentUser.uid === null || !currentUser.uid){\r\n        owner= null\r\n      }\r\n      else {\r\n        owner = currentUser.uid\r\n      }\r\n      await db.collection(\"albums\").add({\r\n        title,\r\n        description: desc,\r\n        owner_id: owner,\r\n        images: [],\r\n        sharedUrl: \"\",\r\n        slug: title.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n        createdAt: timestamp(),\r\n        id\r\n        \r\n      }).then(ref => {   \r\n          ref.update({\r\n            id: ref.id        \r\n      }).then(async () => {\r\n        if(images.length > 0){\r\n          await images.forEach(img => {\r\n            db.collection(\"images\").doc(img.id).update({\r\n              albums: firebase.firestore.FieldValue.arrayUnion\r\n              (\r\n                db.collection(\"albums\").doc(ref.id)\r\n              )\r\n            })\r\n          })  \r\n          await db.collection(\"albums\").doc(id).update({\r\n              images: firebase.firestore.FieldValue.arrayUnion\r\n              (\r\n                images\r\n              )\r\n          })\r\n        }\r\n      }).catch(\r\n        err => console.error(\"error\", err)   \r\n       )\r\n\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n    \r\n    \r\n    ,\r\n    updateAlbumName: async (id, newName) => {\r\n      let ref = db.collection(\"albums\").doc(id)\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setUpdatedAlbumTitle(true)\r\n      await ref.update({\r\n        title: newName,\r\n        slug: newName.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n      }).then(\r\n        setIsLoading(false),\r\n        setUpdatedAlbumTitle(false)\r\n        \r\n      ).catch(err => console.log(\"error\", err))\r\n \r\n    },\r\n    updateAlbumSharedUrl: async (id, url) => {\r\n      let ref = db.collection(\"albums\").doc(id)\r\n      setIsLoading(true)\r\n      await ref.update({\r\n        sharedUrl: `${url}`,\r\n      }).then(\r\n        setIsLoading(false),\r\n        \r\n      ).catch(err => console.log(\"error\", err))\r\n    },\r\n    //get albums\r\n    getUserAlbums: async (id) => await db.collection('albums').where(\"owner_id\", \"==\", id).get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albums = []\r\n\r\n      snapshot.forEach((doc) => {\r\n        albums.push(doc.data())\r\n      });\r\n      console.log(\"album info\", albums)\r\n      setAlbumCollection([...albums])\r\n      setIsLoading(false)\r\n      return albums\r\n    }, err => {\r\n      console.log(err)\r\n    }),\r\n    getAlbumByTitle: async (name) => {\r\n     await db.collection('albums').where('title', '==', name).get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          const tempAlbums = []\r\n          let tempObj = doc.id\r\n          console.log(\"albums\")\r\n          tempAlbums.push(doc.data())\r\n          setAlbumCollection(tempAlbums)\r\n          setCurrentAlbum(tempObj)\r\n          setIsLoading(false)\r\n          return tempObj\r\n        })          \r\n      }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    }\r\n    ,\r\n    //get ablum by album id\r\n    getAlbumsByUrl: async (url) => await db.collection('albums').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albumArr = []\r\n      snapshot.forEach((doc) => {\r\n        if(doc.data().sharedUrl === url) {\r\n          albumArr.push(doc.data())\r\n        }\r\n        setSharedAlbum(albumArr)\r\n        setIsLoading(false)\r\n        return albumArr\r\n      })\r\n      return false\r\n    }, err => {\r\n      console.log(err)\r\n    }),\r\n    getAlbumById: async (albumId) => {\r\n      // get ref\r\n      const albumIdRef = db.collection('albums')\r\n      setIsLoading(true)\r\n      albumIdRef\r\n      .where('id', '==', albumId)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        })\r\n        return items\r\n      })\r\n      \r\n    },\r\n    getSharedAlbumUrls: async () => await db.collection('albums').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albumArr = []\r\n      snapshot.forEach((doc) => {\r\n        if(doc.data().sharedUrl) {\r\n          albumArr.push(doc.data().sharedUrl)\r\n        }\r\n      })\r\n      setAlbums(albumArr)\r\n      setIsLoading(false)\r\n      return albumArr\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //get images from collection\r\n    getImages: async (id) => await db.collection('images').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const imageArr = []\r\n      const userImgs = []\r\n      snapshot.forEach((doc) => {\r\n        imageArr.push({\r\n          title: doc.data().title,\r\n          path: doc.data().path,\r\n          size: doc.data().size,\r\n          ownderId: doc.data().owner_id,\r\n          url: doc.data().url\r\n        })\r\n      })\r\n      imageArr.forEach(item => {\r\n        if(item.ownerId === currentUser.uid) {\r\n          console.log(\"item has owner\", item)\r\n          userImgs.push(item)\r\n        }\r\n      })\r\n      setImages([...imageArr])\r\n      setIsLoading(false)\r\n      return imageArr\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    getImagesByAlbumId: async (id) => {\r\n       db.collection(\"images\").where(\"albums\", \"array-contains\", id).get().then(querySnapshot => {\r\n        const imageArr = []\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data(), \"DATA\")\r\n            imageArr.push({\r\n              title: doc.data().title,\r\n              album: doc.data().album,\r\n              path: doc.data().path,\r\n              size: doc.data().size,\r\n              url: doc.data().url\r\n            })\r\n          })\r\n          console.log(\"image in current album\", imageArr, id)\r\n          // setImages([...imageArr])\r\n          setIsLoading(false)\r\n          return imageArr\r\n        })\r\n    .catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n    },\r\n    \r\n     \r\n  }\r\n\r\n\r\n  const firebaseContextValue = {\r\n    firebaseFunctions,\r\n    collectionData,\r\n    userData,\r\n    isLoading,\r\n    timestamp,\r\n    db,\r\n    created,\r\n    updatedAlbumTitle,\r\n    setUpdatedAlbumTitle,\r\n    images,\r\n    albumCollection,\r\n    updated,\r\n    currentAlbum,\r\n    storage,\r\n    albums,\r\n    setAlbums,\r\n    setSharedUrl,\r\n    sharedUrl\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value=\r\n      {firebaseContextValue}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider >\r\n  )\r\n}\r\n","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js",["202","203"],"import { Flex, Heading, ListItem, Link, Spacer, UnorderedList, Box, useDisclosure, CloseButton, Button } from '@chakra-ui/react'\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n} from \"@chakra-ui/react\"\r\nimport {Link as ReactLink} from 'react-router-dom'\r\nimport React, { useRef } from 'react'\r\nimport { ArrowForwardIcon, HamburgerIcon } from '@chakra-ui/icons'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nconst NavMobile = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {currentUser, logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n  return (\r\n    <>\r\n\r\n      <Flex justify=\"space-between\" align=\"center\" minW=\"100vw\">\r\n        <Heading \r\n        color=\"teal.300\" \r\n        ml={[\"1.4rem\", \"2rem\", \"2.3rem\", \"xl\"]}\r\n        mt={[\"1rem\", \"2rem\", \"2.3rem\", \"xl\"]}\r\n        >Picully</Heading>\r\n        <Box ref={boxRef} mt={[\"1.2rem\", \"md\", \"lg\", \"xl\"]} mr={[\"2rem\", \"md\", \"lg\", \"xl\"]} onClick={onOpen}>\r\n          {!isOpen && <HamburgerIcon w={[10, 12, 16]} h={[10, 12, 16]} />}\r\n        </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        background=\"green\"\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody display=\"flex\" justifyContent=\"center\"  alignItems=\"center\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                justify=\"center\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                 \r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Home</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">About</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Contact</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                  mb=\"10\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Home</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n              mb={[\"3rem\", \"18px\", \"20px\", \"22px\"]}\r\n            >\r\n              {\r\n                currentUser \r\n                ? \r\n                <Button\r\n                  mt={2}\r\n                  mb={8}\r\n                  background=\"teal.200\"\r\n                  color=\"white\"\r\n                  size=\"md\"\r\n                  onClick={handleSignOut}\r\n                >\r\n                  Sign out\r\n                </Button>\r\n                :\r\n                \"\"\r\n              }     \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobile\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js",["204","205","206","207","208"],"import { useMediaQuery } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\nimport SharedAlbum from '../album/SharedAlbum'\r\nimport NavBar from './NavBar'\r\nimport NavBarSignedIn from './NavBarSignedIn'\r\nimport NavMobile from './NavMobile'\r\nimport NavMobileSignedIn from './NavMobileSignedIn'\r\n\r\nconst NavIndex = () => {\r\n  const [isLargerThan900] = useMediaQuery(\"(min-width: 900px)\")\r\n  const {currentUser} = useAuth()\r\n\r\n  return (\r\n    <>\r\n     { \r\n        (isLargerThan900 && !currentUser) ? <NavBar /> \r\n        : \r\n        (isLargerThan900 && currentUser) ? <NavBarSignedIn /> \r\n        :\r\n        (!isLargerThan900 && !currentUser) ? <NavMobile />\r\n        :\r\n        <NavMobileSignedIn />\r\n     }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavIndex\r\n","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js",["209"],"import { HamburgerIcon } from '@chakra-ui/icons'\r\nimport { Box, CloseButton, DrawerBody, Link, DrawerContent, DrawerHeader, DrawerOverlay, Flex, ListItem, UnorderedList, DrawerFooter, Drawer, useDisclosure, Button, Center } from '@chakra-ui/react'\r\nimport React, { useRef } from 'react'\r\nimport { Link as ReactLink } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nconst NavMobileSignedIn = () => {\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n\r\n  return (\r\n    <>\r\n    <Flex justify=\"flex-end\" align=\"center\" minW=\"100vw\">\r\n      <Box ref={boxRef} mt=\"10px\" mr=\"24px\" onClick={onOpen}>\r\n        {!isOpen && <HamburgerIcon w={10} h={10} />}\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        size={[\"full\", \"md\", \"lg\", \"0\"]}\r\n\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody background=\"green\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                p=\"10px\" \r\n                justify=\"space-around\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                ml=\"87px\" \r\n                mt=\"50px\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem>\r\n                  <Link as={ReactLink} to=\"/\">Home</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums\" pr=\"5px\">Albums</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/profile\">Profile</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums/create\">Upload</Link>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n            >\r\n                <Button\r\n                mt={4}\r\n                mb={8}\r\n                background=\"teal.500\"\r\n                color=\"white\"\r\n                onClick={handleSignOut}\r\n                \r\n                >Sign out</Button>          \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobileSignedIn\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js",["210","211","212","213","214","215"],"import React, { useState, createContext, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport SharedAlbum from '../components/album/SharedAlbum';\r\nimport { useAuth } from './AuthContext';\r\nimport { useFire } from './FirebaseContext';\r\n\r\nexport const UpdateContext = createContext();\r\n\r\n\r\nexport const useUpdate = () => useContext(UpdateContext)\r\n  \r\n\r\nexport const UpdateProvider = props => {\r\n    const [currentUrl, setCurrentUrl] = useState(window.location.href);\r\n    const [signUpIsClicked, setSignUpIsClicked] = useState(false)\r\n    const [imageDeleted, setImageDeleted] = useState(false)\r\n    const [currentAlbumID, setCurrentAlbumID] = useState(undefined)\r\n    const [currentAlbum, setCurrentAlbum] = useState(undefined)\r\n    const [currentUserAlbums, setCurrentUserAlbums] = useState([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false)\r\n    const {firebaseFunctions, db} = useFire()\r\n    const [isUploaded, setIsUploaded] = useState(false)\r\n    const [pickedImages, setPickedImages] = useState([])\r\n    const [discardedImages, setDiscardedImages] = useState([])\r\n    const [sharedIamges, setSharedImages] = useState([])\r\n    const [imagesInCurrentAlbum, setImagesInCurrentAlbum] = useState([])\r\n    const [imagesOwnedByCurrentUser, setImagesOwnedByCurrentUser] = useState()\r\n    const [albumToShare, setAlbumToShare] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const {created} = useFire()\r\n    const [renderShared, setRenderShared] = useState(false);\r\n    const [userSelectedImagesToKeep, setuserSelectedImagesToKeep] = useState([])\r\n    const [userSelectedImagesToDelete, setuserSelectedImagesToDelete] = useState([])\r\n\r\n    useEffect(() => {\r\n        ( async () => {\r\n            if(currentUser !== null && currentUser) {\r\n                setCurrentUserAlbums([])\r\n                let res = await firebaseFunctions.getUserAlbums(currentUser.uid)\r\n                setCurrentUserAlbums(res)\r\n            }\r\n        }\r\n        )()\r\n    }, [userLoggedIn,isUploaded,created])\r\n\r\n    const updateContextValue = {\r\n        \r\n      signUpIsClicked,\r\n      setSignUpIsClicked,\r\n      currentAlbumID,\r\n      setCurrentUserAlbums,\r\n      currentUserAlbums,\r\n      setUserLoggedIn,\r\n      userLoggedIn,\r\n      setCurrentAlbumID,\r\n      imageDeleted,\r\n      imagesInCurrentAlbum,\r\n      setCurrentAlbum,\r\n      currentAlbum,\r\n      setImagesInCurrentAlbum,\r\n      isUploaded,\r\n      pickedImages,\r\n      setPickedImages,\r\n      setIsUploaded,\r\n      setImageDeleted,\r\n      setAlbumToShare,\r\n      albumToShare,\r\n      sharedIamges,\r\n      setSharedImages,\r\n      discardedImages,\r\n      setDiscardedImages,\r\n      userSelectedImagesToKeep, \r\n      setuserSelectedImagesToKeep,\r\n      userSelectedImagesToDelete, \r\n      setuserSelectedImagesToDelete,\r\n      renderShared, \r\n      setRenderShared,\r\n      currentUrl, \r\n      setCurrentUrl\r\n    }\r\n\r\n    return (\r\n        <UpdateContext.Provider\r\n            value=\r\n            {updateContextValue}\r\n        >\r\n            {props.children}\r\n        </UpdateContext.Provider>\r\n    )\r\n}","D:\\frontend\\Projects\\picully\\src\\views\\About.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js",["216","217","218","219"],"import React, { useContext } from 'react'\r\nimport { Route, Navigate } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useUpdate } from '../contexts/UpdateContext';\r\nimport SharedImageGrid from './pictureItems/SharedImageGrid';\r\n\r\nconst AuthRoute = (props) => {\r\n    const { currentUser } = useAuth();\r\n    const { albumToShare, renderShared } = useUpdate();\r\n    return (\r\n        <>\r\n          {currentUser ? \r\n          (<Route {...props}/>)\r\n          : \r\n          (<Navigate to=\"/\"/>)\r\n          }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthRoute","D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js",["220"],"import { useEffect, useState } from \"react\"\r\nimport { useFire } from \"../contexts/FirebaseContext\"\r\n\r\nconst useAlbums = (id) => {\r\n  \r\n\tconst [albums, setAlbums] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n  const {db} = useFire()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = db.collection('albums').onSnapshot(snapshot => {\r\n\t\t\tsetLoading(true)\r\n\t\t\tconst snapshotAlbums = []\r\n\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\tif(id === doc.owner_id){\r\n\t\t\t\t\tconsole.log(\"TRUE\")\r\n\t\t\t\t}\r\n\t\t\t\tsnapshotAlbums.push({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tsetAlbums(snapshotAlbums)\r\n\t\t\tsetLoading(false)\r\n\t\t})\r\n\r\n\t\treturn unsubscribe\r\n\t}, [])\r\n\r\n\treturn { albums, loading }\r\n}\r\n\r\nexport default useAlbums\r\n",["221","222"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js",["223","224","225","226","227","228","229","230","231"],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js",[],["232","233"],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js",["253"],"import {Flex, Link, Grid, GridItem, Text, Image } from '@chakra-ui/react'\r\nimport tempImage from '../../images/dog.jpg'\r\nimport {Link as ReactLink} from 'react-router-dom'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\nimport { useEffect } from 'react'\r\n\r\nconst AlbumGrid = () => {\r\n  const {currentUserAlbums, setCurrentAlbum} = useUpdate()\r\n\r\n  const setAlbumClicked = (album) => {\r\n    console.log(\"CLICK\", currentUserAlbums);\r\n    console.log('CURRENT', album);\r\n    setCurrentAlbum(album);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (currentUserAlbums !== undefined && currentUserAlbums.length > 0 ) &&\r\n      \r\n      <Grid \r\n        pr=\"10px\" \r\n        pl=\"10px\" \r\n        pb=\"10px\" \r\n        templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} \r\n        templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} \r\n        gap={3} h=\"600px\" \r\n      >\r\n      {\r\n\r\n        currentUserAlbums.map((album, index) => (\r\n          <Link \r\n          as={ReactLink} \r\n          to={`/home/albums/${album.slug}`} \r\n          key={index}\r\n          onClick={() => setAlbumClicked(album)}\r\n          textDecoration=\"none\" \r\n          _hover={{backgroundColor: \"lightgrey\"}}\r\n          > \r\n            <GridItem \r\n            p=\"2rem\" \r\n            colSpan={1} \r\n            overflow=\"hidden\" >\r\n              <Flex \r\n              justify=\"center\" \r\n              align=\"center\" \r\n              direction=\"column\"\r\n              >\r\n              <Text\r\n              isTruncated\r\n              as=\"i\" \r\n              fontSize=\"sm\" \r\n              textAlign=\"center\" \r\n              p=\"5px\" mt=\"1rem\" \r\n              textDecor=\"none\"\r\n              >\r\n                name: {album.title}\r\n              </Text>\r\n              <Text\r\n               isTruncated\r\n              as=\"i\" \r\n              fontSize=\"sm\" \r\n              textAlign=\"center\" \r\n              p=\"5px\" \r\n              mt=\"1rem\" \r\n              textDecor=\"none\"\r\n              >\r\n                description: {album.description}\r\n              </Text>\r\n              <Image \r\n                src={tempImage} \r\n                alt={album.name} \r\n                h=\"400px\" \r\n                w=\"300px\" \r\n                objectFit=\"contain\"\r\n                />\r\n              </Flex>\r\n            </GridItem>\r\n          </Link>\r\n        )) \r\n         }\r\n      </Grid>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AlbumGrid\r\n","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js",["254","255","256","257"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UploadImage from '../forms/UploadImage'\r\n\r\nimport { Flex, Heading, Input, Spinner, Text } from '@chakra-ui/react'\r\n\r\nimport ImageGrid from '../pictureItems/ImageGrid'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport {GrEdit} from 'react-icons/gr'\r\nimport {CheckIcon} from '@chakra-ui/icons'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n\r\n\r\n\r\nconst Album = ({current}) => {\r\n  const {slug} = useParams()\r\n  const [id, setId] = useState(false);\r\n  const [thisAlbum, setThisAlbum] = useState(current);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {firebaseFunctions, db, updatedAlbumTitle} = useFire()\r\n  const { \r\n          storage,\r\n          imageDeleted,\r\n          isUploaded,\r\n          currentAlbum,\r\n          imagesInCurrentAlbum,\r\n          setCurrentAlbum,\r\n          setImagesInCurrentAlbum} = useUpdate()\r\n  const [editAlbumName, setEditAlbumName] = useState(false)\r\n  const [editActive, setEditActive] = useState(false)\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(thisAlbum, 'THIS')\r\n  }, [thisAlbum])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  (async () => {\r\n      setLoading(true)\r\n      setImagesInCurrentAlbum([]);\r\n      let ref = db.collection('albums');\r\n      let res = await ref.where('slug', '==', slug).get();\r\n      for(const doc of res.docs){\r\n        let docRef = doc.data();\r\n        setCurrentAlbum(docRef)\r\n        setId(docRef.id)\r\n        docRef.images.forEach(img=> {\r\n          setImagesInCurrentAlbum(prevImgs => [...prevImgs, img])\r\n        })\r\n        setLoading(false);\r\n      }\r\n  })()\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, [imageDeleted, isUploaded])\r\n\r\n  const handleEdit = () => {\r\n    setEditActive(true)\r\n  }\r\n\r\n\r\n  const handleChangeAlbumName = (e) => {\r\n      setEditAlbumName(e.target.value)\r\n  }\r\n\r\n  const handleFinishedEdit = async ()=> {\r\n    if(!editAlbumName) {\r\n      return \r\n    }\r\n   await firebaseFunctions.updateAlbumName(currentAlbum.id, editAlbumName)\r\n    setEditActive(false)\r\n  }\r\n \r\n\treturn (\r\n\t\t<>\r\n\r\n     { currentAlbum !== undefined && !isLoading ?\r\n\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { currentAlbum !== undefined && !isLoading &&\r\n        <UploadImage \r\n          albumId={id !== null ? id : false} \r\n        /> }\r\n        <Flex \r\n          justify=\"center\" \r\n          align=\"center\" \r\n          direction=\"column\"\r\n        >     \r\n          <Text>Edit album name</Text>\r\n            <Flex \r\n              justify=\"space-around\" \r\n              align=\"center\" \r\n            >\r\n              {editActive &&\r\n                  <Flex \r\n                    justify=\"center\" \r\n                    align=\"center\"\r\n                  >\r\n                    <Input \r\n                      type=\"text\" \r\n                      placeholder={editAlbumName} \r\n                      onChange={handleChangeAlbumName}\r\n                      />\r\n                  </Flex> }\r\n              { !editActive ? \r\n              <Flex \r\n                justify=\"center\" \r\n                cursor=\"pointer\" \r\n                align=\"center\" \r\n                _hover={{backgroundColor: \"teal.300\"}} \r\n                >\r\n                <GrEdit \r\n                  color=\"white\" \r\n                  size={\"1.2rem\"} \r\n                  onClick={handleEdit}  />\r\n              </Flex>\r\n              : \r\n              <Flex \r\n              ml=\"1rem\" \r\n              justify=\"center\" \r\n              cursor=\"pointer\" \r\n              align=\"center\">\r\n                <CheckIcon  \r\n                  _hover={{color: \"teal.300\"}}\r\n                  w={6} \r\n                  h={6} \r\n                  color=\"teal.500\" \r\n                  onClick={handleFinishedEdit} \r\n                /> \r\n              </Flex>}\r\n            </Flex>\r\n                <Heading >{editAlbumName ? editAlbumName : currentAlbum.title }</Heading>        \r\n          </Flex>\r\n          {\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (imagesInCurrentAlbum !== undefined && imagesInCurrentAlbum.length > 0 && currentAlbum\r\n          ? \r\n          <ImageGrid albumId={currentAlbum.id} pictures={imagesInCurrentAlbum}  />\r\n          :\r\n\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n\r\n      </Flex>\r\n       : loading &&\r\n       <>\r\n         <Flex\r\n           height=\"100vh\"\r\n           justify=\"center\" \r\n           align=\"center\"\r\n         >\r\n         <Spinner   \r\n           thickness=\"6px\"\r\n           speed=\"0.65s\"\r\n           emptyColor=\"gray.200\"\r\n           color=\"teal.500\"\r\n           size=\"xl\"  \r\n           />\r\n           Loading\r\n         </Flex>\r\n       </>\r\n      }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Album\r\n\r\n","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js",["258","259"],"import { Grid, GridItem, Heading, Image, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nconst \r\nPreviewImageGrid = ({images, previewURLS}) => {\r\n  return (\r\n    <Grid templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} gap={3} h=\"600px\">\r\n    {\r\n      previewURLS !== undefined && previewURLS.length && \r\n      previewURLS.map((prevItem, index) => (\r\n      \r\n          <GridItem p=\"2rem\" colSpan={1} overflow=\"hidden\" colStart={2} key={index}>\r\n            <Image src={prevItem.url} alt={prevItem.title} h=\"400px\" w=\"300px\" objectFit=\"contain\"/>     \r\n          </GridItem>\r\n      ))\r\n    }\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default PreviewImageGrid\r\n",["260","261"],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js",["262","263","264"],"import { useState, useEffect } from 'react';\r\nimport { boolean } from 'yup/lib/locale';\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useFire } from '../contexts/FirebaseContext';\r\n\r\nconst useUploadImage = (image, albumId, userId) => {\r\n\tconst [uploadProgress, setUploadProgress] = useState(null);\r\n\tconst [uploadedImage, setUploadedImage] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  \r\n\tconst { currentUser } = useAuth()\r\n  const { db, storage, timestamp } = useFire()\r\n\r\n   const onUpload = () => {\r\n\r\n\t\tif (!image) {\r\n\t\t\tsetUploadProgress(null);\r\n\t\t\tsetUploadedImage(null);\r\n\t\t\tsetError(null);\r\n\t\t\tsetIsSuccess(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// reset environment\r\n\t\tsetError(null);\r\n\t\tsetIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`images/${currentUser.uid}/${image.name}`);\r\n\r\n\t\t// upload image to fileRef\r\n\t\tconst uploadTask = fileRef.put(image);\r\n\r\n\t\t// attach listener for `state_changed`-event\r\n\t\tuploadTask.on('state_changed', taskSnapshot => {\r\n\t\t\tsetUploadProgress(Math.round((taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100));\r\n\t\t});\r\n\r\n\t\t// are we there yet?\r\n\t\tuploadTask.then(async snapshot => {\r\n\r\n\t\t\t// retrieve URL to uploaded file\r\n\t\t\tconst url = await snapshot.ref.getDownloadURL();\r\n\t\t\t\r\n\t\r\n\t\t\t// add uploaded file to db\r\n\t\t\tconst img = {\r\n\t\t\t\ttitle: image.name,\r\n\t\t\t\talbum: image.ablumId,\r\n\t\t\t\towner: userId ? userId : currentUser.uid,\r\n\t\t\t\tpath: snapshot.ref.fullPath,\r\n\t\t\t\tsize: image.size,\r\n\t\t\t\ttype: image.type,\r\n\t\t\t\tcreatedAt: (image.createdAt = timestamp()),\r\n\t\t\t\tid: \r\n\t\t\t\turl,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (albumId) {\r\n\t\t\t\timg.album = db.collection('albums').doc(albumId)\r\n\t\t\t}\r\n\r\n\t\t\tif(userId) {\r\n\t\t\t\timg.userId = db.collection('users').doc(userId)\r\n\t\t\t}\r\n\r\n\t\t\t// add image to collection\r\n\t\t\tawait db.collection('images').add(img)\r\n\r\n\t\t\t// let user know we're done\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tsetUploadProgress(null);\r\n\r\n\t\t\t// file has been added to db, refresh list of files\r\n\t\t\tsetUploadedImage(img);\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tconsole.error(\"SUCCESS\", img);\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.error(\"File upload triggered an error!\", error);\r\n\t\t\tsetError({\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg: `Image could not be uploaded due to an error (${error.code})`\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\treturn { uploadProgress, uploadedImage, error, isSuccess };\r\n}\r\n\r\nexport default useUploadImage;\r\n","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js",["265"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js",["266","267","268","269","270","271","272","273","274","275"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UploadImage from '../forms/UploadImage'\r\n\r\nimport { Flex, Heading, Input, Spinner, Text } from '@chakra-ui/react'\r\n\r\nimport SharedImageGrid from '../pictureItems/SharedImageGrid'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport {GrEdit} from 'react-icons/gr'\r\nimport {CheckIcon} from '@chakra-ui/icons'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n\r\n\r\n\r\nconst SharedAlbum = ({album}) => {\r\n  const {id} = useParams()\r\n  \r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {firebaseFunctions, db, updatedAlbumTitle} = useFire()\r\n  const { \r\n          imageDeleted,\r\n          isUploaded, \r\n          currentAlbum,\r\n          imagesInCurrentAlbum,\r\n          setCurrentAlbum,\r\n          setImagesInCurrentAlbum} = useUpdate()\r\n  const [editAlbumName, setEditAlbumName] = useState(false)\r\n  const [editActive, setEditActive] = useState(false)\r\n\r\n\r\n  const fetchImages = async (id) => {\r\n    try {\r\n    await db.collection(\"images\").where(\"albums\", \"array-contains\", db.collection(\"albums\").doc(id)).get().then(snapshot => {\r\n      setIsLoading(true)\r\n      let imgArr = []\r\n      snapshot.forEach(doc => {\r\n        imgArr.push(doc.data())\r\n      })\r\n      setImagesInCurrentAlbum([...imgArr])\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n  catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n   console.log(\"i ran\");\r\n    (async () => {\r\n      setImagesInCurrentAlbum(\"\")\r\n      setIsLoading(true)\r\n\r\n      if(currentAlbum) {\r\n          setCurrentAlbum(currentAlbum)\r\n          fetchImages(currentAlbum.id)\r\n          setIsLoading(false)\r\n      }\r\n      else {\r\n        console.error(\"no id found\")\r\n      }\r\n\r\n    })()\r\n  }, [imageDeleted, isUploaded, currentAlbum])\r\n\r\n\r\n\r\n  const handleEdit = () => {\r\n    setEditActive(true) \r\n  }\r\n\r\n\r\n  const handleChangeAlbumName = (e) => {\r\n      setEditAlbumName(e.target.value)\r\n  }\r\n\r\n  const handleFinishedEdit = async ()=> {\r\n    if(!editAlbumName) {\r\n      return \r\n    }\r\n   await firebaseFunctions.updateAlbumName(currentAlbum.id, editAlbumName)\r\n    setEditActive(false)\r\n  }\r\n\r\n useEffect(() => {\r\n\r\n }, [updatedAlbumTitle])\r\n\r\n \r\n\treturn (\r\n\t\t<>\r\n\r\n     { currentAlbum !== undefined &&\r\n\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { currentAlbum !== undefined && !isLoading &&\r\n        <UploadImage \r\n          albumId={currentAlbum.id !== undefined && currentAlbum.id } \r\n        /> }\r\n        <Flex \r\n          justify=\"center\" \r\n          align=\"center\" \r\n          direction=\"column\"\r\n        > \r\n          </Flex>\r\n          {\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (imagesInCurrentAlbum !== undefined && imagesInCurrentAlbum.length \r\n          ? \r\n          <SharedImageGrid images={imagesInCurrentAlbum} albumId={currentAlbum.id} />\r\n          :\r\n\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n\r\n      </Flex>\r\n      }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SharedAlbum\r\n\r\n","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js",["276","277","278","279","280","281","282","283"],"\r\nimport { AddIcon } from '@chakra-ui/icons';\r\nimport { Grid, GridItem, Image, Text, Button, CloseButton, Checkbox, Flex, Box, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, useDisclosure, ModalFooter } from '@chakra-ui/react'\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nimport { useFire } from '../../contexts/FirebaseContext';\r\nimport { useUpdate } from '../../contexts/UpdateContext';\r\nimport CreateNewAlbumFromPickedImages from '../forms/CreateNewAlbumFromPickedImages';\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst SharedImageGrid = (props) => {\r\n  const {id} = useParams();\r\n  const { firebaseFunctions, db } = useFire()\r\n  const { getImagesByAlbumId } = firebaseFunctions;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const {\r\n      imagesInCurrentAlbum,\r\n      setPickedImages, \r\n      pickedImages, \r\n      discardedImages,\r\n      albumToShare,\r\n      setDiscardedImages,\r\n    } = useUpdate()\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [checkers, setCheckers] = useState([])\r\n\r\n  const checkBoxPickedRef = useRef(null)\r\n  const checkBoxDiscardRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n( async () => {\r\n    setIsLoading(true)\r\n    setPickedImages([])\r\n    setDiscardedImages([])\r\n    let ref = db.collection('albums').doc(id);\r\n    let res = await ref.get();\r\n    let imagesRef = res.data().images\r\n    let arr = []\r\n    await imagesRef.map((img, i) => {\r\n      let newImg = {\r\n        ...img,\r\n        docId: img.id,\r\n        id: i,\r\n        picked: false,\r\n        discarded: false,\r\n      }\r\n      arr.push(newImg)\r\n    })\r\n    setCheckers(arr)\r\n    setIsLoading(false)\r\n}\r\n  )()\r\n  }, []);\r\n\r\n  const handlePickImage = async (e, item) => {\r\n    console.log('val', item)\r\n    let filterChecks = checkers.map(check => check)\r\n    console.log(filterChecks, 'filter')\r\n    if(filterChecks.includes(item)){\r\n      filterChecks.forEach(obj => {\r\n        if(!obj.picked && obj.id === item.id) {\r\n          obj.picked = true\r\n          setPickedImages(prevItems => [...prevItems, obj])\r\n        }\r\n        else if(obj.picked && obj.id === item.id ) {\r\n          obj.picked = false\r\n          setPickedImages(pickedImages.filter(obj => !pickedImages.includes(obj)))\r\n        }\r\n      })\r\n    }\r\n    setCheckers(filterChecks)\r\n  }\r\n\r\n  const handleDiscardimage = async (e, item) => {\r\n    let filterChecks = checkers.map(check => check)\r\n    console.log(filterChecks, 'filter')\r\n    if(filterChecks.includes(item)){\r\n      filterChecks.map(obj => {\r\n        console.log(obj)\r\n        if(!obj.discarded && obj.id === item.id) {\r\n          obj.discarded = true\r\n          setDiscardedImages(prevItems => [...prevItems, item])\r\n        }\r\n        else if(obj.discarded && obj.id === item.id ) {\r\n          obj.discarded = false\r\n          setDiscardedImages(discardedImages.filter(obj => !discardedImages.includes(obj)))\r\n        }\r\n      })\r\n    }\r\n    setCheckers(filterChecks)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log({'picked': pickedImages,'discarded': discardedImages})\r\n  }, [discardedImages, pickedImages])\r\n\r\n  const handleNewAlbum = async () => {\r\n    onOpen()\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n    {\r\n      !isLoading ?\r\n      <>\r\n        <Flex key={uuidv4()} justify=\"center\" w=\"400px\" width=\"100vw\" p=\"2rem\">\r\n        <Button key={uuidv4()}  mr=\"2rem\" colorScheme=\"teal\" onClick={handleNewAlbum}>\r\n          Add images to new album\r\n        </Button>\r\n          <>\r\n            <Modal\r\n              key={uuidv4()}\r\n              closeOnOverlayClick={false}\r\n              isOpen={isOpen}\r\n              onClose={onClose}\r\n            >\r\n            <ModalOverlay/>\r\n            <ModalContent key={uuidv4()} >\r\n            <Flex key={uuidv4()} justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\r\n              <ModalHeader>Create new album</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n                <Flex justify=\"center\" align=\"center\">\r\n                  <CreateNewAlbumFromPickedImages pictures={pickedImages}/>\r\n               </Flex>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button onClick={onClose}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Flex>\r\n            </ModalContent>\r\n          </Modal>\r\n        </>\r\n      </Flex>\r\n      <Grid \r\n        key={uuidv4()}\r\n        mr=\"1rem\"\r\n        ml=\"1rem\"\r\n        templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} \r\n        templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(3, 1fr)\",]} \r\n        mt=\"2rem\" \r\n        gap={8}\r\n        overflowX=\"hidden\"\r\n        h=\"100%\"\r\n        w=\"100%\"\r\n      >\r\n        {\r\n         checkers.length > 0 && checkers.map((item, i) => (\r\n            <>\r\n              <GridItem \r\n                key={i}\r\n                colSpan={1} \r\n                rowSpan={2} \r\n                overflow=\"hidden\"\r\n              >\r\n              <Flex \r\n                justify=\"space-between\" \r\n                align=\"center\" \r\n                flexBasis=\"0\" \r\n              >\r\n              <Text\r\n                isTruncated\r\n                w=\"100%\"\r\n                fontSize=\"sm\" \r\n                textAlign=\"center\" \r\n                p=\"5px\">{item.title}\r\n              </Text>\r\n              </Flex>\r\n              <Box>\r\n                <Image\r\n                  src={item.url} \r\n                  alt={item.title} \r\n                  h=\"100%\" \r\n                  w=\"100%\" \r\n                  objectFit=\"contain\"\r\n                  p=\"5px\" \r\n                />\r\n              </Box>\r\n              <Flex border=\"3px\" justify=\"space-between\" borderColor=\"red\">\r\n                <Checkbox\r\n                  ref={checkBoxPickedRef}\r\n                  isDisabled={checkers[i].discarded}\r\n                  isChecked={checkers[i].picked}\r\n                  ml=\"5px\"\r\n                  size=\"md\"\r\n                  id={item.id}\r\n                  colorScheme=\"green\"\r\n                  onChange={(e) => handlePickImage(e, item)}\r\n                >\r\n                  keep\r\n                </Checkbox>\r\n                <Checkbox\r\n                  ref={checkBoxDiscardRef}\r\n                  isDisabled={checkers[i].picked}\r\n                  isChecked={checkers[i].discarded}\r\n                  ml=\"5px\"\r\n                  size=\"md\"\r\n                  id={item.id}\r\n                  colorScheme=\"red\"\r\n                  onChange={(e) => handleDiscardimage(e, item)}\r\n                >\r\n                  Discard\r\n                </Checkbox> \r\n              </Flex>\r\n            </GridItem>\r\n            </>\r\n          ))\r\n        }\r\n      </Grid>\r\n\r\n      </>\r\n      :\r\n      <h1>LOADING</h1>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SharedImageGrid","D:\\frontend\\Projects\\picully\\src\\components\\forms\\NewUpload.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":1,"column":16,"nodeType":"290","messageId":"291","endLine":1,"endColumn":24},{"ruleId":"288","severity":1,"message":"292","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"293","line":17,"column":11,"nodeType":"290","messageId":"291","endLine":17,"endColumn":23},{"ruleId":"288","severity":1,"message":"294","line":17,"column":25,"nodeType":"290","messageId":"291","endLine":17,"endColumn":40},{"ruleId":"288","severity":1,"message":"295","line":17,"column":42,"nodeType":"290","messageId":"291","endLine":17,"endColumn":54},{"ruleId":"288","severity":1,"message":"296","line":17,"column":56,"nodeType":"290","messageId":"291","endLine":17,"endColumn":71},{"ruleId":"288","severity":1,"message":"297","line":17,"column":85,"nodeType":"290","messageId":"291","endLine":17,"endColumn":98},{"ruleId":"288","severity":1,"message":"298","line":17,"column":100,"nodeType":"290","messageId":"291","endLine":17,"endColumn":112},{"ruleId":"288","severity":1,"message":"299","line":18,"column":41,"nodeType":"290","messageId":"291","endLine":18,"endColumn":53},{"ruleId":"288","severity":1,"message":"300","line":18,"column":55,"nodeType":"290","messageId":"291","endLine":18,"endColumn":61},{"ruleId":"288","severity":1,"message":"301","line":18,"column":63,"nodeType":"290","messageId":"291","endLine":18,"endColumn":65},{"ruleId":"288","severity":1,"message":"302","line":19,"column":11,"nodeType":"290","messageId":"291","endLine":19,"endColumn":25},{"ruleId":"288","severity":1,"message":"303","line":19,"column":47,"nodeType":"290","messageId":"291","endLine":19,"endColumn":66},{"ruleId":"288","severity":1,"message":"304","line":19,"column":68,"nodeType":"290","messageId":"291","endLine":19,"endColumn":86},{"ruleId":"305","severity":1,"message":"306","line":28,"column":6,"nodeType":"307","endLine":28,"endColumn":18,"suggestions":"308"},{"ruleId":"288","severity":1,"message":"309","line":1,"column":42,"nodeType":"290","messageId":"291","endLine":1,"endColumn":51},{"ruleId":"288","severity":1,"message":"310","line":25,"column":19,"nodeType":"290","messageId":"291","endLine":25,"endColumn":29},{"ruleId":"288","severity":1,"message":"311","line":32,"column":10,"nodeType":"290","messageId":"291","endLine":32,"endColumn":21},{"ruleId":"288","severity":1,"message":"312","line":1,"column":41,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"313","line":9,"column":3,"nodeType":"290","messageId":"291","endLine":9,"endColumn":20},{"ruleId":"288","severity":1,"message":"309","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":2,"column":28,"nodeType":"290","messageId":"291","endLine":2,"endColumn":36},{"ruleId":"288","severity":1,"message":"314","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":21},{"ruleId":"288","severity":1,"message":"315","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":19},{"ruleId":"288","severity":1,"message":"316","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":19},{"ruleId":"288","severity":1,"message":"317","line":2,"column":166,"nodeType":"290","messageId":"291","endLine":2,"endColumn":172},{"ruleId":"288","severity":1,"message":"318","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":19},{"ruleId":"288","severity":1,"message":"316","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":19},{"ruleId":"288","severity":1,"message":"301","line":21,"column":31,"nodeType":"290","messageId":"291","endLine":21,"endColumn":33},{"ruleId":"288","severity":1,"message":"319","line":27,"column":12,"nodeType":"290","messageId":"291","endLine":27,"endColumn":36},{"ruleId":"288","severity":1,"message":"320","line":27,"column":38,"nodeType":"290","messageId":"291","endLine":27,"endColumn":65},{"ruleId":"305","severity":1,"message":"321","line":44,"column":8,"nodeType":"307","endLine":44,"endColumn":41,"suggestions":"322"},{"ruleId":"288","severity":1,"message":"323","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":27},{"ruleId":"288","severity":1,"message":"324","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":23},{"ruleId":"288","severity":1,"message":"293","line":9,"column":13,"nodeType":"290","messageId":"291","endLine":9,"endColumn":25},{"ruleId":"288","severity":1,"message":"295","line":9,"column":27,"nodeType":"290","messageId":"291","endLine":9,"endColumn":39},{"ruleId":"305","severity":1,"message":"325","line":29,"column":5,"nodeType":"307","endLine":29,"endColumn":7,"suggestions":"326"},{"ruleId":"284","replacedBy":"327"},{"ruleId":"286","replacedBy":"328"},{"ruleId":"288","severity":1,"message":"329","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":18},{"ruleId":"288","severity":1,"message":"330","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":15},{"ruleId":"288","severity":1,"message":"331","line":4,"column":22,"nodeType":"290","messageId":"291","endLine":4,"endColumn":26},{"ruleId":"288","severity":1,"message":"332","line":4,"column":35,"nodeType":"290","messageId":"291","endLine":4,"endColumn":40},{"ruleId":"288","severity":1,"message":"309","line":5,"column":17,"nodeType":"290","messageId":"291","endLine":5,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":5,"column":28,"nodeType":"290","messageId":"291","endLine":5,"endColumn":36},{"ruleId":"288","severity":1,"message":"318","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":19},{"ruleId":"288","severity":1,"message":"333","line":7,"column":10,"nodeType":"290","messageId":"291","endLine":7,"endColumn":16},{"ruleId":"288","severity":1,"message":"334","line":8,"column":9,"nodeType":"290","messageId":"291","endLine":8,"endColumn":16},{"ruleId":"284","replacedBy":"335"},{"ruleId":"286","replacedBy":"336"},{"ruleId":"288","severity":1,"message":"337","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"338","line":8,"column":3,"nodeType":"290","messageId":"291","endLine":8,"endColumn":16},{"ruleId":"288","severity":1,"message":"339","line":12,"column":3,"nodeType":"290","messageId":"291","endLine":12,"endColumn":10},{"ruleId":"288","severity":1,"message":"340","line":14,"column":39,"nodeType":"290","messageId":"291","endLine":14,"endColumn":50},{"ruleId":"288","severity":1,"message":"341","line":16,"column":22,"nodeType":"290","messageId":"291","endLine":16,"endColumn":24},{"ruleId":"288","severity":1,"message":"342","line":24,"column":14,"nodeType":"290","messageId":"291","endLine":24,"endColumn":21},{"ruleId":"288","severity":1,"message":"299","line":38,"column":7,"nodeType":"290","messageId":"291","endLine":38,"endColumn":19},{"ruleId":"288","severity":1,"message":"343","line":39,"column":7,"nodeType":"290","messageId":"291","endLine":39,"endColumn":16},{"ruleId":"288","severity":1,"message":"344","line":40,"column":7,"nodeType":"290","messageId":"291","endLine":40,"endColumn":19},{"ruleId":"288","severity":1,"message":"345","line":41,"column":7,"nodeType":"290","messageId":"291","endLine":41,"endColumn":16},{"ruleId":"288","severity":1,"message":"346","line":42,"column":7,"nodeType":"290","messageId":"291","endLine":42,"endColumn":30},{"ruleId":"288","severity":1,"message":"347","line":46,"column":7,"nodeType":"290","messageId":"291","endLine":46,"endColumn":22},{"ruleId":"288","severity":1,"message":"348","line":49,"column":10,"nodeType":"290","messageId":"291","endLine":49,"endColumn":18},{"ruleId":"288","severity":1,"message":"349","line":49,"column":20,"nodeType":"290","messageId":"291","endLine":49,"endColumn":31},{"ruleId":"288","severity":1,"message":"350","line":51,"column":9,"nodeType":"290","messageId":"291","endLine":51,"endColumn":17},{"ruleId":"288","severity":1,"message":"351","line":55,"column":10,"nodeType":"290","messageId":"291","endLine":55,"endColumn":12},{"ruleId":"352","severity":1,"message":"353","line":87,"column":36,"nodeType":"354","messageId":"355","endLine":87,"endColumn":37,"suggestions":"356"},{"ruleId":"288","severity":1,"message":"357","line":137,"column":9,"nodeType":"290","messageId":"291","endLine":137,"endColumn":27},{"ruleId":"358","severity":1,"message":"359","line":141,"column":43,"nodeType":"360","messageId":"361","endLine":141,"endColumn":45},{"ruleId":"288","severity":1,"message":"309","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":19},{"ruleId":"288","severity":1,"message":"362","line":18,"column":21,"nodeType":"290","messageId":"291","endLine":18,"endColumn":33},{"ruleId":"288","severity":1,"message":"344","line":19,"column":21,"nodeType":"290","messageId":"291","endLine":19,"endColumn":33},{"ruleId":"288","severity":1,"message":"363","line":20,"column":33,"nodeType":"290","messageId":"291","endLine":20,"endColumn":50},{"ruleId":"288","severity":1,"message":"342","line":22,"column":11,"nodeType":"290","messageId":"291","endLine":22,"endColumn":18},{"ruleId":"288","severity":1,"message":"339","line":1,"column":26,"nodeType":"290","messageId":"291","endLine":1,"endColumn":33},{"ruleId":"288","severity":1,"message":"364","line":1,"column":42,"nodeType":"290","messageId":"291","endLine":1,"endColumn":46},{"ruleId":"284","replacedBy":"365"},{"ruleId":"286","replacedBy":"366"},{"ruleId":"288","severity":1,"message":"309","line":1,"column":20,"nodeType":"290","messageId":"291","endLine":1,"endColumn":29},{"ruleId":"288","severity":1,"message":"367","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"368","line":16,"column":10,"nodeType":"290","messageId":"291","endLine":16,"endColumn":18},{"ruleId":"305","severity":1,"message":"369","line":16,"column":5,"nodeType":"307","endLine":16,"endColumn":12,"suggestions":"370"},{"ruleId":"288","severity":1,"message":"339","line":5,"column":16,"nodeType":"290","messageId":"291","endLine":5,"endColumn":23},{"ruleId":"288","severity":1,"message":"332","line":5,"column":25,"nodeType":"290","messageId":"291","endLine":5,"endColumn":30},{"ruleId":"288","severity":1,"message":"371","line":9,"column":9,"nodeType":"290","messageId":"291","endLine":9,"endColumn":15},{"ruleId":"288","severity":1,"message":"372","line":10,"column":9,"nodeType":"290","messageId":"291","endLine":10,"endColumn":18},{"ruleId":"288","severity":1,"message":"351","line":16,"column":10,"nodeType":"290","messageId":"291","endLine":16,"endColumn":12},{"ruleId":"288","severity":1,"message":"373","line":28,"column":10,"nodeType":"290","messageId":"291","endLine":28,"endColumn":20},{"ruleId":"305","severity":1,"message":"374","line":65,"column":6,"nodeType":"307","endLine":65,"endColumn":46,"suggestions":"375"},{"ruleId":"288","severity":1,"message":"376","line":69,"column":9,"nodeType":"290","messageId":"291","endLine":69,"endColumn":19},{"ruleId":"288","severity":1,"message":"377","line":74,"column":9,"nodeType":"290","messageId":"291","endLine":74,"endColumn":30},{"ruleId":"288","severity":1,"message":"378","line":78,"column":9,"nodeType":"290","messageId":"291","endLine":78,"endColumn":27},{"ruleId":"288","severity":1,"message":"337","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"379","line":3,"column":47,"nodeType":"290","messageId":"291","endLine":3,"endColumn":58},{"ruleId":"288","severity":1,"message":"304","line":16,"column":11,"nodeType":"290","messageId":"291","endLine":16,"endColumn":29},{"ruleId":"288","severity":1,"message":"380","line":19,"column":7,"nodeType":"290","messageId":"291","endLine":19,"endColumn":27},{"ruleId":"288","severity":1,"message":"293","line":23,"column":7,"nodeType":"290","messageId":"291","endLine":23,"endColumn":19},{"ruleId":"358","severity":1,"message":"359","line":42,"column":34,"nodeType":"360","messageId":"361","endLine":42,"endColumn":36},{"ruleId":"305","severity":1,"message":"381","line":56,"column":6,"nodeType":"307","endLine":56,"endColumn":8,"suggestions":"382"},{"ruleId":"358","severity":1,"message":"359","line":81,"column":28,"nodeType":"360","messageId":"361","endLine":81,"endColumn":30},"no-native-reassign",["383"],"no-negated-in-lhs",["384"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'albumToShare' is assigned a value but never used.","'setAlbumToShare' is assigned a value but never used.","'renderShared' is assigned a value but never used.","'setRenderShared' is assigned a value but never used.","'setCurrentUrl' is assigned a value but never used.","'userLoggedIn' is assigned a value but never used.","'setSharedUrl' is assigned a value but never used.","'albums' is assigned a value but never used.","'db' is assigned a value but never used.","'getAlbumsByUrl' is assigned a value but never used.","'getImagesByAlbumUrl' is assigned a value but never used.","'getImagesByAlbumId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSharedAlbumUrls'. Either include it or remove the dependency array.","ArrayExpression",["385"],"'useEffect' is defined but never used.","'setUpdated' is assigned a value but never used.","'sharedAlbum' is assigned a value but never used.","'Spacer' is defined but never used.","'DrawerCloseButton' is defined but never used.","'useNavigate' is defined but never used.","'useUpdate' is defined but never used.","'SharedAlbum' is defined but never used.","'Center' is defined but never used.","'useParams' is defined but never used.","'imagesOwnedByCurrentUser' is assigned a value but never used.","'setImagesOwnedByCurrentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'firebaseFunctions'. Either include them or remove the dependency array.",["386"],"'useContext' is defined but never used.","'SharedImageGrid' is defined but never used.","React Hook useEffect has missing dependencies: 'db' and 'id'. Either include them or remove the dependency array.",["387"],["383"],["384"],"'StarIcon' is defined but never used.","'Badge' is defined but never used.","'Flex' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'useFire' is defined but never used.",["383"],["384"],"'AddIcon' is defined but never used.","'PopoverFooter' is defined but never used.","'Heading' is defined but never used.","'useCallback' is defined but never used.","'FS' is defined but never used.","'storage' is assigned a value but never used.","'sharedUrl' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setImagesInCurrentAlbum' is assigned a value but never used.","'setSharedImages' is assigned a value but never used.","'checkers' is assigned a value but never used.","'setCheckers' is assigned a value but never used.","'navigate' is assigned a value but never used.","'id' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["388","389"],"'handleDiscardimage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setThisAlbum' is assigned a value but never used.","'updatedAlbumTitle' is assigned a value but never used.","'Text' is defined but never used.",["383"],["384"],"'boolean' is defined but never used.","'onUpload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db' and 'storage'. Either include them or remove the dependency array.",["390"],"'GrEdit' is defined but never used.","'CheckIcon' is defined but never used.","'editActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchImages', 'setCurrentAlbum', and 'setImagesInCurrentAlbum'. Either include them or remove the dependency array.",["391"],"'handleEdit' is assigned a value but never used.","'handleChangeAlbumName' is assigned a value but never used.","'handleFinishedEdit' is assigned a value but never used.","'CloseButton' is defined but never used.","'imagesInCurrentAlbum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db', 'id', 'setDiscardedImages', and 'setPickedImages'. Either include them or remove the dependency array.",["392"],"no-global-assign","no-unsafe-negation",{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"messageId":"399","fix":"400","desc":"401"},{"messageId":"402","fix":"403","desc":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},"Update the dependencies array to be: [currentUrl, getSharedAlbumUrls]",{"range":"411","text":"412"},"Update the dependencies array to be: [userLoggedIn, isUploaded, created, currentUser, firebaseFunctions]",{"range":"413","text":"414"},"Update the dependencies array to be: [db, id]",{"range":"415","text":"416"},"removeEscape",{"range":"417","text":"418"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"419","text":"420"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [db, image, storage]",{"range":"421","text":"422"},"Update the dependencies array to be: [imageDeleted, isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",{"range":"423","text":"424"},"Update the dependencies array to be: [db, id, setDiscardedImages, setPickedImages]",{"range":"425","text":"426"},[1296,1308],"[currentUrl, getSharedAlbumUrls]",[2011,2044],"[userLoggedIn, isUploaded, created, currentUser, firebaseFunctions]",[658,660],"[db, id]",[2984,2985],"",[2984,2984],"\\",[383,390],"[db, image, storage]",[1798,1838],"[imageDeleted, isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",[1724,1726],"[db, id, setDiscardedImages, setPickedImages]"]