[{"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js":"1","D:\\frontend\\Projects\\picully\\src\\App.js":"2","D:\\frontend\\Projects\\picully\\src\\index.js":"3","D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js":"4","D:\\frontend\\Projects\\picully\\src\\config\\firebase.js":"5","D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js":"6","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js":"7","D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js":"8","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js":"9","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js":"10","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js":"11","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js":"12","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js":"13","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js":"14","D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js":"15","D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js":"16","D:\\frontend\\Projects\\picully\\src\\views\\About.js":"17","D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js":"18","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js":"19","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js":"20","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js":"21","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js":"22","D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js":"23","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js":"24","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js":"25","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js":"26","D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js":"27","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js":"28","D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js":"29","D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js":"30","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js":"31","D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js":"32","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js":"33","D:\\frontend\\Projects\\picully\\src\\components\\forms\\NewUpload.js":"34"},{"size":5699,"mtime":1621530311357,"results":"35","hashOfConfig":"36"},{"size":2207,"mtime":1621531848822,"results":"37","hashOfConfig":"36"},{"size":699,"mtime":1621530311479,"results":"38","hashOfConfig":"36"},{"size":1440,"mtime":1621530311435,"results":"39","hashOfConfig":"36"},{"size":564,"mtime":1610613192949,"results":"40","hashOfConfig":"36"},{"size":8384,"mtime":1621533640624,"results":"41","hashOfConfig":"36"},{"size":375,"mtime":1610612732841,"results":"42","hashOfConfig":"36"},{"size":10158,"mtime":1621547970616,"results":"43","hashOfConfig":"36"},{"size":2796,"mtime":1621546789425,"results":"44","hashOfConfig":"36"},{"size":4886,"mtime":1610613192912,"results":"45","hashOfConfig":"36"},{"size":760,"mtime":1621531945958,"results":"46","hashOfConfig":"36"},{"size":1152,"mtime":1612431828807,"results":"47","hashOfConfig":"36"},{"size":2841,"mtime":1610613192943,"results":"48","hashOfConfig":"36"},{"size":3677,"mtime":1621546889552,"results":"49","hashOfConfig":"36"},{"size":1262,"mtime":1610613192846,"results":"50","hashOfConfig":"36"},{"size":3215,"mtime":1621534720761,"results":"51","hashOfConfig":"36"},{"size":2857,"mtime":1610613193036,"results":"52","hashOfConfig":"36"},{"size":590,"mtime":1621530311255,"results":"53","hashOfConfig":"36"},{"size":6216,"mtime":1621598822204,"results":"54","hashOfConfig":"36"},{"size":1238,"mtime":1610613794156,"results":"55","hashOfConfig":"56"},{"size":11488,"mtime":1622736381852,"results":"57","hashOfConfig":"36"},{"size":1571,"mtime":1610614438713,"results":"58","hashOfConfig":"56"},{"size":4910,"mtime":1621590135058,"results":"59","hashOfConfig":"36"},{"size":5161,"mtime":1621589005296,"results":"60","hashOfConfig":"36"},{"size":562,"mtime":1610616106222,"results":"61","hashOfConfig":"56"},{"size":785,"mtime":1610666810237,"results":"62","hashOfConfig":"56"},{"size":2632,"mtime":1621530311279,"results":"63","hashOfConfig":"36"},{"size":5284,"mtime":1621530311327,"results":"64","hashOfConfig":"36"},{"size":437,"mtime":1610613192861,"results":"65","hashOfConfig":"36"},{"size":263,"mtime":1610613192877,"results":"66","hashOfConfig":"36"},{"size":5296,"mtime":1621542182371,"results":"67","hashOfConfig":"36"},{"size":3038,"mtime":1621531909378,"results":"68","hashOfConfig":"36"},{"size":8476,"mtime":1622737597233,"results":"69","hashOfConfig":"36"},{"size":0,"mtime":1621547985088,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"12552kf",{"filePath":"74","messages":"75","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ekvwxz",{"filePath":"119","messages":"120","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js",[],["151","152"],"D:\\frontend\\Projects\\picully\\src\\App.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Routes, Route, Navigate} from 'react-router-dom'\r\nimport AuthRoute from './components/AuthRoute';\r\nimport SignUp from './components/forms/SignUp';\r\nimport NavIndex from './components/navigation/NavIndex';\r\nimport CreateAlbum from './components/album/CreateAlbum';\r\nimport Albums from './components/album/Albums';\r\nimport NotFound from './components/error/NotFound';\r\nimport Album from './components/album/Album';\r\nimport Welcome from './components/Welcome';\r\nimport SharedImageGrid from './components/pictureItems/SharedImageGrid';\r\nimport { useUpdate } from './contexts/UpdateContext';\r\nimport { useFire } from './contexts/FirebaseContext';\r\nimport { useAuth } from './contexts/AuthContext';\r\n\r\nconst App = () => {\r\n  const { albumToShare, setAlbumToShare, renderShared, setRenderShared, currentUrl, setCurrentUrl, userLoggedIn, currentAlbum} = useUpdate();\r\n  const { firebaseFunctions, sharedUrl, setSharedUrl, albums, db, } = useFire();\r\n  const { getAlbumsByUrl, getSharedAlbumUrls, getImagesByAlbumUrl, getImagesByAlbumId } = firebaseFunctions;\r\n  const { currentUser } = useAuth();\r\n\r\n\r\n  useEffect(() => {\r\n    const getUrls = async () => {\r\n      await getSharedAlbumUrls();\r\n    }\r\n    getUrls()\r\n  }, [currentUrl])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n     \r\n        { <NavIndex /> }\r\n        <Routes>\r\n\r\n          <Route path={\"/\"} element={!currentUser ? <Welcome /> : <Navigate to=\"/home/albums\" /> } />\r\n\r\n          {<Route path={`/review/:id`} element={<SharedImageGrid ALBUM_ID={sharedUrl !== '' && sharedUrl} />} />}\r\n\r\n            <AuthRoute path=\"/home\">\r\n                    <AuthRoute path=\"albums\">\r\n                      <Albums />\r\n                     <AuthRoute path=\"/:slug\">\r\n                        <Album current={currentAlbum}  />\r\n                      </AuthRoute>\r\n                      <AuthRoute path=\"/create\">\r\n                        <CreateAlbum />\r\n                      </AuthRoute>\r\n                    </AuthRoute>\r\n            </AuthRoute>\r\n\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\frontend\\Projects\\picully\\src\\index.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js",[],"D:\\frontend\\Projects\\picully\\src\\config\\firebase.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js",["168","169","170","171"],"import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport { useAuth } from './AuthContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const FirebaseContext = createContext()\r\n\r\nexport const useFire = () => useContext(FirebaseContext)\r\n\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n  \r\n  \r\n  const db = firebase.firestore()\r\n  const storage = firebase.storage()\r\n\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  const [sharedUrl, setSharedUrl] = useState('');\r\n  const [currentAlbum, setCurrentAlbum] = useState()\r\n  const [collectionData, setCollectionData] = useState([])\r\n  const [albumCollection, setAlbumCollection] = useState([])\r\n  const [created, setCreated] = useState(false)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [images, setImages] = useState([])\r\n  const [albums, setAlbums] = useState([])\r\n  const {currentUser} = useAuth()\r\n  const [updatedAlbumTitle, setUpdatedAlbumTitle] = useState(false)\r\n  const [sharedAlbum, setSharedAlbum] = useState()\r\n\r\n  const firebaseFunctions = {\r\n    //get user collection\r\n    getUsers: async () => await db.collection('users').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const userData = []\r\n      snapshot.forEach((doc) => {\r\n        userData.push({\r\n          id: doc.data().id,\r\n          firstname: doc.data().firstname,\r\n          lastname: doc.data().lastname,\r\n        })\r\n      });\r\n      setCollectionData([...userData])\r\n      setIsLoading(false)\r\n      return userData\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //get a user by id\r\n    getUser: async (id) => await db.collection('users').doc(id).get().then(doc => {\r\n      setIsLoading(true)\r\n      const user = {\r\n        firstName: '',\r\n        lastName: '',\r\n        id: '',\r\n      }\r\n      user.firstName = doc.data().firstName\r\n      user.lastName = doc.data().lastName\r\n      user.id = currentUser !== null ? currentUser.uid : ''\r\n      setUserData(user)\r\n      setIsLoading(false)\r\n      return user\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //create User\r\n    createUser: async (firstname, lastname) => await db.collection('users').add({\r\n      firstname,\r\n      lastname,\r\n      createdAt: timestamp()\r\n    }).then(docRef => {\r\n      const dataRef = db.collection(\"users\").doc(docRef.id);\r\n      return dataRef.update({\r\n        id: currentUser !== null ? currentUser.uid : ''\r\n     })\r\n    }),\r\n    //create album\r\n    createAlbum: async (title, desc, ownerId, id) => {\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      const num = uuidv4()\r\n       await db.collection(\"albums\").add({\r\n        title,\r\n        description: desc,\r\n        owner_id: ownerId,\r\n        images: [],\r\n        sharedUrl: \"\",\r\n        slug: title.replace(/\\s+/g, '-').toLowerCase().trim() + `-${num}`,\r\n        createdAt: timestamp(),\r\n        key: num,\r\n        docId: '',\r\n        id\r\n      }).then(ref => {\r\n        ref.update({\r\n          id: ref.id,\r\n          docId: ref.id,\r\n          key: uuidv4()\r\n      }).catch(\r\n       err => console.error(\"error\", err)   \r\n      )\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n  ,\r\n    createAlbumWithImages: async (title, desc, ownerId, id, images) => {\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      await db.collection(\"albums\").add({\r\n        title,\r\n        description: desc,\r\n        owner_id: ownerId,\r\n        images,\r\n        sharedUrl: \"\",\r\n        slug: title.replace(/\\s+/g, '-').toLowerCase().trim()+ `-${num}`,\r\n        createdAt: timestamp(),\r\n        key: num,\r\n        docId: '',\r\n        id\r\n      }).then(ref => {\r\n          ref.update({\r\n            id: ref.id,\r\n            docId: ref.id,\r\n      })\r\n      console.log('album created with images', images)\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n    ,\r\n    updateAlbumName: async (id, newName) => {\r\n      let ref = db.collection(\"albums\").doc(id)\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setUpdatedAlbumTitle(true)\r\n      await ref.update({\r\n        title: newName,\r\n        slug: newName.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n      }).then(\r\n        setIsLoading(false),\r\n        setUpdatedAlbumTitle(false)\r\n        \r\n      ).catch(err => console.log(\"error\", err))\r\n \r\n    }\r\n    ,\r\n    updateAlbumSharedUrl: async (id, url) => {\r\n      let ref = db.collection(\"albums\").doc(id)\r\n      setIsLoading(true)\r\n      await ref.update({\r\n        sharedUrl: `${url}`,\r\n      }).then(\r\n        setIsLoading(false),\r\n        \r\n      ).catch(err => console.log(\"error\", err))\r\n    }\r\n    ,\r\n    //get albums\r\n    getUserAlbums: async (id) => await db.collection('albums').where(\"owner_id\", \"==\", id).get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albums = []\r\n\r\n      snapshot.forEach((doc) => {\r\n        albums.push(doc.data())\r\n      });\r\n      setAlbumCollection([...albums])\r\n      setIsLoading(false)\r\n      return albums\r\n    }, err => {\r\n      console.log(err)\r\n    }),\r\n    getAlbumByTitle: async (name) => {\r\n     await db.collection('albums').where('title', '==', name).get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          const tempAlbums = []\r\n          let tempObj = doc.id\r\n          tempAlbums.push(doc.data())\r\n          setAlbumCollection(tempAlbums)\r\n          setCurrentAlbum(tempObj)\r\n          setIsLoading(false)\r\n          return tempObj\r\n        })          \r\n      }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    }\r\n    ,\r\n    //get ablum by album id\r\n    getAlbumsByUrl: async (url) => await db.collection('albums').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albumArr = []\r\n      snapshot.forEach((doc) => {\r\n        if(doc.data().sharedUrl === url) {\r\n          albumArr.push(doc.data())\r\n        }\r\n        setSharedAlbum(albumArr)\r\n        setIsLoading(false)\r\n        return albumArr\r\n      })\r\n      return false\r\n    }, err => {\r\n      console.log(err)\r\n    }),\r\n    getAlbumById: async (albumId) => {\r\n      // get ref\r\n      const albumIdRef = db.collection('albums')\r\n      setIsLoading(true)\r\n      albumIdRef\r\n      .where('id', '==', albumId)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        })\r\n        return items\r\n      })\r\n      \r\n    },\r\n    getSharedAlbumUrls: async () => await db.collection('albums').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albumArr = []\r\n      snapshot.forEach((doc) => {\r\n        if(doc.data().sharedUrl) {\r\n          albumArr.push(doc.data().sharedUrl)\r\n        }\r\n      })\r\n      setAlbums(albumArr)\r\n      setIsLoading(false)\r\n      return albumArr\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    getImagesByAlbumId: async (id) => {\r\n       db.collection(\"images\").where(\"albums\", \"array-contains\", id).get().then(querySnapshot => {\r\n        const imageArr = []\r\n        querySnapshot.forEach(doc => {\r\n            imageArr.push({\r\n              title: doc.data().title,\r\n              album: doc.data().album,\r\n              path: doc.data().path,\r\n              size: doc.data().size,\r\n              url: doc.data().url\r\n            })\r\n          })\r\n          console.log(\"image in current album\", imageArr, id)\r\n          // setImages([...imageArr])\r\n          setIsLoading(false)\r\n          return imageArr\r\n        })\r\n    .catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n    },\r\n  }\r\n\r\n  const firebaseContextValue = {\r\n    firebaseFunctions,\r\n    collectionData,\r\n    userData,\r\n    isLoading,\r\n    timestamp,\r\n    db,\r\n    created,\r\n    updatedAlbumTitle,\r\n    setUpdatedAlbumTitle,\r\n    images,\r\n    albumCollection,\r\n    updated,\r\n    currentAlbum,\r\n    storage,\r\n    albums,\r\n    setAlbums,\r\n    setSharedUrl,\r\n    sharedUrl\r\n  }\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value=\r\n      {firebaseContextValue}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider >\r\n  )\r\n}\r\n","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js",["172","173"],"import { Flex, Heading, ListItem, Link, Spacer, UnorderedList, Box, useDisclosure, CloseButton, Button } from '@chakra-ui/react'\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n} from \"@chakra-ui/react\"\r\nimport {Link as ReactLink} from 'react-router-dom'\r\nimport React, { useRef } from 'react'\r\nimport { ArrowForwardIcon, HamburgerIcon } from '@chakra-ui/icons'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nconst NavMobile = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {currentUser, logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n  return (\r\n    <>\r\n\r\n      <Flex justify=\"space-between\" align=\"center\" minW=\"100vw\">\r\n        <Heading \r\n        color=\"teal.300\" \r\n        ml={[\"1.4rem\", \"2rem\", \"2.3rem\", \"xl\"]}\r\n        mt={[\"1rem\", \"2rem\", \"2.3rem\", \"xl\"]}\r\n        >Picully</Heading>\r\n        <Box ref={boxRef} mt={[\"1.2rem\", \"md\", \"lg\", \"xl\"]} mr={[\"2rem\", \"md\", \"lg\", \"xl\"]} onClick={onOpen}>\r\n          {!isOpen && <HamburgerIcon w={[10, 12, 16]} h={[10, 12, 16]} />}\r\n        </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        background=\"green\"\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody display=\"flex\" justifyContent=\"center\"  alignItems=\"center\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                justify=\"center\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                 \r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Home</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">About</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Contact</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                  mb=\"10\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Home</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n              mb={[\"3rem\", \"18px\", \"20px\", \"22px\"]}\r\n            >\r\n              {\r\n                currentUser \r\n                ? \r\n                <Button\r\n                  mt={2}\r\n                  mb={8}\r\n                  background=\"teal.200\"\r\n                  color=\"white\"\r\n                  size=\"md\"\r\n                  onClick={handleSignOut}\r\n                >\r\n                  Sign out\r\n                </Button>\r\n                :\r\n                \"\"\r\n              }     \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobile\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js",["174"],"import { HamburgerIcon } from '@chakra-ui/icons'\r\nimport { Box, CloseButton, DrawerBody, Link, DrawerContent, DrawerHeader, DrawerOverlay, Flex, ListItem, UnorderedList, DrawerFooter, Drawer, useDisclosure, Button, Center } from '@chakra-ui/react'\r\nimport React, { useRef } from 'react'\r\nimport { Link as ReactLink } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nconst NavMobileSignedIn = () => {\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n\r\n  return (\r\n    <>\r\n    <Flex justify=\"flex-end\" align=\"center\" minW=\"100vw\">\r\n      <Box ref={boxRef} mt=\"10px\" mr=\"24px\" onClick={onOpen}>\r\n        {!isOpen && <HamburgerIcon w={10} h={10} />}\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        size={[\"full\", \"md\", \"lg\", \"0\"]}\r\n\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody background=\"green\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                p=\"10px\" \r\n                justify=\"space-around\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                ml=\"87px\" \r\n                mt=\"50px\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem>\r\n                  <Link as={ReactLink} to=\"/\">Home</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums\" pr=\"5px\">Albums</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/profile\">Profile</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums/create\">Upload</Link>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n            >\r\n                <Button\r\n                mt={4}\r\n                mb={8}\r\n                background=\"teal.500\"\r\n                color=\"white\"\r\n                onClick={handleSignOut}\r\n                \r\n                >Sign out</Button>          \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobileSignedIn\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js",["175","176","177","178","179","180"],"import React, { useState, createContext, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport SharedAlbum from '../components/album/SharedAlbum';\r\nimport { useAuth } from './AuthContext';\r\nimport { useFire } from './FirebaseContext';\r\n\r\nexport const UpdateContext = createContext();\r\n\r\n\r\nexport const useUpdate = () => useContext(UpdateContext)\r\n  \r\n\r\nexport const UpdateProvider = props => {\r\n    const [currentUrl, setCurrentUrl] = useState(window.location.href);\r\n    const [signUpIsClicked, setSignUpIsClicked] = useState(false)\r\n    const [imageDeleted, setImageDeleted] = useState(false)\r\n    const [albumDeleted, setAlbumDeleted] = useState(false)\r\n    const [currentAlbumID, setCurrentAlbumID] = useState(undefined)\r\n    const [currentAlbum, setCurrentAlbum] = useState(undefined)\r\n    const [currentUserAlbums, setCurrentUserAlbums] = useState([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false)\r\n    const {firebaseFunctions, db} = useFire()\r\n    const [isUploaded, setIsUploaded] = useState(false)\r\n    const [pickedImages, setPickedImages] = useState([])\r\n    const [discardedImages, setDiscardedImages] = useState([])\r\n    const [sharedIamges, setSharedImages] = useState([])\r\n    const [imagesInCurrentAlbum, setImagesInCurrentAlbum] = useState([])\r\n    const [imagesOwnedByCurrentUser, setImagesOwnedByCurrentUser] = useState()\r\n    const [albumToShare, setAlbumToShare] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const {created} = useFire()\r\n    const [renderShared, setRenderShared] = useState(false);\r\n    const [userSelectedImagesToKeep, setuserSelectedImagesToKeep] = useState([])\r\n    const [userSelectedImagesToDelete, setuserSelectedImagesToDelete] = useState([])\r\n\r\n    useEffect(() => {\r\n        ( async () => {\r\n            if(currentUser !== null && currentUser) {\r\n                setCurrentUserAlbums([])\r\n                let res = await firebaseFunctions.getUserAlbums(currentUser.uid)\r\n                setCurrentUserAlbums(res)\r\n            }\r\n        }\r\n        )()\r\n    }, [userLoggedIn,albumDeleted,isUploaded,created])\r\n\r\n    const updateContextValue = {\r\n        \r\n      signUpIsClicked,\r\n      setSignUpIsClicked,\r\n      currentAlbumID,\r\n      setCurrentUserAlbums,\r\n      currentUserAlbums,\r\n      setUserLoggedIn,\r\n      userLoggedIn,\r\n      setCurrentAlbumID,\r\n      imageDeleted,\r\n      imagesInCurrentAlbum,\r\n      setCurrentAlbum,\r\n      currentAlbum,\r\n      setImagesInCurrentAlbum,\r\n      isUploaded,\r\n      pickedImages,\r\n      setPickedImages,\r\n      setIsUploaded,\r\n      setImageDeleted,\r\n      setAlbumToShare,\r\n      albumToShare,\r\n      sharedIamges,\r\n      setSharedImages,\r\n      discardedImages,\r\n      setDiscardedImages,\r\n      userSelectedImagesToKeep, \r\n      setuserSelectedImagesToKeep,\r\n      userSelectedImagesToDelete,\r\n      albumDeleted, \r\n      setAlbumDeleted,\r\n      setuserSelectedImagesToDelete,\r\n      renderShared, \r\n      setRenderShared,\r\n      currentUrl, \r\n      setCurrentUrl\r\n    }\r\n\r\n    return (\r\n        <UpdateContext.Provider\r\n            value=\r\n            {updateContextValue}\r\n        >\r\n            {props.children}\r\n        </UpdateContext.Provider>\r\n    )\r\n}","D:\\frontend\\Projects\\picully\\src\\views\\About.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js",["181","182","183","184"],"import React, { useContext } from 'react'\r\nimport { Route, Navigate } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useUpdate } from '../contexts/UpdateContext';\r\nimport SharedImageGrid from './pictureItems/SharedImageGrid';\r\n\r\nconst AuthRoute = (props) => {\r\n    const { currentUser } = useAuth();\r\n    const { albumToShare, renderShared } = useUpdate();\r\n    return (\r\n        <>\r\n          {currentUser ? \r\n          (<Route {...props}/>)\r\n          : \r\n          (<Navigate to=\"/\"/>)\r\n          }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthRoute","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js",["185"],"\r\n/* eslint-disable no-unused-vars */\r\nimport { Box, Progress, Flex, Input, Button, InputGroup, InputRightElement, InputRightAddon, Heading, Image } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport firebase from 'firebase'\r\nimport {uploadImageToStorage, prog} from './NewUpload'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nconst UploadImage = ({albumId}) => {\r\n  \r\n  const [imageToUpload, setImageToUpload] = useState()\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\tconst [uploadProgress, setUploadProgress] = useState([]);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [currentUpload, setCurrentUpload] = useState(null)\r\n\tconst [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\tconst { currentUser } = useAuth()\r\n  const { db, storage, timestamp, firestoreFunctions } = useFire()\r\n  const {setIsUploaded} = useUpdate()\r\n\r\n  \r\nconst addImageToAlbumsArray = async (img, id) => {\r\n  try {\r\n    let ref = db.collection('albums').doc(id)\r\n   await ref.update({\r\n      images: firebase.firestore.FieldValue.arrayUnion(img),\r\n      docId: id\r\n  });\r\n  } catch (error) {\r\n   console.log(error) \r\n  }\r\n}\r\n\r\n\r\n\r\nconst checkIfImageIsInAlbum = async (imagePath, id) => {\r\nlet ref = db.collection(\"albums\").doc(id);\r\nlet res = await ref.get()\r\nawait ref.update({\r\n  docId: id\r\n})\r\nfor (let i = 0; i < res.data().images.length; i++) {\r\n        if(res.data().images[i].path === imagePath) {\r\n            console.error('This image is already in the album');\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n  console.log(currentUpload)\r\n}, [currentUpload])\r\n\r\nconst uploadImageToStorage = async (e, id) => {\r\n  e.preventDefault();\r\n  const types = [\"image/png\", \"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/svg\", \"image/webp\"]\r\n  let images = Array.from(e.target.files)\r\n\r\n  images.forEach(async (image, index) => {\r\n    \r\n  if (!image || !types.includes(image.type)) {\r\n    setUploadedImage(null);\r\n    setIsUploaded(false)\r\n    setCurrentUpload(null)\r\n    setError(null);\r\n    setIsSuccess(false);\r\n    return;\r\n  }\r\n  setIsUploaded(false)\r\n  setError(null);\r\n  setIsSuccess(false);\r\n\r\n  image.uploadIndex = uuidv4();\r\n\r\n\r\n  let storageRef = storage.ref(`images/${currentUser.uid}/${albumId}/${image.uploadIndex}`)\r\n\r\n  if(!checkIfImageIsInAlbum(`images/${currentUser.uid}/${albumId}/${image.uploadIndex}`, id)){\r\n    storageRef.getMetadata()\r\n    .then(() => {\r\n        // If the ref already exists:\r\n        storageRef.getMetadata().then((metadata) => {\r\n            const img = {\r\n                id,\r\n                key: uuidv4(),\r\n                title: metadata.name,\r\n                path: metadata.fullPath,\r\n                owner: currentUser.uid,\r\n                size: metadata.size,\r\n                type: metadata.type,\r\n                url: metadata.customMetadata.url,\r\n            };\r\n  \r\n            addImageToAlbumsArray(img, id);\r\n            e.target.value = ''\r\n            setIsSuccess(true);\r\n            setIsUploaded(true)\r\n            setUploadProgress([])\r\n        })\r\n    })\r\n    return\r\n  }\r\n  (async () => {\r\n      const uploadTask = storageRef.put(image);\r\n\r\n\r\n      uploadTask.on('state_changed', taskSnapshot => {\r\n       let percentage = (Math.round((taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100))\r\n       setUploadProgress([\r\n         {\r\n          percentage, \r\n          id: index, \r\n          file: image,\r\n          total: taskSnapshot.totalBytes, \r\n          transfered: taskSnapshot.bytesTransferred\r\n        }\r\n        ])\r\n      })\r\n      uploadTask.then(async() => {\r\n          const url = await storageRef.getDownloadURL()\r\n          const newMetadata = {\r\n              customMetadata : {\r\n                  url\r\n              }\r\n          }\r\n\r\n          storageRef.updateMetadata(newMetadata).then(metadata => {\r\n              const img = {\r\n                  id,\r\n                  key: uuidv4(),\r\n                  title: metadata.name,\r\n                  path: metadata.fullPath,\r\n                  size: metadata.size,\r\n                  type: metadata.type,\r\n                  owner: currentUser.uid,\r\n                  url: metadata.customMetadata.url,\r\n              };\r\n\r\n              if (id) {    \r\n                img.albums = []\r\n                img.albums.push(db.collection('albums').doc(id))\r\n              }\r\n              addImageToAlbumsArray(img, id);\r\n              setUploadedImage(img);\r\n              e.target.value = '';\r\n              \r\n          })\r\n          .catch(error => {\r\n              console.log(error)\r\n          })\r\n      })\r\n    // let user know we're done\r\n    e.target.value = '';\r\n  })()\r\n  })\r\n  setUploadProgress([]);\r\n  setIsSuccess(true);\r\n}\r\n\r\n  useEffect(() => {\r\n   if(isSuccess) {\r\n     setImageToUpload({})\r\n     setIsUploaded(true)\r\n   }\r\n   else if(error) {\r\n     console.log(error)\r\n   }\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSuccess, error, uploadProgress, isSubmitting])\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Flex justify=\"center\" align=\"center\">\r\n          <InputGroup display=\"flex\" justifyContent=\"center\" alignItems=\"center\" >\r\n            <Input accept=\"image/*\" multiple pt=\"5px\"type=\"file\" onChange={(e) => uploadImageToStorage(e, albumId)} w=\"400px\" textAlign=\"center\" />\r\n            <InputRightAddon bg=\"teal.400\" color=\"white\" cursor=\"pointer\" _hover={{backgroundColor: \"teal.200\", color: \"white\"}}>\r\n                Submit\r\n            </InputRightAddon>\r\n          </InputGroup> \r\n        </Flex>\r\n      </form>\r\n     { uploadProgress.length > 0 && \r\n      <Flex direction=\"column\">\r\n        {  \r\n          uploadProgress.length > 0 && uploadProgress.percentage !== undefined && uploadProgress.map(({percentage}, index) => {\r\n            <Progress key={index} mt=\"1rem\" mb=\"1rem\" colorScheme=\"teal\" size=\"md\" value={percentage}/>\r\n          })\r\n        }\r\n      </Flex>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UploadImage\r\n/* eslint-disable no-unused-vars */","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js",["186","187","188","189","190","191","192","193","194"],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js",["214","215","216","217","218","219"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UploadImage from '../forms/UploadImage'\r\n\r\nimport { Flex, Heading, Input, Spinner, Text } from '@chakra-ui/react'\r\n\r\nimport ImageGrid from '../pictureItems/ImageGrid'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport {GrEdit} from 'react-icons/gr'\r\nimport {CheckIcon} from '@chakra-ui/icons'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n\r\n\r\n\r\nconst Album = ({current}) => {\r\n  const {slug} = useParams()\r\n  const [id, setId] = useState(false);\r\n  const [thisAlbum, setThisAlbum] = useState(current);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {firebaseFunctions, db, updatedAlbumTitle} = useFire()\r\n  const { \r\n          storage,\r\n          imageDeleted,\r\n          isUploaded,\r\n          currentAlbum,\r\n          imagesInCurrentAlbum,\r\n          setCurrentAlbum,\r\n          setImagesInCurrentAlbum} = useUpdate()\r\n  const [editAlbumName, setEditAlbumName] = useState(false)\r\n  const [editActive, setEditActive] = useState(false)\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true)\r\n        setImagesInCurrentAlbum([]);\r\n        let ref = db.collection('albums');\r\n        let res = await ref.where('slug', '==', slug).get();\r\n        for(const doc of res.docs){\r\n          let docRef = doc.data();\r\n          setCurrentAlbum(docRef)\r\n          setId(docRef.id)\r\n          docRef.images.forEach(img=> {\r\n            setImagesInCurrentAlbum(prevImgs => [...prevImgs, img])\r\n          })\r\n          setLoading(false);\r\n        }\r\n    })()\r\n  setLoading(false);\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, [isUploaded])\r\n\r\n  const handleEdit = () => {\r\n    setEditActive(true)\r\n  }\r\n\r\n\r\n  const handleChangeAlbumName = (e) => {\r\n      setEditAlbumName(e.target.value)\r\n  }\r\n\r\n  const handleFinishedEdit = async ()=> {\r\n    if(!editAlbumName) {\r\n      return \r\n    }\r\n   await firebaseFunctions.updateAlbumName(currentAlbum.id, editAlbumName)\r\n    setEditActive(false)\r\n  }\r\n \r\n\treturn (\r\n\t\t<>\r\n\r\n     { currentAlbum !== undefined && !loading ?\r\n\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { currentAlbum !== undefined && !loading &&\r\n        <UploadImage\r\n          albumId={id !== null ? id : false} \r\n        /> }\r\n        <Flex\r\n          mt=\"10px\"\r\n          justify=\"center\" \r\n          align=\"center\" \r\n          direction=\"column\"\r\n        >     \r\n          <Text>Edit Title</Text>\r\n            <Flex \r\n              justify=\"space-around\" \r\n              align=\"center\" \r\n            >\r\n              {editActive &&\r\n                  <Flex \r\n                    justify=\"center\" \r\n                    align=\"center\"\r\n                  >\r\n                    <Input \r\n                      type=\"text\" \r\n                      placeholder={editAlbumName} \r\n                      onChange={handleChangeAlbumName}\r\n                      />\r\n                  </Flex> }\r\n              { !editActive ? \r\n              <Flex \r\n                justify=\"center\" \r\n                cursor=\"pointer\" \r\n                align=\"center\" \r\n                _hover={{backgroundColor: \"teal.300\"}} \r\n                >\r\n                <GrEdit \r\n                  color=\"white\" \r\n                  size={\"1.2rem\"} \r\n                  onClick={handleEdit}  />\r\n              </Flex>\r\n              : \r\n              <Flex \r\n              ml=\"1rem\" \r\n              justify=\"center\" \r\n              cursor=\"pointer\" \r\n              align=\"center\">\r\n                <CheckIcon  \r\n                  _hover={{color: \"teal.300\"}}\r\n                  w={6} \r\n                  h={6} \r\n                  color=\"teal.500\" \r\n                  onClick={handleFinishedEdit} \r\n                /> \r\n              </Flex>}\r\n            </Flex>\r\n                <Heading >{editAlbumName ? editAlbumName : currentAlbum.title }</Heading>        \r\n          </Flex>\r\n          {\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (imagesInCurrentAlbum !== undefined && imagesInCurrentAlbum.length > 0 && currentAlbum\r\n          ? \r\n          <ImageGrid albumId={currentAlbum.id} pictures={imagesInCurrentAlbum}  />\r\n          : !imagesInCurrentAlbum.length > 0 && !isLoading &&\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n\r\n      </Flex>\r\n       : loading &&\r\n       <>\r\n         <Flex\r\n           justify=\"center\" \r\n           align=\"center\"\r\n         >\r\n         <Spinner   \r\n           thickness=\"6px\"\r\n           speed=\"0.65s\"\r\n           emptyColor=\"gray.200\"\r\n           color=\"teal.500\"\r\n           size=\"xl\"  \r\n           />\r\n           Loading\r\n         </Flex>\r\n       </>\r\n      }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Album\r\n\r\n","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js",["220","221"],"import { Grid, GridItem, Heading, Image, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nconst \r\nPreviewImageGrid = ({images, previewURLS}) => {\r\n  return (\r\n    <Grid templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} gap={3} h=\"600px\">\r\n    {\r\n      previewURLS !== undefined && previewURLS.length && \r\n      previewURLS.map((prevItem, index) => (\r\n      \r\n          <GridItem p=\"2rem\" colSpan={1} overflow=\"hidden\" colStart={2} key={index}>\r\n            <Image src={prevItem.url} alt={prevItem.title} h=\"400px\" w=\"300px\" objectFit=\"contain\"/>     \r\n          </GridItem>\r\n      ))\r\n    }\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default PreviewImageGrid\r\n",["222","223"],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js",["224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UploadImage from '../forms/UploadImage'\r\n\r\nimport { Flex, Heading, Input, Spinner, Text } from '@chakra-ui/react'\r\n\r\nimport SharedImageGrid from '../pictureItems/SharedImageGrid'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport {GrEdit} from 'react-icons/gr'\r\nimport {CheckIcon} from '@chakra-ui/icons'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n\r\n\r\n\r\nconst SharedAlbum = ({album}) => {\r\n  const {id} = useParams()\r\n  \r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {firebaseFunctions, db, updatedAlbumTitle} = useFire()\r\n  const { \r\n          imageDeleted,\r\n          isUploaded, \r\n          currentAlbum,\r\n          imagesInCurrentAlbum,\r\n          setCurrentAlbum,\r\n          setImagesInCurrentAlbum} = useUpdate()\r\n  const [editAlbumName, setEditAlbumName] = useState(false)\r\n  const [editActive, setEditActive] = useState(false)\r\n\r\n\r\n  const fetchImages = async (id) => {\r\n    try {\r\n    await db.collection(\"images\").where(\"albums\", \"array-contains\", db.collection(\"albums\").doc(id)).get().then(snapshot => {\r\n      setIsLoading(true)\r\n      let imgArr = []\r\n      snapshot.forEach(doc => {\r\n        imgArr.push(doc.data())\r\n      })\r\n      setImagesInCurrentAlbum([...imgArr])\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n  catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setImagesInCurrentAlbum(\"\")\r\n      setIsLoading(true)\r\n\r\n      if(currentAlbum) {\r\n          setCurrentAlbum(currentAlbum)\r\n          fetchImages(currentAlbum.id)\r\n          setIsLoading(false)\r\n      }\r\n      else {\r\n        console.error(\"no id found\")\r\n      }\r\n\r\n    })()\r\n  }, [isUploaded, currentAlbum])\r\n\r\n\r\n useEffect(() => {\r\n\r\n }, [updatedAlbumTitle])\r\n\r\n \r\n\treturn (\r\n\t\t<>\r\n\r\n     { currentAlbum !== undefined &&\r\n\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { currentAlbum !== undefined && !isLoading &&\r\n        <UploadImage \r\n          albumId={currentAlbum.id !== undefined && currentAlbum.id } \r\n        /> }\r\n        <Flex \r\n          justify=\"center\" \r\n          align=\"center\" \r\n          direction=\"column\"\r\n        > \r\n          </Flex>\r\n          {\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (imagesInCurrentAlbum !== undefined && imagesInCurrentAlbum.length \r\n          ? \r\n          <SharedImageGrid images={imagesInCurrentAlbum} albumId={currentAlbum.id} />\r\n          :\r\n\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n\r\n      </Flex>\r\n      }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SharedAlbum\r\n\r\n","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js",["236","237","238","239","240","241"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\NewUpload.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":1,"column":16,"nodeType":"248","messageId":"249","endLine":1,"endColumn":24},{"ruleId":"246","severity":1,"message":"250","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":14},{"ruleId":"246","severity":1,"message":"251","line":17,"column":11,"nodeType":"248","messageId":"249","endLine":17,"endColumn":23},{"ruleId":"246","severity":1,"message":"252","line":17,"column":25,"nodeType":"248","messageId":"249","endLine":17,"endColumn":40},{"ruleId":"246","severity":1,"message":"253","line":17,"column":42,"nodeType":"248","messageId":"249","endLine":17,"endColumn":54},{"ruleId":"246","severity":1,"message":"254","line":17,"column":56,"nodeType":"248","messageId":"249","endLine":17,"endColumn":71},{"ruleId":"246","severity":1,"message":"255","line":17,"column":85,"nodeType":"248","messageId":"249","endLine":17,"endColumn":98},{"ruleId":"246","severity":1,"message":"256","line":17,"column":100,"nodeType":"248","messageId":"249","endLine":17,"endColumn":112},{"ruleId":"246","severity":1,"message":"257","line":18,"column":41,"nodeType":"248","messageId":"249","endLine":18,"endColumn":53},{"ruleId":"246","severity":1,"message":"258","line":18,"column":55,"nodeType":"248","messageId":"249","endLine":18,"endColumn":61},{"ruleId":"246","severity":1,"message":"259","line":18,"column":63,"nodeType":"248","messageId":"249","endLine":18,"endColumn":65},{"ruleId":"246","severity":1,"message":"260","line":19,"column":11,"nodeType":"248","messageId":"249","endLine":19,"endColumn":25},{"ruleId":"246","severity":1,"message":"261","line":19,"column":47,"nodeType":"248","messageId":"249","endLine":19,"endColumn":66},{"ruleId":"246","severity":1,"message":"262","line":19,"column":68,"nodeType":"248","messageId":"249","endLine":19,"endColumn":86},{"ruleId":"263","severity":1,"message":"264","line":28,"column":6,"nodeType":"265","endLine":28,"endColumn":18,"suggestions":"266"},{"ruleId":"246","severity":1,"message":"267","line":1,"column":42,"nodeType":"248","messageId":"249","endLine":1,"endColumn":51},{"ruleId":"246","severity":1,"message":"268","line":25,"column":19,"nodeType":"248","messageId":"249","endLine":25,"endColumn":29},{"ruleId":"246","severity":1,"message":"269","line":28,"column":18,"nodeType":"248","messageId":"249","endLine":28,"endColumn":27},{"ruleId":"246","severity":1,"message":"270","line":32,"column":10,"nodeType":"248","messageId":"249","endLine":32,"endColumn":21},{"ruleId":"246","severity":1,"message":"271","line":1,"column":41,"nodeType":"248","messageId":"249","endLine":1,"endColumn":47},{"ruleId":"246","severity":1,"message":"272","line":9,"column":3,"nodeType":"248","messageId":"249","endLine":9,"endColumn":20},{"ruleId":"246","severity":1,"message":"273","line":2,"column":166,"nodeType":"248","messageId":"249","endLine":2,"endColumn":172},{"ruleId":"246","severity":1,"message":"274","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":19},{"ruleId":"246","severity":1,"message":"275","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":22,"column":31,"nodeType":"248","messageId":"249","endLine":22,"endColumn":33},{"ruleId":"246","severity":1,"message":"276","line":28,"column":12,"nodeType":"248","messageId":"249","endLine":28,"endColumn":36},{"ruleId":"246","severity":1,"message":"277","line":28,"column":38,"nodeType":"248","messageId":"249","endLine":28,"endColumn":65},{"ruleId":"263","severity":1,"message":"278","line":45,"column":8,"nodeType":"265","endLine":45,"endColumn":54,"suggestions":"279"},{"ruleId":"246","severity":1,"message":"280","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":27},{"ruleId":"246","severity":1,"message":"281","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":23},{"ruleId":"246","severity":1,"message":"251","line":9,"column":13,"nodeType":"248","messageId":"249","endLine":9,"endColumn":25},{"ruleId":"246","severity":1,"message":"253","line":9,"column":27,"nodeType":"248","messageId":"249","endLine":9,"endColumn":39},{"ruleId":"282","severity":1,"message":"283","line":191,"column":124,"nodeType":"284","messageId":"285","endLine":191,"endColumn":126},{"ruleId":"246","severity":1,"message":"286","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":18},{"ruleId":"246","severity":1,"message":"287","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":15},{"ruleId":"246","severity":1,"message":"288","line":4,"column":22,"nodeType":"248","messageId":"249","endLine":4,"endColumn":26},{"ruleId":"246","severity":1,"message":"289","line":4,"column":35,"nodeType":"248","messageId":"249","endLine":4,"endColumn":40},{"ruleId":"246","severity":1,"message":"267","line":5,"column":17,"nodeType":"248","messageId":"249","endLine":5,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":5,"column":28,"nodeType":"248","messageId":"249","endLine":5,"endColumn":36},{"ruleId":"246","severity":1,"message":"274","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":19},{"ruleId":"246","severity":1,"message":"290","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":16},{"ruleId":"246","severity":1,"message":"291","line":8,"column":9,"nodeType":"248","messageId":"249","endLine":8,"endColumn":16},{"ruleId":"246","severity":1,"message":"292","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":17},{"ruleId":"246","severity":1,"message":"293","line":8,"column":3,"nodeType":"248","messageId":"249","endLine":8,"endColumn":16},{"ruleId":"246","severity":1,"message":"294","line":12,"column":3,"nodeType":"248","messageId":"249","endLine":12,"endColumn":10},{"ruleId":"246","severity":1,"message":"295","line":14,"column":39,"nodeType":"248","messageId":"249","endLine":14,"endColumn":50},{"ruleId":"246","severity":1,"message":"296","line":15,"column":8,"nodeType":"248","messageId":"249","endLine":15,"endColumn":16},{"ruleId":"246","severity":1,"message":"297","line":16,"column":22,"nodeType":"248","messageId":"249","endLine":16,"endColumn":24},{"ruleId":"246","severity":1,"message":"298","line":31,"column":7,"nodeType":"248","messageId":"249","endLine":31,"endColumn":22},{"ruleId":"246","severity":1,"message":"257","line":38,"column":7,"nodeType":"248","messageId":"249","endLine":38,"endColumn":19},{"ruleId":"246","severity":1,"message":"299","line":39,"column":7,"nodeType":"248","messageId":"249","endLine":39,"endColumn":16},{"ruleId":"246","severity":1,"message":"300","line":40,"column":7,"nodeType":"248","messageId":"249","endLine":40,"endColumn":19},{"ruleId":"246","severity":1,"message":"301","line":41,"column":7,"nodeType":"248","messageId":"249","endLine":41,"endColumn":16},{"ruleId":"246","severity":1,"message":"302","line":42,"column":7,"nodeType":"248","messageId":"249","endLine":42,"endColumn":30},{"ruleId":"246","severity":1,"message":"303","line":46,"column":7,"nodeType":"248","messageId":"249","endLine":46,"endColumn":22},{"ruleId":"246","severity":1,"message":"304","line":49,"column":10,"nodeType":"248","messageId":"249","endLine":49,"endColumn":18},{"ruleId":"246","severity":1,"message":"305","line":49,"column":20,"nodeType":"248","messageId":"249","endLine":49,"endColumn":31},{"ruleId":"246","severity":1,"message":"306","line":51,"column":9,"nodeType":"248","messageId":"249","endLine":51,"endColumn":17},{"ruleId":"246","severity":1,"message":"307","line":55,"column":10,"nodeType":"248","messageId":"249","endLine":55,"endColumn":12},{"ruleId":"308","severity":1,"message":"309","line":98,"column":38,"nodeType":"310","messageId":"311","endLine":98,"endColumn":39,"suggestions":"312"},{"ruleId":"282","severity":1,"message":"283","line":147,"column":43,"nodeType":"284","messageId":"285","endLine":147,"endColumn":45},{"ruleId":"246","severity":1,"message":"313","line":18,"column":10,"nodeType":"248","messageId":"249","endLine":18,"endColumn":19},{"ruleId":"246","severity":1,"message":"314","line":18,"column":21,"nodeType":"248","messageId":"249","endLine":18,"endColumn":33},{"ruleId":"246","severity":1,"message":"300","line":19,"column":21,"nodeType":"248","messageId":"249","endLine":19,"endColumn":33},{"ruleId":"246","severity":1,"message":"315","line":20,"column":33,"nodeType":"248","messageId":"249","endLine":20,"endColumn":50},{"ruleId":"246","severity":1,"message":"316","line":22,"column":11,"nodeType":"248","messageId":"249","endLine":22,"endColumn":18},{"ruleId":"246","severity":1,"message":"317","line":23,"column":11,"nodeType":"248","messageId":"249","endLine":23,"endColumn":23},{"ruleId":"246","severity":1,"message":"294","line":1,"column":26,"nodeType":"248","messageId":"249","endLine":1,"endColumn":33},{"ruleId":"246","severity":1,"message":"318","line":1,"column":42,"nodeType":"248","messageId":"249","endLine":1,"endColumn":46},{"ruleId":"242","replacedBy":"319"},{"ruleId":"244","replacedBy":"320"},{"ruleId":"246","severity":1,"message":"294","line":5,"column":16,"nodeType":"248","messageId":"249","endLine":5,"endColumn":23},{"ruleId":"246","severity":1,"message":"289","line":5,"column":25,"nodeType":"248","messageId":"249","endLine":5,"endColumn":30},{"ruleId":"246","severity":1,"message":"321","line":9,"column":9,"nodeType":"248","messageId":"249","endLine":9,"endColumn":15},{"ruleId":"246","severity":1,"message":"322","line":10,"column":9,"nodeType":"248","messageId":"249","endLine":10,"endColumn":18},{"ruleId":"246","severity":1,"message":"307","line":16,"column":10,"nodeType":"248","messageId":"249","endLine":16,"endColumn":12},{"ruleId":"246","severity":1,"message":"323","line":19,"column":10,"nodeType":"248","messageId":"249","endLine":19,"endColumn":27},{"ruleId":"246","severity":1,"message":"317","line":21,"column":11,"nodeType":"248","messageId":"249","endLine":21,"endColumn":23},{"ruleId":"246","severity":1,"message":"324","line":27,"column":10,"nodeType":"248","messageId":"249","endLine":27,"endColumn":23},{"ruleId":"246","severity":1,"message":"325","line":27,"column":25,"nodeType":"248","messageId":"249","endLine":27,"endColumn":41},{"ruleId":"246","severity":1,"message":"326","line":28,"column":10,"nodeType":"248","messageId":"249","endLine":28,"endColumn":20},{"ruleId":"246","severity":1,"message":"327","line":28,"column":22,"nodeType":"248","messageId":"249","endLine":28,"endColumn":35},{"ruleId":"263","severity":1,"message":"328","line":64,"column":6,"nodeType":"265","endLine":64,"endColumn":32,"suggestions":"329"},{"ruleId":"246","severity":1,"message":"292","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":17},{"ruleId":"246","severity":1,"message":"330","line":3,"column":47,"nodeType":"248","messageId":"249","endLine":3,"endColumn":58},{"ruleId":"246","severity":1,"message":"262","line":16,"column":11,"nodeType":"248","messageId":"249","endLine":16,"endColumn":29},{"ruleId":"246","severity":1,"message":"331","line":20,"column":7,"nodeType":"248","messageId":"249","endLine":20,"endColumn":27},{"ruleId":"246","severity":1,"message":"251","line":25,"column":7,"nodeType":"248","messageId":"249","endLine":25,"endColumn":19},{"ruleId":"282","severity":1,"message":"283","line":97,"column":28,"nodeType":"284","messageId":"285","endLine":97,"endColumn":30},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'albumToShare' is assigned a value but never used.","'setAlbumToShare' is assigned a value but never used.","'renderShared' is assigned a value but never used.","'setRenderShared' is assigned a value but never used.","'setCurrentUrl' is assigned a value but never used.","'userLoggedIn' is assigned a value but never used.","'setSharedUrl' is assigned a value but never used.","'albums' is assigned a value but never used.","'db' is assigned a value but never used.","'getAlbumsByUrl' is assigned a value but never used.","'getImagesByAlbumUrl' is assigned a value but never used.","'getImagesByAlbumId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSharedAlbumUrls'. Either include it or remove the dependency array.","ArrayExpression",["334"],"'useEffect' is defined but never used.","'setUpdated' is assigned a value but never used.","'setImages' is assigned a value but never used.","'sharedAlbum' is assigned a value but never used.","'Spacer' is defined but never used.","'DrawerCloseButton' is defined but never used.","'Center' is defined but never used.","'useParams' is defined but never used.","'SharedAlbum' is defined but never used.","'imagesOwnedByCurrentUser' is assigned a value but never used.","'setImagesOwnedByCurrentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'firebaseFunctions'. Either include them or remove the dependency array.",["335"],"'useContext' is defined but never used.","'SharedImageGrid' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'StarIcon' is defined but never used.","'Badge' is defined but never used.","'Flex' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'useFire' is defined but never used.","'AddIcon' is defined but never used.","'PopoverFooter' is defined but never used.","'Heading' is defined but never used.","'useCallback' is defined but never used.","'firebase' is defined but never used.","'FS' is defined but never used.","'setImageDeleted' is assigned a value but never used.","'sharedUrl' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setImagesInCurrentAlbum' is assigned a value but never used.","'setSharedImages' is assigned a value but never used.","'checkers' is assigned a value but never used.","'setCheckers' is assigned a value but never used.","'navigate' is assigned a value but never used.","'id' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["336","337"],"'thisAlbum' is assigned a value but never used.","'setThisAlbum' is assigned a value but never used.","'updatedAlbumTitle' is assigned a value but never used.","'storage' is assigned a value but never used.","'imageDeleted' is assigned a value but never used.","'Text' is defined but never used.",["332"],["333"],"'GrEdit' is defined but never used.","'CheckIcon' is defined but never used.","'firebaseFunctions' is assigned a value but never used.","'editAlbumName' is assigned a value but never used.","'setEditAlbumName' is assigned a value but never used.","'editActive' is assigned a value but never used.","'setEditActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchImages', 'setCurrentAlbum', and 'setImagesInCurrentAlbum'. Either include them or remove the dependency array.",["338"],"'CloseButton' is defined but never used.","'imagesInCurrentAlbum' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"messageId":"343","fix":"344","desc":"345"},{"messageId":"346","fix":"347","desc":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [currentUrl, getSharedAlbumUrls]",{"range":"351","text":"352"},"Update the dependencies array to be: [userLoggedIn, albumDeleted, isUploaded, created, currentUser, firebaseFunctions]",{"range":"353","text":"354"},"removeEscape",{"range":"355","text":"356"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"357","text":"358"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",{"range":"359","text":"360"},[1296,1308],"[currentUrl, getSharedAlbumUrls]",[2072,2118],"[userLoggedIn, albumDeleted, isUploaded, created, currentUser, firebaseFunctions]",[3291,3292],"",[3291,3291],"\\",[1772,1798],"[isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]"]