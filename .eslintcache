[{"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js":"1","D:\\frontend\\Projects\\picully\\src\\App.js":"2","D:\\frontend\\Projects\\picully\\src\\index.js":"3","D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js":"4","D:\\frontend\\Projects\\picully\\src\\config\\firebase.js":"5","D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js":"6","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js":"7","D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js":"8","D:\\frontend\\Projects\\picully\\src\\views\\Home.js":"9","D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js":"10","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js":"11","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js":"12","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js":"13","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js":"14","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js":"15","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js":"16","D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js":"17","D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js":"18","D:\\frontend\\Projects\\picully\\src\\views\\About.js":"19","D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js":"20","D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js":"21","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js":"22","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js":"23","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js":"24","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js":"25","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js":"26","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js":"27","D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js":"28","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js":"29","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js":"30","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js":"31","D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js":"32","D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js":"33","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js":"34","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js":"35","D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js":"36","D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js":"37","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js":"38","D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js":"39","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js":"40"},{"size":5654,"mtime":1610635970507,"results":"41","hashOfConfig":"42"},{"size":1653,"mtime":1612429983720,"results":"43","hashOfConfig":"42"},{"size":914,"mtime":1610639033287,"results":"44","hashOfConfig":"42"},{"size":1818,"mtime":1611736151336,"results":"45","hashOfConfig":"42"},{"size":564,"mtime":1610613192949,"results":"46","hashOfConfig":"42"},{"size":8120,"mtime":1610886458710,"results":"47","hashOfConfig":"42"},{"size":375,"mtime":1610612732841,"results":"48","hashOfConfig":"42"},{"size":10152,"mtime":1612431440242,"results":"49","hashOfConfig":"42"},{"size":1133,"mtime":1610613193038,"results":"50","hashOfConfig":"42"},{"size":157,"mtime":1612431163167,"results":"51","hashOfConfig":"42"},{"size":3144,"mtime":1610612731075,"results":"52","hashOfConfig":"42"},{"size":4886,"mtime":1610613192912,"results":"53","hashOfConfig":"42"},{"size":755,"mtime":1610612731118,"results":"54","hashOfConfig":"42"},{"size":1115,"mtime":1612431450790,"results":"55","hashOfConfig":"42"},{"size":2841,"mtime":1610613192943,"results":"56","hashOfConfig":"42"},{"size":4118,"mtime":1610613192906,"results":"57","hashOfConfig":"42"},{"size":1262,"mtime":1610613192846,"results":"58","hashOfConfig":"42"},{"size":3977,"mtime":1612391730253,"results":"59","hashOfConfig":"42"},{"size":2857,"mtime":1610613193036,"results":"60","hashOfConfig":"42"},{"size":322,"mtime":1610612730553,"results":"61","hashOfConfig":"42"},{"size":592,"mtime":1610062161101,"results":"62","hashOfConfig":"42"},{"size":725,"mtime":1610621916998,"results":"63","hashOfConfig":"42"},{"size":5099,"mtime":1612431397551,"results":"64","hashOfConfig":"42"},{"size":1238,"mtime":1610613794156,"results":"65","hashOfConfig":"42"},{"size":1083,"mtime":1610625310235,"results":"66","hashOfConfig":"42"},{"size":8178,"mtime":1612430222170,"results":"67","hashOfConfig":"42"},{"size":1571,"mtime":1610614438713,"results":"68","hashOfConfig":"42"},{"size":2310,"mtime":1612431073047,"results":"69","hashOfConfig":"42"},{"size":5318,"mtime":1612430243655,"results":"70","hashOfConfig":"42"},{"size":562,"mtime":1610616106222,"results":"71","hashOfConfig":"42"},{"size":785,"mtime":1610666810237,"results":"72","hashOfConfig":"42"},{"size":2306,"mtime":1612431096275,"results":"73","hashOfConfig":"42"},{"size":2446,"mtime":1610665017034,"results":"74","hashOfConfig":"42"},{"size":437,"mtime":1610634049038,"results":"75","hashOfConfig":"42"},{"size":5249,"mtime":1612431184790,"results":"76","hashOfConfig":"42"},{"size":437,"mtime":1610613192861,"results":"77","hashOfConfig":"42"},{"size":263,"mtime":1610613192877,"results":"78","hashOfConfig":"42"},{"size":5120,"mtime":1612431256371,"results":"79","hashOfConfig":"42"},{"size":2258,"mtime":1612431430733,"results":"80","hashOfConfig":"42"},{"size":6069,"mtime":1612430215306,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"ekvwxz",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js",["180","181","182","183"],"import {useNavigate} from 'react-router-dom'\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Button,\r\n  Center,\r\n  Container,\r\n  Box,\r\n  Flex, \r\n  Spacer,\r\n  Text\r\n} from \"@chakra-ui/react\"\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useContext, useState } from 'react';\r\nimport { UpdateContext } from '../../contexts/UpdateContext';\r\n\r\n\r\n//Yup Validation schema for signing in\r\nconst SignInSchema = Yup.object().shape({\r\n  //email validation rules\r\n  email: Yup.string()\r\n  .email('invalid email.')\r\n  .required('Please enter a valid email'),\r\n  //pw validation rules\r\n  password: Yup.string()\r\n  .required('A valid password is required')\r\n  // .min(8, 'password not valid')\r\n  // .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n})\r\n\r\nconst SignIn = () => {\r\n  const navigate = useNavigate()\r\n  const {signupIsClicked, setSignUpIsClicked, setUserLoggedIn} = useContext(UpdateContext)\r\n  const { logout, login, currentUser } = useAuth()\r\n  const handleSignOut = () => logout();\r\n  const handleSignUp = () => setSignUpIsClicked(!signupIsClicked)\r\n  return (\r\n  \r\n    \r\n    //formik handling form state \r\n    <Flex \r\n    justify=\"center\" \r\n    align=\"center\" \r\n    minW={[\"sm\", \"md\", \"lg\", \"xl\"]}\r\n    minH={[\"sm\", \"md\", \"lg\", \"xl\"]}\r\n    >\r\n        <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={SignInSchema}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          try { \r\n            await login(values.email, values.password) // \r\n            setSubmitting(false)\r\n            setUserLoggedIn(true)\r\n            navigate(\"/\")\r\n\r\n        } catch (err) {\r\n            console.log('error', err)\r\n        }\r\n        }}\r\n      >\r\n          {(props) => (\r\n            \r\n            <Form >\r\n              <Field name=\"email\">\r\n                {({ field, form }) => (\r\n                  <Box p={[\"sm\", \"md\", \"lg\", \"xl\"]}>\r\n                    <FormControl isInvalid={form.errors.email && form.touched.email} isRequired>\r\n                      <FormLabel color=\"white\" htmlFor=\"email\" p={[\"sm\", \"md\", \"lg\", \"xl\"]}>Email</FormLabel>\r\n                      <Input \r\n                        {...field}\r\n                        focusBorderColor=\"white\"\r\n                        value={props.values.email}\r\n                        id=\"email\"\r\n                        color=\"white\"\r\n                        type=\"email\"\r\n                        placeholder=\"email\" \r\n                        onChange={props.handleChange} \r\n                        onBlur={props.handleBlur} \r\n                      />\r\n                      <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                    </FormControl>\r\n                  </Box>\r\n                )}\r\n              </Field>\r\n              <Field name=\"password\" >\r\n                {({ field, form }) => (\r\n                  <Box p={[\"sm\", \"md\", \"lg\", \"xl\"]}>\r\n                    <FormControl isInvalid={form.errors.password && form.touched.password} isRequired >\r\n                      <FormLabel htmlFor=\"password\" color=\"white\" fontWeight=\"bold\" mt=\"16px\">Password</FormLabel>\r\n                      <Input  \r\n                        {...field}\r\n                        color=\"white\"\r\n                        focusBorderColor=\"white\"\r\n                        value={props.values.password}\r\n                        id=\"password\" \r\n                        type=\"password\"\r\n                        placeholder=\"password\" \r\n                        onChange={props.handleChange} \r\n                        onBlur={props.handleBlur} />\r\n                      <FormErrorMessage>{form.errors.password}</FormErrorMessage>\r\n                    </FormControl>\r\n                  </Box>\r\n                )}\r\n              </Field>\r\n           \r\n                {\r\n\r\n                !currentUser ?\r\n                <>\r\n                <Container p=\"10px\"  mt=\"14px\">\r\n                  <Text as=\"i\" color=\"white\">\r\n                    Not a member yet? Sign up today!\r\n                  </Text>\r\n                </Container>\r\n                <Flex\r\n                justify=\"space-around\"\r\n                align=\"center\"\r\n                direction={[\"row\", \"row\", \"row\", \"row\"]}>\r\n                  <Box>\r\n                    <Button\r\n                      mt={4}\r\n                      background=\"white\"\r\n                      p={[\"20.2px\", \"md\", \"lg\", \"xl\"]}\r\n                      color=\"teal.500\"\r\n                      isLoading={props.isSubmitting}\r\n                      type=\"submit\"\r\n                      >\r\n                      Sign in\r\n                    </Button>\r\n                  </Box>\r\n                  <Box>\r\n                    <Button\r\n                        mt={4}\r\n                        color=\"white\"\r\n                        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\r\n                        onClick={handleSignUp}\r\n                        _hover={{\r\n                          transition: \"all 0.6s ease-out\",\r\n                          color: \"linear-gradient(to right, #3ebac6 0%, #8b539e 50%, #e53782 100%)\"\r\n                        }}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Box>\r\n                </Flex>\r\n                </>\r\n                :\r\n                <Button onClick={handleSignOut}>Sign Out</Button>\r\n                }\r\n             \r\n            \r\n            </Form>\r\n        \r\n          )}\r\n        </Formik>\r\n      </Flex>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n",["184","185"],"D:\\frontend\\Projects\\picully\\src\\App.js",[],["186","187"],"D:\\frontend\\Projects\\picully\\src\\index.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js",["188"],"import React, { useContext, useState, useEffect,createContext } from \"react\"\r\nimport { auth } from \"../config/firebase\"\r\nimport { FirebaseContext } from \"./FirebaseContext\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase/app\";\r\nconst AuthContext = createContext()\r\n\r\n\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const db = firebase.firestore()\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const signup = (email, password, firstname, lastname) => {\r\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\r\n     return db.collection('users').doc(cred.user.uid).set({\r\n       firstName: firstname,\r\n       lastName: lastname,\r\n     })\r\n })\r\n }\r\n\r\n  const login = (email, password) => { \r\n    try {\r\n      auth.signInWithEmailAndPassword(email, password) \r\n    }\r\n    catch  {\r\n        console.log(\"failed to log in\")\r\n    }\r\n  }\r\n\r\n\r\n  const logout = () => {\r\n    return auth.signOut()\r\n  }\r\n\r\n  const resetPassword = (email) => {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  const updateEmail = (email) => {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  const updatePassword = (password) => {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n",["189","190"],"D:\\frontend\\Projects\\picully\\src\\config\\firebase.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js",["191","192"],"import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport { useAuth } from './AuthContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const FirebaseContext = createContext()\r\n\r\nexport const useFire = () => useContext(FirebaseContext)\r\n\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n  \r\n\r\n  const db = firebase.firestore()\r\n  const storage = firebase.storage()\r\n\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  const [currentAlbum, setCurrentAlbum] = useState()\r\n  const [collectionData, setCollectionData] = useState([])\r\n  const [albumCollection, setAlbumCollection] = useState([])\r\n  const [created, setCreated] = useState(false)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [images, setImages] = useState([])\r\n  const {currentUser} = useAuth()\r\n  const [updatedAlbumTitle, setUpdatedAlbumTitle] = useState(false)\r\n\r\n\r\n  const firebaseFunctions = {\r\n    //get user collection\r\n    getUsers: async () => await db.collection('users').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const userData = []\r\n      snapshot.forEach((doc) => {\r\n        userData.push({\r\n          id: doc.data().id,\r\n          firstname: doc.data().firstname,\r\n          lastname: doc.data().lastname,\r\n        })\r\n      });\r\n      console.log(\"user info\", userData)\r\n      setCollectionData([...userData])\r\n      setIsLoading(false)\r\n      return userData\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //get a user by id\r\n    getUser: async (id) => await db.collection('users').doc(id).get().then(doc => {\r\n      setIsLoading(true)\r\n      const user = {\r\n        firstName: '',\r\n        lastName: '',\r\n        id: '',\r\n      }\r\n      user.firstName = doc.data().firstName\r\n      user.lastName = doc.data().lastName\r\n      user.id = doc.data().id\r\n      setUserData({...user})\r\n      console.log(user)\r\n      setIsLoading(false)\r\n      return user\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //create User\r\n    createUser: async (firstname, lastname) => await db.collection('users').add({\r\n      firstname,\r\n      lastname,\r\n      createdAt: timestamp()\r\n    }).then(docRef => {\r\n      const dataRef = db.collection(\"users\").doc(docRef.id);\r\n      return dataRef.update({\r\n        id: dataRef.id\r\n     })\r\n    }),\r\n    //create album\r\n    createAlbum: async (name, desc, id) => {\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      const num = uuidv4()\r\n       await db.collection(\"albums\").add({\r\n        title: name,\r\n        description: desc,\r\n        owner_id: id,\r\n        images: [],\r\n        slug: name.replace(/\\s+/g, '-').toLowerCase() + `-${num}`,\r\n        createdAt: timestamp(),\r\n        id\r\n        \r\n      }).then(ref => {\r\n        ref.update({\r\n          id: ref.id\r\n      }).catch(\r\n       err => console.error(\"error\", err)   \r\n      )\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n  ,\r\n\r\n    createAlbumWithImages: async (title, desc, owner, id, images) => {\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      await db.collection(\"albums\").add({\r\n        title: title,\r\n        description: desc,\r\n        owner_id: owner,\r\n        images: [],\r\n        slug: title.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n        createdAt: timestamp(),\r\n        id\r\n        \r\n      }).then(ref => {   \r\n          ref.update({\r\n            id: ref.id        \r\n      }).then(async () => {\r\n        if(images.length){\r\n          await images.forEach(img => {\r\n            db.collection(\"images\").doc(img.id).update({\r\n              albums: firebase.firestore.FieldValue.arrayUnion\r\n              (\r\n                db.collection(\"albums\").doc(ref.id)\r\n              )\r\n            })\r\n          })    \r\n        }\r\n      }).catch(\r\n        err => console.error(\"error\", err)   \r\n       )\r\n      \r\n\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n    \r\n    \r\n    ,\r\n    updateAlbumName: async (id, newName) => {\r\n      let ref = db.collection(\"albums\").doc(id)\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setUpdatedAlbumTitle(true)\r\n      await ref.update({\r\n        title: newName,\r\n        slug: newName.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n      }).then(\r\n        setIsLoading(false),\r\n        setUpdatedAlbumTitle(false)\r\n        \r\n      ).catch(err => console.log(\"error\", err))\r\n \r\n    },\r\n      //get albums\r\n    getUserAlbums: async (id) => await db.collection('albums').where(\"owner_id\", \"==\", id).get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albums = []\r\n\r\n      snapshot.forEach((doc) => {\r\n        albums.push(doc.data())\r\n      });\r\n      console.log(\"album info\", albums)\r\n      setAlbumCollection([...albums])\r\n      setIsLoading(false)\r\n      return albums\r\n    }, err => {\r\n      console.log(err)\r\n    }),\r\n    getAlbumByTitle: async (name) => {\r\n     await db.collection('albums').where('title', '==', name).get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          const tempAlbums = []\r\n          let tempObj = doc.id\r\n          console.log(\"albums\")\r\n          tempAlbums.push(doc.data())\r\n          setAlbumCollection(tempAlbums)\r\n          setCurrentAlbum(tempObj)\r\n          setIsLoading(false)\r\n          return tempObj\r\n        })          \r\n      }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    }\r\n    ,\r\n    //get ablum by album id\r\n    getAlbumById: async (albumId) => {\r\n      // get ref\r\n      const albumIdRef = db.collection('albums')\r\n      setIsLoading(true)\r\n      albumIdRef\r\n      .where('id', '==', albumId)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        })\r\n        return items\r\n      })\r\n      \r\n  }\r\n\r\n    ,\r\n    //get images from collection\r\n    getImages: async (id) => await db.collection('images').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const imageArr = []\r\n      const userImgs = []\r\n      snapshot.forEach((doc) => {\r\n        imageArr.push({\r\n          title: doc.data().title,\r\n          path: doc.data().path,\r\n          size: doc.data().size,\r\n          ownderId: doc.data().owner_id,\r\n          url: doc.data().url\r\n        })\r\n      })\r\n      imageArr.forEach(item => {\r\n        if(item.ownerId === currentUser.uid) {\r\n          console.log(\"item has owner\", item)\r\n          userImgs.push(item)\r\n        }\r\n      })\r\n      setImages([...imageArr])\r\n      setIsLoading(false)\r\n      return imageArr\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    getImagesByAlbumId: async (id) => {\r\n       await db.collection(\"images\").where(\"album\", \"==\", id).get().then(querySnapshot => {\r\n        const imageArr = []\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data(), \"DATA\")\r\n            imageArr.push({\r\n              title: doc.data().title,\r\n              album: doc.data().album,\r\n              path: doc.data().path,\r\n              size: doc.data().size,\r\n              url: doc.data().url\r\n            })\r\n          })\r\n          console.log(\"image in current album\", imageArr, id)\r\n          // setImages([...imageArr])\r\n          setIsLoading(false)\r\n          return imageArr\r\n        })\r\n    .catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n    }\r\n     \r\n  }\r\n\r\n\r\n  const firebaseContextValue = {\r\n    firebaseFunctions,\r\n    collectionData,\r\n    userData,\r\n    isLoading,\r\n    timestamp,\r\n    db,\r\n    created,\r\n    updatedAlbumTitle,\r\n    setUpdatedAlbumTitle,\r\n    images,\r\n    albumCollection,\r\n    updated,\r\n    currentAlbum,\r\n    storage\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value=\r\n      {firebaseContextValue}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider >\r\n  )\r\n}\r\n","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js",[],"D:\\frontend\\Projects\\picully\\src\\views\\Home.js",["193","194","195","196","197","198","199","200"],"import { Box, Button, Center, Flex, Heading, Spinner } from \"@chakra-ui/react\"\r\nimport { useContext } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Albums from \"../components/album/AlbumGrid\"\r\nimport Console from \"../components/console/Console\"\r\nimport SignIn from \"../components/forms/SignIn\"\r\nimport Welcome from \"../components/Welcome\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { FirebaseContext } from \"../contexts/FirebaseContext\"\r\nimport About from \"./About\"\r\n\r\nconst Home = () => {\r\n  const {currentUser, logout} = useAuth()\r\n  const {isLoading} = useContext(FirebaseContext)\r\n\r\n  const navigate= useNavigate()\r\n  const handleSignOut = () => {\r\n    logout()\r\n    navigate('/sign-in')\r\n  }\r\n\r\n  return (\r\n      <>\r\n        { \r\n        !currentUser ? \r\n        <Welcome /> \r\n        : \r\n        isLoading ? \r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"blue.500\"\r\n          size=\"xl\"\r\n        /> \r\n        : \r\n        <Console />}\r\n        { !currentUser && <About />}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js",["201","202"],"import { Button, Flex, Heading, ListItem,Link, Spacer, UnorderedList} from '@chakra-ui/react'\r\nimport {useContext, useEffect} from 'react'\r\nimport {Link as ReactLink, useNavigate} from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { UpdateContext } from '../../contexts/UpdateContext';\r\n\r\nconst NavBar = () => {\r\nconst {signedUpIsClicked,setSignUpIsClicked} = useContext(UpdateContext)\r\nconst {currentUser, logout} = useAuth();\r\nconst navigate = useNavigate()\r\nconst handleSignUpMenuClick = () => setSignUpIsClicked(!signedUpIsClicked)\r\n\r\nconst handleSignOut = async () => { \r\n   try { \r\n     await logout() \r\n     navigate(\"/\") \r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n  return (\r\n    <Flex\r\n      color=\"teal.500\"\r\n      maxW=\"100vw\" \r\n      minW=\"100vw\"\r\n      h=\"80px\"\r\n      overflow=\"hidden\"\r\n      justify=\"space-between\"\r\n    >\r\n      <Flex justify=\"center\" align=\"center\">\r\n        <Heading color=\"teal.300\" ml=\"60px\" p=\"5px\" cursor=\"pointer\" _hover={{color: \"teal.200\"}}>Picully</Heading>\r\n      </Flex>\r\n\r\n      <Flex \r\n          justify=\"center\" \r\n          align=\"center\"\r\n          borderLeft=\"4px\"\r\n          borderColor=\"teal.500\"\r\n          pl=\"7rem\"\r\n          >\r\n        <UnorderedList\r\n          display=\"flex\" \r\n          justify=\"center\" \r\n          align=\"stretch\"\r\n          direction=\"row\" \r\n          styleType=\"none\"\r\n          fontSize={[\"1rem\", \"1rem\", \"1.1rem\", \"1.125rem\"]}\r\n          fontWeight=\"bold\"\r\n          role=\"navigation\" \r\n          aria-label=\"Main\"\r\n          mr=\"60px\"\r\n\r\n          cursor=\"pointer\"\r\n         >\r\n          <ListItem  \r\n            p={[\"4px\", \"6px\", \"8px\", \"16px\"]}\r\n            _hover=\r\n              {{\r\n                background: \"teal.500\",\r\n                color: \"white\"\r\n              }}  \r\n            >\r\n            <Link as={ReactLink} to=\"/\">Home</Link>\r\n          </ListItem>\r\n          <ListItem\r\n            p={[\"4px\", \"6px\", \"8px\", \"16px\"]}\r\n            _hover=\r\n              {{\r\n                background: \"teal.500\",\r\n                color: \"white\"\r\n              }}\r\n          >\r\n            <Link as={ReactLink} to=\"/\">About</Link>\r\n          </ListItem>\r\n          {\r\n          !currentUser ?\r\n          <ListItem >\r\n            <Button \r\n              onClick={handleSignUpMenuClick}\r\n              color=\"white\"\r\n              background=\"teal.500\"\r\n              mt=\"8px\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </ListItem>\r\n          :\r\n          <Button \r\n            onClick={handleSignOut}\r\n            color=\"white\"\r\n            background=\"teal.500\"\r\n            mt=\"8px\"\r\n          >\r\n            Sign out\r\n          </Button>\r\n          }\r\n          <ListItem  \r\n            p={[\"4px\", \"6px\", \"8px\", \"16px\"]} \r\n            mr={[\"2px\", \"4px\", \"8px\", \"16px\"]}\r\n            _hover=\r\n              {{\r\n                background: \"teal.500\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n            <Link as={ReactLink} to=\"/\">Contact</Link>\r\n          </ListItem>\r\n        </UnorderedList>\r\n        </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js",["203","204"],"import { Flex, Heading, ListItem, Link, Spacer, UnorderedList, Box, useDisclosure, CloseButton, Button } from '@chakra-ui/react'\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n} from \"@chakra-ui/react\"\r\nimport {Link as ReactLink} from 'react-router-dom'\r\nimport React, { useRef } from 'react'\r\nimport { ArrowForwardIcon, HamburgerIcon } from '@chakra-ui/icons'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nconst NavMobile = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {currentUser, logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n  return (\r\n    <>\r\n\r\n      <Flex justify=\"space-between\" align=\"center\" minW=\"100vw\">\r\n        <Heading \r\n        color=\"teal.300\" \r\n        ml={[\"1.4rem\", \"2rem\", \"2.3rem\", \"xl\"]}\r\n        mt={[\"1rem\", \"2rem\", \"2.3rem\", \"xl\"]}\r\n        >Picully</Heading>\r\n        <Box ref={boxRef} mt={[\"1.2rem\", \"md\", \"lg\", \"xl\"]} mr={[\"2rem\", \"md\", \"lg\", \"xl\"]} onClick={onOpen}>\r\n          {!isOpen && <HamburgerIcon w={[10, 12, 16]} h={[10, 12, 16]} />}\r\n        </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        background=\"green\"\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody display=\"flex\" justifyContent=\"center\"  alignItems=\"center\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                justify=\"center\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                 \r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Home</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">About</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Contact</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                  display=\"inline-flex\"\r\n                  justifyContent=\"space-between\"\r\n                  borderBottom=\"2px\" \r\n                  borderColor=\"teal.200\"\r\n                  width=\"200px\"\r\n                  pt=\"16\"\r\n                  mb=\"10\"\r\n                >\r\n                  <Box>\r\n                    <Link as={ReactLink} to=\"/\">Home</Link>\r\n                  </Box>\r\n                  <Box>\r\n                    <ArrowForwardIcon />\r\n                  </Box>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n              mb={[\"3rem\", \"18px\", \"20px\", \"22px\"]}\r\n            >\r\n              {\r\n                currentUser \r\n                ? \r\n                <Button\r\n                  mt={2}\r\n                  mb={8}\r\n                  background=\"teal.200\"\r\n                  color=\"white\"\r\n                  size=\"md\"\r\n                  onClick={handleSignOut}\r\n                >\r\n                  Sign out\r\n                </Button>\r\n                :\r\n                \"\"\r\n              }     \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobile\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js",["205"],"import { HamburgerIcon } from '@chakra-ui/icons'\r\nimport { Box, CloseButton, DrawerBody, Link, DrawerContent, DrawerHeader, DrawerOverlay, Flex, ListItem, UnorderedList, DrawerFooter, Drawer, useDisclosure, Button, Center } from '@chakra-ui/react'\r\nimport React, { useRef } from 'react'\r\nimport { Link as ReactLink } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nconst NavMobileSignedIn = () => {\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n\r\n  return (\r\n    <>\r\n    <Flex justify=\"flex-end\" align=\"center\" minW=\"100vw\">\r\n      <Box ref={boxRef} mt=\"10px\" mr=\"24px\" onClick={onOpen}>\r\n        {!isOpen && <HamburgerIcon w={10} h={10} />}\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        size={[\"full\", \"md\", \"lg\", \"0\"]}\r\n\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody background=\"green\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                p=\"10px\" \r\n                justify=\"space-around\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                ml=\"87px\" \r\n                mt=\"50px\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem>\r\n                  <Link as={ReactLink} to=\"/\">Home</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums\" pr=\"5px\">Albums</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/profile\">Profile</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums/create\">Upload</Link>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n            >\r\n                <Button\r\n                mt={4}\r\n                mb={8}\r\n                background=\"teal.500\"\r\n                color=\"white\"\r\n                onClick={handleSignOut}\r\n                \r\n                >Sign out</Button>          \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobileSignedIn\r\n","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js",["206","207","208","209","210","211"],"import { Button, Flex, Heading, ListItem,Link, Spacer, UnorderedList, Avatar, Wrap, WrapItem, Tag, TagLabel, Box, Spinner} from '@chakra-ui/react'\r\nimport {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {Link as ReactLink, useNavigate} from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { FirebaseContext } from '../../contexts/FirebaseContext';\r\n\r\nconst NavBarSignedIn = () => {\r\n\r\n  const {firebaseFunctions} = useContext(FirebaseContext)\r\n  const {currentUser, logout} = useAuth();\r\n  const [user, setUser] = useState(false)\r\n  // const [isLoading, setIsLoading] = useState(false)\r\n  const [err, setError] = useState(false)\r\n  const navigate = useNavigate()\r\n  \r\n//get user info on mount\r\nuseEffect(() => {\r\n  const getUserInfoOnMount = async () => {\r\n    let res = await firebaseFunctions.getUser(currentUser.uid)\r\n    if(res) {\r\n      setUser(res)\r\n      console.log(user)\r\n    }\r\n    else {\r\n      setError('')\r\n    }\r\n  }\r\n  getUserInfoOnMount()\r\n}, [])\r\n\r\n\r\n\r\nconst handleGoHome = () => navigate('/console')\r\n\r\n const handleSignOut = async () => { \r\n   try { \r\n     await logout() \r\n     navigate(\"/\") \r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n  return (\r\n    <Flex \r\n      color=\"teal.500\"\r\n      maxW=\"1200px\" \r\n      minW=\"100vw\"\r\n      h=\"80px\"\r\n      justify=\"space-between\"\r\n    >\r\n      <Flex justify=\"center\" align=\"center\" cursor=\"pointer\">\r\n        <Heading ml=\"60px\" p=\"5px\" onClick={handleGoHome}>Picully</Heading>\r\n      </Flex>\r\n      <Spacer />\r\n      <Flex justify=\"center\" align=\"center\">\r\n        <UnorderedList\r\n          display=\"flex\" \r\n          justify=\"center\" \r\n          align=\"stretch\"\r\n          direction=\"row\" \r\n          styleType=\"none\"\r\n          fontSize={[\"1rem\", \"1rem\", \"1.1rem\", \"1.125rem\"]}\r\n          fontWeight=\"bold\"\r\n          role=\"navigation\" \r\n          aria-label=\"Main\"\r\n          mr=\"60px\"\r\n         >\r\n          <ListItem  \r\n            p={[\"4px\", \"6px\", \"8px\", \"16px\"]}\r\n            _hover=\r\n              {{\r\n                background: \"teal.500\",\r\n                color: \"white\"\r\n              }}  \r\n            >\r\n            <Link as={ReactLink} to=\"/explore\">Explore</Link>\r\n          </ListItem>\r\n          <ListItem\r\n            p={[\"4px\", \"6px\", \"8px\", \"16px\"]}\r\n            _hover=\r\n              {{\r\n                border: \"2px solid teal.500\",\r\n                color: \"white\"\r\n              }}\r\n          >\r\n            <Link as={ReactLink} to=\"console/albums\">Albums</Link>\r\n          </ListItem>\r\n          <ListItem\r\n            p={[\"4px\", \"6px\", \"8px\", \"16px\"]}\r\n            _hover=\r\n              {{\r\n                border: \"2px solid teal.500\",\r\n                color: \"white\"\r\n              }}\r\n          >\r\n            <Link as={ReactLink} to=\"/console\">Home</Link>\r\n          </ListItem>\r\n\r\n          <ListItem  \r\n          m={[\"4px\", \"6px\", \"8px\", \"16px\"]}\r\n          _hover=\r\n              {{\r\n                border: \"2px solid teal.500\",\r\n                color: \"white\"\r\n              }}\r\n          >            \r\n            <Link as={ReactLink} to={\"/\"}>Profile</Link> \r\n          </ListItem>\r\n          :\r\n          <Button \r\n            onClick={handleSignOut}\r\n            color=\"white\"\r\n            background=\"teal.500\"\r\n            mt=\"8px\"\r\n          >\r\n            Sign out\r\n          </Button>\r\n          <Box>\r\n              <Tag \r\n                size=\"lg\" \r\n                colorScheme=\"teal\" \r\n                borderRadius=\"full\" \r\n                ml=\"3rem\"\r\n                mt=\"2px\" \r\n                p=\"5px\"\r\n              >\r\n                <Avatar\r\n                  src=\"https://bit.ly/broken-link\"\r\n                  size=\"md\"\r\n                  name={user.firstName}\r\n                  ml={1}\r\n                  mr={2}\r\n                 \r\n                />\r\n                <TagLabel pt=\"10px\" pb=\"10px\" pr=\"12px\" pl=\"5px\">{user ? `${user.firstName} ${user.lastName}` : 'error'}</TagLabel>\r\n              </Tag>\r\n            </Box>\r\n        </UnorderedList>\r\n        </Flex>\r\n    </Flex>\r\n            \r\n  )\r\n}\r\n\r\nexport default NavBarSignedIn\r\n","D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js",[],["212","213"],"D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js",["214","215","216"],"import React, { useState, createContext, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext';\r\nimport { useFire } from './FirebaseContext';\r\n\r\nexport const UpdateContext = createContext();\r\n\r\n\r\nexport const useUpdate = () => useContext(UpdateContext)\r\n  \r\n\r\nexport const UpdateProvider = props => {\r\n    \r\n    const [signUpIsClicked, setSignUpIsClicked] = useState(false)\r\n    const [imageDeleted, setImageDeleted] = useState(false)\r\n    const [currentAlbumID, setCurrentAlbumID] = useState(undefined)\r\n    const [currentAlbum, setCurrentAlbum] = useState(undefined)\r\n    const [currentUserAlbums, setCurrentUserAlbums] = useState([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false)\r\n    const {firebaseFunctions, db} = useFire()\r\n    const [isUploaded, setIsUploaded] = useState(false)\r\n    const [pickedImages, setPickedImages] = useState([])\r\n    const [discardedImages, setDiscardedImages] = useState([])\r\n    const [sharedIamges, setSharedImages] = useState([])\r\n    const [imagesInCurrentAlbum, setImagesInCurrentAlbum] = useState([])\r\n    const [imagesOwnedByCurrentUser, setImagesOwnedByCurrentUser] = useState()\r\n    const [albumToShare, setAlbumToShare] = useState(undefined)\r\n    const {currentUser} = useAuth()\r\n    const {created} = useFire()\r\n    const [sharedUrl, setSharedUrl] = useState(false)\r\n\r\n    const [userSelectedImagesToKeep, setuserSelectedImagesToKeep] = useState([])\r\n    const [userSelectedImagesToDelete, setuserSelectedImagesToDelete] = useState([])\r\n\r\n    useEffect(() => {\r\n        ( async () => {\r\n            if(currentUser !== null) {\r\n                setCurrentUserAlbums(\"\")\r\n                console.log(\"I RAN\")\r\n                let res = await firebaseFunctions.getUserAlbums(currentUser.uid)\r\n                console.log(res)\r\n                setCurrentUserAlbums(res)\r\n                let ref = db.collection(\"images\").where(\"album\", \"==\", currentUser.uid)\r\n                ref.get().then(snapshot => {\r\n                    let userImages = []\r\n                    snapshot.forEach(doc => {\r\n                        console.log(doc.data())\r\n                        userImages.push(doc.data())\r\n                        setImagesOwnedByCurrentUser(userImages)\r\n                    })\r\n                })\r\n            }\r\n            else return;\r\n        }\r\n\r\n        )()\r\n        if(imageDeleted){\r\n        setImageDeleted(false)\r\n        }\r\n        \r\n    }, [userLoggedIn,isUploaded, imageDeleted, created])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if(albumToShare){\r\n                await db.collection(\"images\").where(\"albums\", \"array-contains\", albumToShare.id).get().then(snapshot => {\r\n                    snapshot.forEach(doc => {\r\n                        console.log(doc.data())\r\n                    })\r\n                })\r\n            }\r\n        })()\r\n       \r\n    }, [albumToShare])\r\n\r\n    const updateContextValue = {\r\n        \r\n      signUpIsClicked,\r\n      setSignUpIsClicked,\r\n      currentAlbumID,\r\n      setCurrentUserAlbums,\r\n      currentUserAlbums,\r\n      setUserLoggedIn,\r\n      userLoggedIn,\r\n      imagesOwnedByCurrentUser,\r\n      setCurrentAlbumID,\r\n      imageDeleted,\r\n      imagesInCurrentAlbum,\r\n      setCurrentAlbum,\r\n      currentAlbum,\r\n      setImagesInCurrentAlbum,\r\n      isUploaded,\r\n      pickedImages,\r\n      setPickedImages,\r\n      setIsUploaded,\r\n      setImageDeleted,\r\n      setAlbumToShare,\r\n      albumToShare,\r\n      setSharedUrl,\r\n      sharedUrl,\r\n      sharedIamges,\r\n      setSharedImages,\r\n      discardedImages,\r\n      setDiscardedImages,\r\n      userSelectedImagesToKeep, \r\n      setuserSelectedImagesToKeep,\r\n      userSelectedImagesToDelete, \r\n      setuserSelectedImagesToDelete   \r\n    }\r\n\r\n    return (\r\n        <UpdateContext.Provider\r\n            value=\r\n            {updateContextValue}\r\n        >\r\n            {props.children}\r\n        </UpdateContext.Provider>\r\n    )\r\n}","D:\\frontend\\Projects\\picully\\src\\views\\About.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js",["217"],"import { useEffect, useState } from \"react\"\r\nimport { useFire } from \"../contexts/FirebaseContext\"\r\n\r\nconst useAlbums = (id) => {\r\n  \r\n\tconst [albums, setAlbums] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n  const {db} = useFire()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = db.collection('albums').onSnapshot(snapshot => {\r\n\t\t\tsetLoading(true)\r\n\t\t\tconst snapshotAlbums = []\r\n\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\tif(id === doc.owner_id){\r\n\t\t\t\t\tconsole.log(\"TRUE\")\r\n\t\t\t\t}\r\n\t\t\t\tsnapshotAlbums.push({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tsetAlbums(snapshotAlbums)\r\n\t\t\tsetLoading(false)\r\n\t\t})\r\n\r\n\t\treturn unsubscribe\r\n\t}, [])\r\n\r\n\treturn { albums, loading }\r\n}\r\n\r\nexport default useAlbums\r\n","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js",["218","219","220","221","222","223","224","225","226"],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js",["227","228"],"import { Grid, GridItem, Heading, Image, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nconst \r\nPreviewImageGrid = ({images, previewURLS}) => {\r\n  return (\r\n    <Grid templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} gap={3} h=\"600px\">\r\n    {\r\n      previewURLS !== undefined && previewURLS.length && \r\n      previewURLS.map((prevItem, index) => (\r\n      \r\n          <GridItem p=\"2rem\" colSpan={1} overflow=\"hidden\" colStart={2} key={index}>\r\n            <Image src={prevItem.url} alt={prevItem.title} h=\"400px\" w=\"300px\" objectFit=\"contain\"/>     \r\n          </GridItem>\r\n      ))\r\n    }\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default PreviewImageGrid\r\n",["229","230"],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js",["231","232","233"],"import { useState, useEffect } from 'react';\r\nimport { boolean } from 'yup/lib/locale';\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useFire } from '../contexts/FirebaseContext';\r\n\r\nconst useUploadImage = (image, albumId, userId) => {\r\n\tconst [uploadProgress, setUploadProgress] = useState(null);\r\n\tconst [uploadedImage, setUploadedImage] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  \r\n\tconst { currentUser } = useAuth()\r\n  const { db, storage, timestamp } = useFire()\r\n\r\n   const onUpload = () => {\r\n\r\n\t\tif (!image) {\r\n\t\t\tsetUploadProgress(null);\r\n\t\t\tsetUploadedImage(null);\r\n\t\t\tsetError(null);\r\n\t\t\tsetIsSuccess(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// reset environment\r\n\t\tsetError(null);\r\n\t\tsetIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`images/${currentUser.uid}/${image.name}`);\r\n\r\n\t\t// upload image to fileRef\r\n\t\tconst uploadTask = fileRef.put(image);\r\n\r\n\t\t// attach listener for `state_changed`-event\r\n\t\tuploadTask.on('state_changed', taskSnapshot => {\r\n\t\t\tsetUploadProgress(Math.round((taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100));\r\n\t\t});\r\n\r\n\t\t// are we there yet?\r\n\t\tuploadTask.then(async snapshot => {\r\n\r\n\t\t\t// retrieve URL to uploaded file\r\n\t\t\tconst url = await snapshot.ref.getDownloadURL();\r\n\t\t\t\r\n\t\r\n\t\t\t// add uploaded file to db\r\n\t\t\tconst img = {\r\n\t\t\t\ttitle: image.name,\r\n\t\t\t\talbum: image.ablumId,\r\n\t\t\t\towner: userId ? userId : currentUser.uid,\r\n\t\t\t\tpath: snapshot.ref.fullPath,\r\n\t\t\t\tsize: image.size,\r\n\t\t\t\ttype: image.type,\r\n\t\t\t\tcreatedAt: (image.createdAt = timestamp()),\r\n\t\t\t\tid: \r\n\t\t\t\turl,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (albumId) {\r\n\t\t\t\timg.album = db.collection('albums').doc(albumId)\r\n\t\t\t}\r\n\r\n\t\t\tif(userId) {\r\n\t\t\t\timg.userId = db.collection('users').doc(userId)\r\n\t\t\t}\r\n\r\n\t\t\t// add image to collection\r\n\t\t\tawait db.collection('images').add(img)\r\n\r\n\t\t\t// let user know we're done\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tsetUploadProgress(null);\r\n\r\n\t\t\t// file has been added to db, refresh list of files\r\n\t\t\tsetUploadedImage(img);\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tconsole.error(\"SUCCESS\", img);\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.error(\"File upload triggered an error!\", error);\r\n\t\t\tsetError({\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg: `Image could not be uploaded due to an error (${error.code})`\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\treturn { uploadProgress, uploadedImage, error, isSuccess };\r\n}\r\n\r\nexport default useUploadImage;\r\n","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js",["234"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js",[],["235","236"],"D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js",[],{"ruleId":"237","severity":1,"message":"238","line":7,"column":3,"nodeType":"239","messageId":"240","endLine":7,"endColumn":17},{"ruleId":"237","severity":1,"message":"241","line":9,"column":3,"nodeType":"239","messageId":"240","endLine":9,"endColumn":9},{"ruleId":"237","severity":1,"message":"242","line":13,"column":3,"nodeType":"239","messageId":"240","endLine":13,"endColumn":9},{"ruleId":"237","severity":1,"message":"243","line":19,"column":22,"nodeType":"239","messageId":"240","endLine":19,"endColumn":30},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"244","replacedBy":"248"},{"ruleId":"246","replacedBy":"249"},{"ruleId":"237","severity":1,"message":"250","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":25},{"ruleId":"244","replacedBy":"251"},{"ruleId":"246","replacedBy":"252"},{"ruleId":"237","severity":1,"message":"253","line":1,"column":42,"nodeType":"239","messageId":"240","endLine":1,"endColumn":51},{"ruleId":"237","severity":1,"message":"254","line":25,"column":19,"nodeType":"239","messageId":"240","endLine":25,"endColumn":29},{"ruleId":"237","severity":1,"message":"255","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"256","line":1,"column":15,"nodeType":"239","messageId":"240","endLine":1,"endColumn":21},{"ruleId":"237","severity":1,"message":"241","line":1,"column":23,"nodeType":"239","messageId":"240","endLine":1,"endColumn":29},{"ruleId":"237","severity":1,"message":"257","line":1,"column":31,"nodeType":"239","messageId":"240","endLine":1,"endColumn":35},{"ruleId":"237","severity":1,"message":"258","line":1,"column":37,"nodeType":"239","messageId":"240","endLine":1,"endColumn":44},{"ruleId":"237","severity":1,"message":"259","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":14},{"ruleId":"237","severity":1,"message":"260","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"237","severity":1,"message":"261","line":17,"column":9,"nodeType":"239","messageId":"240","endLine":17,"endColumn":22},{"ruleId":"237","severity":1,"message":"242","line":1,"column":48,"nodeType":"239","messageId":"240","endLine":1,"endColumn":54},{"ruleId":"237","severity":1,"message":"253","line":2,"column":21,"nodeType":"239","messageId":"240","endLine":2,"endColumn":30},{"ruleId":"237","severity":1,"message":"242","line":1,"column":41,"nodeType":"239","messageId":"240","endLine":1,"endColumn":47},{"ruleId":"237","severity":1,"message":"262","line":9,"column":3,"nodeType":"239","messageId":"240","endLine":9,"endColumn":20},{"ruleId":"237","severity":1,"message":"241","line":2,"column":166,"nodeType":"239","messageId":"240","endLine":2,"endColumn":172},{"ruleId":"237","severity":1,"message":"263","line":1,"column":79,"nodeType":"239","messageId":"240","endLine":1,"endColumn":83},{"ruleId":"237","severity":1,"message":"264","line":1,"column":85,"nodeType":"239","messageId":"240","endLine":1,"endColumn":93},{"ruleId":"237","severity":1,"message":"265","line":1,"column":115,"nodeType":"239","messageId":"240","endLine":1,"endColumn":122},{"ruleId":"237","severity":1,"message":"266","line":2,"column":9,"nodeType":"239","messageId":"240","endLine":2,"endColumn":20},{"ruleId":"237","severity":1,"message":"267","line":13,"column":10,"nodeType":"239","messageId":"240","endLine":13,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":29,"column":4,"nodeType":"270","endLine":29,"endColumn":6,"suggestions":"271"},{"ruleId":"244","replacedBy":"272"},{"ruleId":"246","replacedBy":"273"},{"ruleId":"237","severity":1,"message":"274","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":19},{"ruleId":"268","severity":1,"message":"275","line":61,"column":8,"nodeType":"270","endLine":61,"endColumn":56,"suggestions":"276"},{"ruleId":"268","severity":1,"message":"277","line":74,"column":8,"nodeType":"270","endLine":74,"endColumn":22,"suggestions":"278"},{"ruleId":"268","severity":1,"message":"279","line":29,"column":5,"nodeType":"270","endLine":29,"endColumn":7,"suggestions":"280"},{"ruleId":"237","severity":1,"message":"281","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":18},{"ruleId":"237","severity":1,"message":"282","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":15},{"ruleId":"237","severity":1,"message":"257","line":4,"column":22,"nodeType":"239","messageId":"240","endLine":4,"endColumn":26},{"ruleId":"237","severity":1,"message":"283","line":4,"column":35,"nodeType":"239","messageId":"240","endLine":4,"endColumn":40},{"ruleId":"237","severity":1,"message":"253","line":5,"column":17,"nodeType":"239","messageId":"240","endLine":5,"endColumn":26},{"ruleId":"237","severity":1,"message":"243","line":5,"column":28,"nodeType":"239","messageId":"240","endLine":5,"endColumn":36},{"ruleId":"237","severity":1,"message":"274","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":19},{"ruleId":"237","severity":1,"message":"256","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"284","line":8,"column":9,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},{"ruleId":"237","severity":1,"message":"258","line":1,"column":26,"nodeType":"239","messageId":"240","endLine":1,"endColumn":33},{"ruleId":"237","severity":1,"message":"285","line":1,"column":42,"nodeType":"239","messageId":"240","endLine":1,"endColumn":46},{"ruleId":"244","replacedBy":"286"},{"ruleId":"246","replacedBy":"287"},{"ruleId":"237","severity":1,"message":"253","line":1,"column":20,"nodeType":"239","messageId":"240","endLine":1,"endColumn":29},{"ruleId":"237","severity":1,"message":"288","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":17},{"ruleId":"237","severity":1,"message":"289","line":16,"column":10,"nodeType":"239","messageId":"240","endLine":16,"endColumn":18},{"ruleId":"268","severity":1,"message":"290","line":16,"column":5,"nodeType":"270","endLine":16,"endColumn":12,"suggestions":"291"},{"ruleId":"244","replacedBy":"292"},{"ruleId":"246","replacedBy":"293"},"no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","'Center' is defined but never used.","'Spacer' is defined but never used.","'useState' is defined but never used.","no-native-reassign",["294"],"no-negated-in-lhs",["295"],["294"],["295"],"'FirebaseContext' is defined but never used.",["294"],["295"],"'useEffect' is defined but never used.","'setUpdated' is assigned a value but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Flex' is defined but never used.","'Heading' is defined but never used.","'Albums' is defined but never used.","'SignIn' is defined but never used.","'handleSignOut' is assigned a value but never used.","'DrawerCloseButton' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.","'Spinner' is defined but never used.","'useCallback' is defined but never used.","'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.uid', 'firebaseFunctions', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["296"],["294"],["295"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser', 'db', and 'firebaseFunctions'. Either include them or remove the dependency array.",["297"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has missing dependencies: 'db' and 'id'. Either include them or remove the dependency array.",["299"],"'StarIcon' is defined but never used.","'Badge' is defined but never used.","'Input' is defined but never used.","'useFire' is defined but never used.","'Text' is defined but never used.",["294"],["295"],"'boolean' is defined but never used.","'onUpload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db' and 'storage'. Either include them or remove the dependency array.",["300"],["294"],["295"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [currentUser.uid, firebaseFunctions, user]",{"range":"311","text":"312"},"Update the dependencies array to be: [userLoggedIn, isUploaded, imageDeleted, created, currentUser, firebaseFunctions, db]",{"range":"313","text":"314"},"Update the dependencies array to be: [albumToShare, db]",{"range":"315","text":"316"},"Update the dependencies array to be: [db, id]",{"range":"317","text":"318"},"Update the dependencies array to be: [db, image, storage]",{"range":"319","text":"320"},[1013,1015],"[currentUser.uid, firebaseFunctions, user]",[2485,2533],"[userLoggedIn, isUploaded, imageDeleted, created, currentUser, firebaseFunctions, db]",[2924,2938],"[albumToShare, db]",[658,660],"[db, id]",[381,388],"[db, image, storage]"]