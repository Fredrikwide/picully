[{"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js":"1","D:\\frontend\\Projects\\picully\\src\\App.js":"2","D:\\frontend\\Projects\\picully\\src\\index.js":"3","D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js":"4","D:\\frontend\\Projects\\picully\\src\\config\\firebase.js":"5","D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js":"6","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js":"7","D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js":"8","D:\\frontend\\Projects\\picully\\src\\views\\Home.js":"9","D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js":"10","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js":"11","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js":"12","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js":"13","D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js":"14","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js":"15","D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js":"16","D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js":"17","D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js":"18","D:\\frontend\\Projects\\picully\\src\\views\\About.js":"19","D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js":"20","D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js":"21","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js":"22","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js":"23","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js":"24","D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js":"25","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js":"26","D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js":"27","D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js":"28","D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js":"29","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js":"30","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js":"31","D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js":"32","D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js":"33","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js":"34","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js":"35","D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js":"36","D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js":"37","D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js":"38","D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js":"39","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js":"40"},{"size":5691,"mtime":1612431789783,"results":"41","hashOfConfig":"42"},{"size":1912,"mtime":1619950461488,"results":"43","hashOfConfig":"42"},{"size":914,"mtime":1610639033287,"results":"44","hashOfConfig":"42"},{"size":1816,"mtime":1619788738586,"results":"45","hashOfConfig":"42"},{"size":564,"mtime":1610613192949,"results":"46","hashOfConfig":"42"},{"size":8160,"mtime":1619951539990,"results":"47","hashOfConfig":"42"},{"size":375,"mtime":1610612732841,"results":"48","hashOfConfig":"42"},{"size":10152,"mtime":1619961509738,"results":"49","hashOfConfig":"42"},{"size":1120,"mtime":1619956853471,"results":"50","hashOfConfig":"42"},{"size":159,"mtime":1619961439697,"results":"51","hashOfConfig":"42"},{"size":3181,"mtime":1612431844229,"results":"52","hashOfConfig":"42"},{"size":4886,"mtime":1610613192912,"results":"53","hashOfConfig":"42"},{"size":755,"mtime":1610612731118,"results":"54","hashOfConfig":"42"},{"size":1152,"mtime":1612431828807,"results":"55","hashOfConfig":"42"},{"size":2841,"mtime":1610613192943,"results":"56","hashOfConfig":"57"},{"size":4215,"mtime":1619961418006,"results":"58","hashOfConfig":"42"},{"size":1262,"mtime":1610613192846,"results":"59","hashOfConfig":"42"},{"size":4164,"mtime":1619957864210,"results":"60","hashOfConfig":"42"},{"size":2857,"mtime":1610613193036,"results":"61","hashOfConfig":"42"},{"size":322,"mtime":1610612730553,"results":"62","hashOfConfig":"42"},{"size":592,"mtime":1610062161101,"results":"63","hashOfConfig":"57"},{"size":725,"mtime":1610621916998,"results":"64","hashOfConfig":"57"},{"size":5099,"mtime":1619961512196,"results":"65","hashOfConfig":"42"},{"size":1238,"mtime":1610613794156,"results":"66","hashOfConfig":"57"},{"size":1083,"mtime":1610625310235,"results":"67","hashOfConfig":"57"},{"size":7718,"mtime":1619963219028,"results":"68","hashOfConfig":"42"},{"size":1571,"mtime":1610614438713,"results":"69","hashOfConfig":"57"},{"size":2460,"mtime":1619957543811,"results":"70","hashOfConfig":"42"},{"size":5291,"mtime":1619955271121,"results":"71","hashOfConfig":"42"},{"size":562,"mtime":1610616106222,"results":"72","hashOfConfig":"57"},{"size":785,"mtime":1610666810237,"results":"73","hashOfConfig":"57"},{"size":2304,"mtime":1619961506777,"results":"74","hashOfConfig":"42"},{"size":2446,"mtime":1610665017034,"results":"75","hashOfConfig":"57"},{"size":439,"mtime":1619962058747,"results":"76","hashOfConfig":"42"},{"size":5286,"mtime":1612431817305,"results":"77","hashOfConfig":"42"},{"size":437,"mtime":1610613192861,"results":"78","hashOfConfig":"42"},{"size":263,"mtime":1610613192877,"results":"79","hashOfConfig":"42"},{"size":5157,"mtime":1612431808519,"results":"80","hashOfConfig":"57"},{"size":2353,"mtime":1619791359915,"results":"81","hashOfConfig":"42"},{"size":6069,"mtime":1619961552636,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iyll2y",{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},"ekvwxz",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignIn.js",[],"D:\\frontend\\Projects\\picully\\src\\App.js",["178","179"],"D:\\frontend\\Projects\\picully\\src\\index.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\AuthContext.js",["180"],"import React, { useContext, useState, useEffect,createContext } from \"react\"\r\nimport { auth } from \"../config/firebase\"\r\nimport { FirebaseContext } from \"./FirebaseContext\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase/app\";\r\nconst AuthContext = createContext()\r\n\r\n\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const db = firebase.firestore()\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const signup = (email, password, firstname, lastname) => {\r\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\r\n     return db.collection('users').doc(cred.user.uid).set({\r\n       firstName: firstname,\r\n       lastName: lastname,\r\n     })\r\n })\r\n }\r\n\r\n  const login = (email, password) => { \r\n    try {\r\n      auth.signInWithEmailAndPassword(email, password) \r\n    }\r\n    catch  {\r\n        console.log(\"failed to log in\")\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    return auth.signOut()\r\n  }\r\n\r\n  const resetPassword = (email) => {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  const updateEmail = (email) => {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  const updatePassword = (password) => {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n",["181","182"],"D:\\frontend\\Projects\\picully\\src\\config\\firebase.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\FirebaseContext.js",["183","184"],"import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\";\r\nimport { useAuth } from './AuthContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const FirebaseContext = createContext()\r\n\r\nexport const useFire = () => useContext(FirebaseContext)\r\n\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n  \r\n\r\n  const db = firebase.firestore()\r\n  const storage = firebase.storage()\r\n\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  const [currentAlbum, setCurrentAlbum] = useState()\r\n  const [collectionData, setCollectionData] = useState([])\r\n  const [albumCollection, setAlbumCollection] = useState([])\r\n  const [created, setCreated] = useState(false)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [images, setImages] = useState([])\r\n  const {currentUser} = useAuth()\r\n  const [updatedAlbumTitle, setUpdatedAlbumTitle] = useState(false)\r\n\r\n\r\n  const firebaseFunctions = {\r\n    //get user collection\r\n    getUsers: async () => await db.collection('users').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const userData = []\r\n      snapshot.forEach((doc) => {\r\n        userData.push({\r\n          id: doc.data().id,\r\n          firstname: doc.data().firstname,\r\n          lastname: doc.data().lastname,\r\n        })\r\n      });\r\n      console.log(\"user info\", userData)\r\n      setCollectionData([...userData])\r\n      setIsLoading(false)\r\n      return userData\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //get a user by id\r\n    getUser: async (id) => await db.collection('users').doc(id).get().then(doc => {\r\n      setIsLoading(true)\r\n      const user = {\r\n        firstName: '',\r\n        lastName: '',\r\n        id: '',\r\n      }\r\n      user.firstName = doc.data().firstName\r\n      user.lastName = doc.data().lastName\r\n      user.id = doc.data().id\r\n      setUserData({...user})\r\n      console.log(user)\r\n      setIsLoading(false)\r\n      return user\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    //create User\r\n    createUser: async (firstname, lastname) => await db.collection('users').add({\r\n      firstname,\r\n      lastname,\r\n      createdAt: timestamp()\r\n    }).then(docRef => {\r\n      const dataRef = db.collection(\"users\").doc(docRef.id);\r\n      return dataRef.update({\r\n        id: dataRef.id\r\n     })\r\n    }),\r\n    //create album\r\n    createAlbum: async (name, desc, id) => {\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      const num = uuidv4()\r\n       await db.collection(\"albums\").add({\r\n        title: name,\r\n        description: desc,\r\n        owner_id: id,\r\n        images: [],\r\n        sharedUrl: \"\",\r\n        slug: name.replace(/\\s+/g, '-').toLowerCase() + `-${num}`,\r\n        createdAt: timestamp(),\r\n        id\r\n        \r\n      }).then(ref => {\r\n        ref.update({\r\n          id: ref.id\r\n      }).catch(\r\n       err => console.error(\"error\", err)   \r\n      )\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n  ,\r\n\r\n    createAlbumWithImages: async (title, desc, owner, id, images) => {\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setCreated(false)\r\n      await db.collection(\"albums\").add({\r\n        title: title,\r\n        description: desc,\r\n        owner_id: owner,\r\n        images: [],\r\n        sharedUrl: \"\",\r\n        slug: title.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n        createdAt: timestamp(),\r\n        id\r\n        \r\n      }).then(ref => {   \r\n          ref.update({\r\n            id: ref.id        \r\n      }).then(async () => {\r\n        if(images.length){\r\n          await images.forEach(img => {\r\n            db.collection(\"images\").doc(img.id).update({\r\n              albums: firebase.firestore.FieldValue.arrayUnion\r\n              (\r\n                db.collection(\"albums\").doc(ref.id)\r\n              )\r\n            })\r\n          })    \r\n        }\r\n      }).catch(\r\n        err => console.error(\"error\", err)   \r\n       )\r\n\r\n      setIsLoading(false)\r\n      setCreated(true)\r\n      \r\n      })    \r\n    }\r\n    \r\n    \r\n    ,\r\n    updateAlbumName: async (id, newName) => {\r\n      let ref = db.collection(\"albums\").doc(id)\r\n      const num = uuidv4()\r\n      setIsLoading(true)\r\n      setUpdatedAlbumTitle(true)\r\n      await ref.update({\r\n        title: newName,\r\n        slug: newName.replace(/\\s+/g, '-').toLowerCase()+ `-${num}`,\r\n      }).then(\r\n        setIsLoading(false),\r\n        setUpdatedAlbumTitle(false)\r\n        \r\n      ).catch(err => console.log(\"error\", err))\r\n \r\n    },\r\n      //get albums\r\n    getUserAlbums: async (id) => await db.collection('albums').where(\"owner_id\", \"==\", id).get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const albums = []\r\n\r\n      snapshot.forEach((doc) => {\r\n        albums.push(doc.data())\r\n      });\r\n      console.log(\"album info\", albums)\r\n      setAlbumCollection([...albums])\r\n      setIsLoading(false)\r\n      return albums\r\n    }, err => {\r\n      console.log(err)\r\n    }),\r\n    getAlbumByTitle: async (name) => {\r\n     await db.collection('albums').where('title', '==', name).get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          const tempAlbums = []\r\n          let tempObj = doc.id\r\n          console.log(\"albums\")\r\n          tempAlbums.push(doc.data())\r\n          setAlbumCollection(tempAlbums)\r\n          setCurrentAlbum(tempObj)\r\n          setIsLoading(false)\r\n          return tempObj\r\n        })          \r\n      }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    }\r\n    ,\r\n    //get ablum by album id\r\n    getAlbumById: async (albumId) => {\r\n      // get ref\r\n      const albumIdRef = db.collection('albums')\r\n      setIsLoading(true)\r\n      albumIdRef\r\n      .where('id', '==', albumId)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        })\r\n        return items\r\n      })\r\n      \r\n  }\r\n\r\n    ,\r\n    //get images from collection\r\n    getImages: async (id) => await db.collection('images').get().then((snapshot) => {\r\n      setIsLoading(true)\r\n      const imageArr = []\r\n      const userImgs = []\r\n      snapshot.forEach((doc) => {\r\n        imageArr.push({\r\n          title: doc.data().title,\r\n          path: doc.data().path,\r\n          size: doc.data().size,\r\n          ownderId: doc.data().owner_id,\r\n          url: doc.data().url\r\n        })\r\n      })\r\n      imageArr.forEach(item => {\r\n        if(item.ownerId === currentUser.uid) {\r\n          console.log(\"item has owner\", item)\r\n          userImgs.push(item)\r\n        }\r\n      })\r\n      setImages([...imageArr])\r\n      setIsLoading(false)\r\n      return imageArr\r\n    }, err => {\r\n      console.log(err)\r\n    })\r\n    ,\r\n    getImagesByAlbumId: async (id) => {\r\n       await db.collection(\"images\").where(\"album\", \"==\", id).get().then(querySnapshot => {\r\n        const imageArr = []\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data(), \"DATA\")\r\n            imageArr.push({\r\n              title: doc.data().title,\r\n              album: doc.data().album,\r\n              path: doc.data().path,\r\n              size: doc.data().size,\r\n              url: doc.data().url\r\n            })\r\n          })\r\n          console.log(\"image in current album\", imageArr, id)\r\n          // setImages([...imageArr])\r\n          setIsLoading(false)\r\n          return imageArr\r\n        })\r\n    .catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n    }\r\n     \r\n  }\r\n\r\n\r\n  const firebaseContextValue = {\r\n    firebaseFunctions,\r\n    collectionData,\r\n    userData,\r\n    isLoading,\r\n    timestamp,\r\n    db,\r\n    created,\r\n    updatedAlbumTitle,\r\n    setUpdatedAlbumTitle,\r\n    images,\r\n    albumCollection,\r\n    updated,\r\n    currentAlbum,\r\n    storage\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value=\r\n      {firebaseContextValue}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider >\r\n  )\r\n}\r\n","D:\\frontend\\Projects\\picully\\src\\reportWebVitals.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\SignUp.js",[],"D:\\frontend\\Projects\\picully\\src\\views\\Home.js",["185","186","187","188","189","190","191","192"],"import { Box, Button, Center, Flex, Heading, Spinner } from \"@chakra-ui/react\"\r\nimport { useContext } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Albums from \"../components/album/AlbumGrid\"\r\nimport Console from \"../components/console/Console\"\r\nimport SignIn from \"../components/forms/SignIn\"\r\nimport Welcome from \"../components/Welcome\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { FirebaseContext } from \"../contexts/FirebaseContext\"\r\nimport About from \"./About\"\r\n\r\nconst Home = () => {\r\n  const {currentUser, logout} = useAuth()\r\n  const {isLoading} = useContext(FirebaseContext)\r\n\r\n  const navigate= useNavigate()\r\n\r\n  const handleSignOut = () => {\r\n    logout()\r\n    navigate('/sign-in')\r\n  }\r\n\r\n  return (\r\n      <>\r\n        { \r\n        !currentUser ? \r\n        <Welcome /> \r\n        : \r\n        isLoading ? \r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"blue.500\"\r\n          size=\"xl\"\r\n        /> \r\n        : \r\n        <Albums signOut={handleSignOut} />}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\frontend\\Projects\\picully\\src\\components\\console\\Console.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBar.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobile.js",["193","194"],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavIndex.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Welcome.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavMobileSignedIn.js",["195"],"import { HamburgerIcon } from '@chakra-ui/icons'\r\nimport { Box, CloseButton, DrawerBody, Link, DrawerContent, DrawerHeader, DrawerOverlay, Flex, ListItem, UnorderedList, DrawerFooter, Drawer, useDisclosure, Button, Center } from '@chakra-ui/react'\r\nimport React, { useRef } from 'react'\r\nimport { Link as ReactLink } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nconst NavMobileSignedIn = () => {\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const boxRef = useRef()\r\n  const {logout} = useAuth()\r\n  const handleSignOut = () => logout()\r\n\r\n  return (\r\n    <>\r\n    <Flex justify=\"flex-end\" align=\"center\" minW=\"100vw\">\r\n      <Box ref={boxRef} mt=\"10px\" mr=\"24px\" onClick={onOpen}>\r\n        {!isOpen && <HamburgerIcon w={10} h={10} />}\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={boxRef}\r\n        size={[\"full\", \"md\", \"lg\", \"0\"]}\r\n\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <Flex justify=\"space-around\" align=\"center\" mt=\"20px\">\r\n              <DrawerHeader textAlign=\"center\">Menu</DrawerHeader>\r\n              <Box>\r\n                <CloseButton onClick={onClose}/>\r\n              </Box>\r\n            </Flex>\r\n            <DrawerBody background=\"green\">\r\n              <UnorderedList \r\n                display=\"flex\" \r\n                styleType=\"none\" \r\n                p=\"10px\" \r\n                justify=\"space-around\" \r\n                align=\"center\" \r\n                flexDirection=\"column\" \r\n                ml=\"87px\" \r\n                mt=\"50px\" \r\n                fontSize=\"1.3rem\"\r\n              >\r\n                <ListItem>\r\n                  <Link as={ReactLink} to=\"/\">Home</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums\" pr=\"5px\">Albums</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/profile\">Profile</Link>\r\n                </ListItem>\r\n\r\n                <ListItem mt=\"30px\">\r\n                  <Link as={ReactLink} to=\"/albums/create\">Upload</Link>\r\n                </ListItem>\r\n\r\n              </UnorderedList>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter \r\n              display=\"flex\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\"\r\n            >\r\n                <Button\r\n                mt={4}\r\n                mb={8}\r\n                background=\"teal.500\"\r\n                color=\"white\"\r\n                onClick={handleSignOut}\r\n                \r\n                >Sign out</Button>          \r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default NavMobileSignedIn\r\n",["196","197"],"D:\\frontend\\Projects\\picully\\src\\components\\navigation\\NavBarSignedIn.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Hero\\WelcomeBanner.js",[],"D:\\frontend\\Projects\\picully\\src\\contexts\\UpdateContext.js",["198","199","200","201"],"D:\\frontend\\Projects\\picully\\src\\views\\About.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\AuthRoute.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\console\\imageData.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbums.js",["202"],"import { useEffect, useState } from \"react\"\r\nimport { useFire } from \"../contexts/FirebaseContext\"\r\n\r\nconst useAlbums = (id) => {\r\n  \r\n\tconst [albums, setAlbums] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n  const {db} = useFire()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = db.collection('albums').onSnapshot(snapshot => {\r\n\t\t\tsetLoading(true)\r\n\t\t\tconst snapshotAlbums = []\r\n\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\tif(id === doc.owner_id){\r\n\t\t\t\t\tconsole.log(\"TRUE\")\r\n\t\t\t\t}\r\n\t\t\t\tsnapshotAlbums.push({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tsetAlbums(snapshotAlbums)\r\n\t\t\tsetLoading(false)\r\n\t\t})\r\n\r\n\t\treturn unsubscribe\r\n\t}, [])\r\n\r\n\treturn { albums, loading }\r\n}\r\n\r\nexport default useAlbums\r\n","D:\\frontend\\Projects\\picully\\src\\components\\forms\\UploadImage.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\AlbumCard.js",["203","204","205","206","207","208","209","210","211"],"D:\\frontend\\Projects\\picully\\src\\hooks\\useAlbum.js",[],["212","213"],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\ImageGrid.js",["214","215","216","217"],"D:\\frontend\\Projects\\picully\\src\\components\\Cards\\ImageCard.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\AlbumGrid.js",["218"],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Album.js",["219"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport UploadImage from '../forms/UploadImage'\r\n\r\nimport { Flex, Heading, Input, Spinner, Text } from '@chakra-ui/react'\r\n\r\nimport ImageGrid from '../pictureItems/ImageGrid'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport {GrEdit} from 'react-icons/gr'\r\nimport {CheckIcon} from '@chakra-ui/icons'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n\r\n\r\n\r\nconst Album = () => {\r\n  const {slug} = useParams()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {firebaseFunctions, db, updatedAlbumTitle} = useFire()\r\n  const { \r\n          imageDeleted,\r\n          isUploaded, \r\n          currentAlbum,\r\n          imagesInCurrentAlbum,\r\n          setCurrentAlbum,\r\n          setImagesInCurrentAlbum} = useUpdate()\r\n  const [editAlbumName, setEditAlbumName] = useState(false)\r\n  const [editActive, setEditActive] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n  (async () => {\r\n    if(currentAlbum === undefined || !currentAlbum){\r\n      await db.collection(\"albums\").where(\"slug\", \"==\", slug).get().then(querySnapshot => {\r\n        let currAlb = \"\";\r\n        querySnapshot.forEach(doc => {\r\n          currAlb = doc.data()\r\n        })\r\n        setCurrentAlbum(currAlb)\r\n      })\r\n    } \r\n  })()\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, [])\r\n\r\n  const fetchImages = async (id) => {\r\n    try {\r\n    await db.collection(\"images\").where(\"albums\", \"array-contains\", db.collection(\"albums\").doc(id)).get().then(snapshot => {\r\n      setIsLoading(true)\r\n      let imgArr = []\r\n      snapshot.forEach(doc => {\r\n        imgArr.push(doc.data())\r\n      })\r\n      setImagesInCurrentAlbum([...imgArr])\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n  catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n   console.log(\"i ran\");\r\n    (async () => {\r\n      setImagesInCurrentAlbum(\"\")\r\n      setIsLoading(true)\r\n\r\n      if(currentAlbum) {\r\n          setCurrentAlbum(currentAlbum)\r\n          fetchImages(currentAlbum.id)\r\n          setIsLoading(false)\r\n      }\r\n      else {\r\n        console.error(\"no id found\")\r\n      }\r\n\r\n    })()\r\n  }, [imageDeleted, isUploaded, currentAlbum])\r\n\r\n\r\n\r\n  const handleEdit = () => {\r\n    setEditActive(true) \r\n  }\r\n\r\n\r\n  const handleChangeAlbumName = (e) => {\r\n      setEditAlbumName(e.target.value)\r\n  }\r\n\r\n  const handleFinishedEdit = async ()=> {\r\n    if(!editAlbumName) {\r\n      return \r\n    }\r\n   await firebaseFunctions.updateAlbumName(currentAlbum.id, editAlbumName)\r\n    setEditActive(false)\r\n  }\r\n\r\n useEffect(() => {\r\n\r\n }, [updatedAlbumTitle])\r\n\r\n \r\n\treturn (\r\n\t\t<>\r\n\r\n     { currentAlbum !== undefined &&\r\n\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { currentAlbum !== undefined && !isLoading &&\r\n        <UploadImage \r\n          albumId={currentAlbum.id !== undefined && currentAlbum.id } \r\n        /> }\r\n        <Flex \r\n          justify=\"center\" \r\n          align=\"center\" \r\n          direction=\"column\"\r\n        >     \r\n          <Text>Edit album name</Text>\r\n            <Flex \r\n              justify=\"space-around\" \r\n              align=\"center\" \r\n            >\r\n              {editActive &&\r\n                  <Flex \r\n                    justify=\"center\" \r\n                    align=\"center\"\r\n                  >\r\n                    <Input \r\n                      type=\"text\" \r\n                      placeholder={editAlbumName} \r\n                      onChange={handleChangeAlbumName}\r\n                      />\r\n                  </Flex> }\r\n              { !editActive ? \r\n              <Flex \r\n                justify=\"center\" \r\n                cursor=\"pointer\" \r\n                align=\"center\" \r\n                _hover={{backgroundColor: \"teal.300\"}} \r\n                >\r\n                <GrEdit \r\n                  color=\"white\" \r\n                  size={\"1.2rem\"} \r\n                  onClick={handleEdit}  />\r\n              </Flex>\r\n              : \r\n              <Flex \r\n              ml=\"1rem\" \r\n              justify=\"center\" \r\n              cursor=\"pointer\" \r\n              align=\"center\">\r\n                <CheckIcon  \r\n                  _hover={{color: \"teal.300\"}}\r\n                  w={6} \r\n                  h={6} \r\n                  color=\"teal.500\" \r\n                  onClick={handleFinishedEdit} \r\n                /> \r\n              </Flex>}\r\n            </Flex>\r\n                <Heading >{editAlbumName ? editAlbumName : currentAlbum.title }</Heading>        \r\n          </Flex>\r\n          {\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (imagesInCurrentAlbum !== undefined && imagesInCurrentAlbum.length \r\n          ? \r\n          <ImageGrid images={imagesInCurrentAlbum} albumId={currentAlbum.id} />\r\n          :\r\n\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n\r\n      </Flex>\r\n      }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Album\r\n\r\n","D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\previewImageGrid.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\PreviewImageGrid.js",["220","221"],"import { Grid, GridItem, Heading, Image, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nconst \r\nPreviewImageGrid = ({images, previewURLS}) => {\r\n  return (\r\n    <Grid templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(5, 1fr)\",]} templateRows={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\",\"repeat(3, 1fr)\",\"repeat(2, 1fr)\",]} gap={3} h=\"600px\">\r\n    {\r\n      previewURLS !== undefined && previewURLS.length && \r\n      previewURLS.map((prevItem, index) => (\r\n      \r\n          <GridItem p=\"2rem\" colSpan={1} overflow=\"hidden\" colStart={2} key={index}>\r\n            <Image src={prevItem.url} alt={prevItem.title} h=\"400px\" w=\"300px\" objectFit=\"contain\"/>     \r\n          </GridItem>\r\n      ))\r\n    }\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default PreviewImageGrid\r\n",["222","223"],"D:\\frontend\\Projects\\picully\\src\\components\\album\\Albums.js",[],"D:\\frontend\\Projects\\picully\\src\\hooks\\useUploadImage.js",["224","225","226"],"import { useState, useEffect } from 'react';\r\nimport { boolean } from 'yup/lib/locale';\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useFire } from '../contexts/FirebaseContext';\r\n\r\nconst useUploadImage = (image, albumId, userId) => {\r\n\tconst [uploadProgress, setUploadProgress] = useState(null);\r\n\tconst [uploadedImage, setUploadedImage] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  \r\n\tconst { currentUser } = useAuth()\r\n  const { db, storage, timestamp } = useFire()\r\n\r\n   const onUpload = () => {\r\n\r\n\t\tif (!image) {\r\n\t\t\tsetUploadProgress(null);\r\n\t\t\tsetUploadedImage(null);\r\n\t\t\tsetError(null);\r\n\t\t\tsetIsSuccess(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// reset environment\r\n\t\tsetError(null);\r\n\t\tsetIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`images/${currentUser.uid}/${image.name}`);\r\n\r\n\t\t// upload image to fileRef\r\n\t\tconst uploadTask = fileRef.put(image);\r\n\r\n\t\t// attach listener for `state_changed`-event\r\n\t\tuploadTask.on('state_changed', taskSnapshot => {\r\n\t\t\tsetUploadProgress(Math.round((taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100));\r\n\t\t});\r\n\r\n\t\t// are we there yet?\r\n\t\tuploadTask.then(async snapshot => {\r\n\r\n\t\t\t// retrieve URL to uploaded file\r\n\t\t\tconst url = await snapshot.ref.getDownloadURL();\r\n\t\t\t\r\n\t\r\n\t\t\t// add uploaded file to db\r\n\t\t\tconst img = {\r\n\t\t\t\ttitle: image.name,\r\n\t\t\t\talbum: image.ablumId,\r\n\t\t\t\towner: userId ? userId : currentUser.uid,\r\n\t\t\t\tpath: snapshot.ref.fullPath,\r\n\t\t\t\tsize: image.size,\r\n\t\t\t\ttype: image.type,\r\n\t\t\t\tcreatedAt: (image.createdAt = timestamp()),\r\n\t\t\t\tid: \r\n\t\t\t\turl,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (albumId) {\r\n\t\t\t\timg.album = db.collection('albums').doc(albumId)\r\n\t\t\t}\r\n\r\n\t\t\tif(userId) {\r\n\t\t\t\timg.userId = db.collection('users').doc(userId)\r\n\t\t\t}\r\n\r\n\t\t\t// add image to collection\r\n\t\t\tawait db.collection('images').add(img)\r\n\r\n\t\t\t// let user know we're done\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tsetUploadProgress(null);\r\n\r\n\t\t\t// file has been added to db, refresh list of files\r\n\t\t\tsetUploadedImage(img);\r\n\t\t\tsetIsSuccess(true);\r\n\t\t\tconsole.error(\"SUCCESS\", img);\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.error(\"File upload triggered an error!\", error);\r\n\t\t\tsetError({\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg: `Image could not be uploaded due to an error (${error.code})`\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\treturn { uploadProgress, uploadedImage, error, isSuccess };\r\n}\r\n\r\nexport default useUploadImage;\r\n","D:\\frontend\\Projects\\picully\\src\\hooks\\useDelete.js",["227"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateAlbumForm.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\CreateAlbum.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\error\\NotFound.js",[],["228","229"],"D:\\frontend\\Projects\\picully\\src\\components\\forms\\CreateNewAlbumFromPickedImages.js",[],"D:\\frontend\\Projects\\picully\\src\\components\\album\\SharedAlbum.js",["230","231"],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport SharedImageGrid from '../pictureItems/SharedImageGrid'\r\nimport { Flex, Heading, Spinner, Text } from '@chakra-ui/react'\r\nimport { useFire } from '../../contexts/FirebaseContext'\r\nimport { useUpdate } from '../../contexts/UpdateContext'\r\n/* eslint-disable no-unused-vars */\r\n\r\n\r\n\r\nconst SharedAlbum = ({album, images, url}) => {\r\n\r\n  console.log(url)\r\n  const {sharedIamges,albumToShare, sharedUrl} = useUpdate()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const {db} = useFire()\r\n  const [pics, setPics] = useState([])\r\n\r\n  const fetchImages = async (id) => {\r\n    try {\r\n    await db.collection(\"images\").where(\"albums\", \"array-contains\", db.collection(\"albums\").doc(id)).get().then(snapshot => {\r\n      setIsLoading(true)\r\n      let imgArr = []\r\n      snapshot.forEach(doc => {\r\n        imgArr.push(doc.data())\r\n      })\r\n      setPics(imgArr)\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n  catch (error) {\r\n    console.log(error)\r\n  }\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n   \r\n    (async () => {\r\n\r\n      setIsLoading(true)\r\n\r\n      if(album) {\r\n          fetchImages(album.id)\r\n          setIsLoading(false)\r\n      }\r\n      else {\r\n        console.error(\"no id found\")\r\n      }\r\n    })()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [album])\r\n\r\n\r\n\treturn (\r\n      <Flex \r\n        direction=\"column\" \r\n        mt=\"3rem\">\r\n        { \r\n\r\n        album !== undefined && !isLoading \r\n        ?\r\n          <Flex justify=\"center\" align=\"center\" >\r\n            <Heading >{album.title }</Heading>\r\n          </Flex>   \r\n          :\r\n          isLoading \r\n          ?\r\n          <Flex \r\n            justify=\"center\" \r\n            align=\"center\"\r\n          >\r\n          <Spinner   \r\n            thickness=\"6px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"teal.500\"\r\n            size=\"xl\"  \r\n          />\r\n          </Flex>\r\n          : \r\n          (images !== undefined && images.length \r\n          ? \r\n          <SharedImageGrid images={pics} albumId={album.id} />\r\n          :\r\n\r\n          <Flex justify=\"center\" align=\"center\">\r\n            <Text as=\"i\" mt=\"2rem\">here be dragons</Text>\r\n          </Flex>)\r\n        }\r\n      </Flex>\r\n\r\n\t)\r\n}\r\n\r\nexport default SharedAlbum\r\n\r\n",["232","233"],"D:\\frontend\\Projects\\picully\\src\\components\\pictureItems\\SharedImageGrid.js",[],{"ruleId":"234","severity":1,"message":"235","line":19,"column":22,"nodeType":"236","messageId":"237","endLine":19,"endColumn":35},{"ruleId":"238","severity":1,"message":"239","line":28,"column":6,"nodeType":"240","endLine":28,"endColumn":17,"suggestions":"241"},{"ruleId":"234","severity":1,"message":"242","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":25},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"234","severity":1,"message":"247","line":1,"column":42,"nodeType":"236","messageId":"237","endLine":1,"endColumn":51},{"ruleId":"234","severity":1,"message":"248","line":25,"column":19,"nodeType":"236","messageId":"237","endLine":25,"endColumn":29},{"ruleId":"234","severity":1,"message":"249","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":13},{"ruleId":"234","severity":1,"message":"250","line":1,"column":15,"nodeType":"236","messageId":"237","endLine":1,"endColumn":21},{"ruleId":"234","severity":1,"message":"251","line":1,"column":23,"nodeType":"236","messageId":"237","endLine":1,"endColumn":29},{"ruleId":"234","severity":1,"message":"252","line":1,"column":31,"nodeType":"236","messageId":"237","endLine":1,"endColumn":35},{"ruleId":"234","severity":1,"message":"253","line":1,"column":37,"nodeType":"236","messageId":"237","endLine":1,"endColumn":44},{"ruleId":"234","severity":1,"message":"254","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":15},{"ruleId":"234","severity":1,"message":"255","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":14},{"ruleId":"234","severity":1,"message":"256","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":13},{"ruleId":"234","severity":1,"message":"257","line":1,"column":41,"nodeType":"236","messageId":"237","endLine":1,"endColumn":47},{"ruleId":"234","severity":1,"message":"258","line":9,"column":3,"nodeType":"236","messageId":"237","endLine":9,"endColumn":20},{"ruleId":"234","severity":1,"message":"251","line":2,"column":166,"nodeType":"236","messageId":"237","endLine":2,"endColumn":172},{"ruleId":"243","replacedBy":"259"},{"ruleId":"245","replacedBy":"260"},{"ruleId":"234","severity":1,"message":"261","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":19},{"ruleId":"234","severity":1,"message":"262","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":19},{"ruleId":"238","severity":1,"message":"263","line":59,"column":8,"nodeType":"240","endLine":59,"endColumn":56,"suggestions":"264"},{"ruleId":"238","severity":1,"message":"265","line":72,"column":8,"nodeType":"240","endLine":72,"endColumn":22,"suggestions":"266"},{"ruleId":"238","severity":1,"message":"267","line":29,"column":5,"nodeType":"240","endLine":29,"endColumn":7,"suggestions":"268"},{"ruleId":"234","severity":1,"message":"269","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":18},{"ruleId":"234","severity":1,"message":"270","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":15},{"ruleId":"234","severity":1,"message":"252","line":4,"column":22,"nodeType":"236","messageId":"237","endLine":4,"endColumn":26},{"ruleId":"234","severity":1,"message":"271","line":4,"column":35,"nodeType":"236","messageId":"237","endLine":4,"endColumn":40},{"ruleId":"234","severity":1,"message":"247","line":5,"column":17,"nodeType":"236","messageId":"237","endLine":5,"endColumn":26},{"ruleId":"234","severity":1,"message":"272","line":5,"column":28,"nodeType":"236","messageId":"237","endLine":5,"endColumn":36},{"ruleId":"234","severity":1,"message":"261","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":19},{"ruleId":"234","severity":1,"message":"250","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":16},{"ruleId":"234","severity":1,"message":"273","line":8,"column":9,"nodeType":"236","messageId":"237","endLine":8,"endColumn":16},{"ruleId":"243","replacedBy":"274"},{"ruleId":"245","replacedBy":"275"},{"ruleId":"234","severity":1,"message":"276","line":13,"column":23,"nodeType":"236","messageId":"237","endLine":13,"endColumn":40},{"ruleId":"234","severity":1,"message":"277","line":26,"column":7,"nodeType":"236","messageId":"237","endLine":26,"endColumn":16},{"ruleId":"234","severity":1,"message":"278","line":29,"column":7,"nodeType":"236","messageId":"237","endLine":29,"endColumn":22},{"ruleId":"234","severity":1,"message":"279","line":34,"column":9,"nodeType":"236","messageId":"237","endLine":34,"endColumn":17},{"ruleId":"238","severity":1,"message":"280","line":12,"column":6,"nodeType":"240","endLine":12,"endColumn":8,"suggestions":"281"},{"ruleId":"238","severity":1,"message":"282","line":80,"column":6,"nodeType":"240","endLine":80,"endColumn":46,"suggestions":"283"},{"ruleId":"234","severity":1,"message":"253","line":1,"column":26,"nodeType":"236","messageId":"237","endLine":1,"endColumn":33},{"ruleId":"234","severity":1,"message":"284","line":1,"column":42,"nodeType":"236","messageId":"237","endLine":1,"endColumn":46},{"ruleId":"243","replacedBy":"285"},{"ruleId":"245","replacedBy":"286"},{"ruleId":"234","severity":1,"message":"247","line":1,"column":20,"nodeType":"236","messageId":"237","endLine":1,"endColumn":29},{"ruleId":"234","severity":1,"message":"287","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":17},{"ruleId":"234","severity":1,"message":"288","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":18},{"ruleId":"238","severity":1,"message":"289","line":16,"column":5,"nodeType":"240","endLine":16,"endColumn":12,"suggestions":"290"},{"ruleId":"243","replacedBy":"291"},{"ruleId":"245","replacedBy":"292"},{"ruleId":"234","severity":1,"message":"293","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":21},{"ruleId":"234","severity":1,"message":"261","line":2,"column":23,"nodeType":"236","messageId":"237","endLine":2,"endColumn":32},{"ruleId":"243","replacedBy":"294"},{"ruleId":"245","replacedBy":"295"},"no-unused-vars","'setCurrentUrl' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUrl'. Either include it or remove the dependency array.","ArrayExpression",["296"],"'FirebaseContext' is defined but never used.","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'useEffect' is defined but never used.","'setUpdated' is assigned a value but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Center' is defined but never used.","'Flex' is defined but never used.","'Heading' is defined but never used.","'Console' is defined but never used.","'SignIn' is defined but never used.","'About' is defined but never used.","'Spacer' is defined but never used.","'DrawerCloseButton' is defined but never used.",["297"],["298"],"'useParams' is defined but never used.","'SharedAlbum' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser', 'db', 'firebaseFunctions', and 'imagesInCurrentAlbum'. Either include them or remove the dependency array.",["299"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["300"],"React Hook useEffect has missing dependencies: 'db' and 'id'. Either include them or remove the dependency array.",["301"],"'StarIcon' is defined but never used.","'Badge' is defined but never used.","'Input' is defined but never used.","'useState' is defined but never used.","'useFire' is defined but never used.",["297"],["298"],"'firebaseFunctions' is assigned a value but never used.","'sharedUrl' is assigned a value but never used.","'setSharedImages' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUserAlbums'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has missing dependencies: 'fetchImages', 'setCurrentAlbum', and 'setImagesInCurrentAlbum'. Either include them or remove the dependency array.",["303"],"'Text' is defined but never used.",["297"],["298"],"'boolean' is defined but never used.","'onUpload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db' and 'storage'. Either include them or remove the dependency array.",["304"],["297"],["298"],"'useNavigate' is defined but never used.",["297"],["298"],{"desc":"305","fix":"306"},"no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [currentUrl, sharedUrl]",{"range":"319","text":"320"},"Update the dependencies array to be: [userLoggedIn, isUploaded, imageDeleted, created, imagesInCurrentAlbum, currentUser, firebaseFunctions, db]",{"range":"321","text":"322"},"Update the dependencies array to be: [albumToShare, db]",{"range":"323","text":"324"},"Update the dependencies array to be: [db, id]",{"range":"325","text":"326"},"Update the dependencies array to be: [currentUserAlbums]",{"range":"327","text":"328"},"Update the dependencies array to be: [imageDeleted, isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",{"range":"329","text":"330"},"Update the dependencies array to be: [db, image, storage]",{"range":"331","text":"332"},[1032,1043],"[currentUrl, sharedUrl]",[2579,2627],"[userLoggedIn, isUploaded, imageDeleted, created, imagesInCurrentAlbum, currentUser, firebaseFunctions, db]",[3041,3055],"[albumToShare, db]",[658,660],"[db, id]",[420,422],"[currentUserAlbums]",[2198,2238],"[imageDeleted, isUploaded, currentAlbum, setImagesInCurrentAlbum, setCurrentAlbum, fetchImages]",[383,390],"[db, image, storage]"]